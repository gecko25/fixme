{"version":3,"sources":["base64.js"],"names":[],"mappings":";;;;;;;;AAMA;AACE,MAAI,eAAe,mEAAmE,KAAnE,CAAyE,EAAzE,CAAf;;;;;AADN,SAME,CAAQ,MAAR,GAAiB,UAAU,MAAV,EAAkB;AACjC,QAAI,KAAK,MAAL,IAAe,SAAS,aAAa,MAAb,EAAqB;AAC/C,aAAO,aAAa,MAAb,CAAP,CAD+C;KAAjD;AAGA,UAAM,IAAI,SAAJ,CAAc,+BAA+B,MAA/B,CAApB,CAJiC;GAAlB;;;;;;AANnB,SAiBE,CAAQ,MAAR,GAAiB,UAAU,QAAV,EAAoB;AACnC,QAAI,OAAO,EAAP;AAD+B,QAE/B,OAAO,EAAP;;AAF+B,QAI/B,UAAU,EAAV;AAJ+B,QAK/B,UAAU,GAAV;;AAL+B,QAO/B,OAAO,EAAP;AAP+B,QAQ/B,OAAO,EAAP;;AAR+B,QAU/B,OAAO,EAAP;AAV+B,QAW/B,QAAQ,EAAR;;AAX+B,QAa/B,eAAe,EAAf,CAb+B;AAcnC,QAAI,eAAe,EAAf;;;AAd+B,QAiB/B,QAAQ,QAAR,IAAoB,YAAY,IAAZ,EAAkB;AACxC,aAAQ,WAAW,IAAX,CADgC;KAA1C;;;AAjBmC,QAsB/B,WAAW,QAAX,IAAuB,YAAY,OAAZ,EAAqB;AAC9C,aAAQ,WAAW,OAAX,GAAqB,YAArB,CADsC;KAAhD;;;AAtBmC,QA2B/B,QAAQ,QAAR,IAAoB,YAAY,IAAZ,EAAkB;AACxC,aAAQ,WAAW,IAAX,GAAkB,YAAlB,CADgC;KAA1C;;;AA3BmC,QAgC/B,YAAY,IAAZ,EAAkB;AACpB,aAAO,EAAP,CADoB;KAAtB;;;AAhCmC,QAqC/B,YAAY,KAAZ,EAAmB;AACrB,aAAO,EAAP,CADqB;KAAvB;;;AArCmC,WA0C5B,CAAC,CAAD,CA1C4B;GAApB,CAjBnB","file":"base64-compiled.js","sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n{\n  var intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n  /**\n   * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n   */\n  exports.encode = function (number) {\n    if (0 <= number && number < intToCharMap.length) {\n      return intToCharMap[number];\n    }\n    throw new TypeError(\"Must be between 0 and 63: \" + number);\n  };\n\n  /**\n   * Decode a single base 64 character code digit to an integer. Returns -1 on\n   * failure.\n   */\n  exports.decode = function (charCode) {\n    var bigA = 65;     // 'A'\n    var bigZ = 90;     // 'Z'\n\n    var littleA = 97;  // 'a'\n    var littleZ = 122; // 'z'\n\n    var zero = 48;     // '0'\n    var nine = 57;     // '9'\n\n    var plus = 43;     // '+'\n    var slash = 47;    // '/'\n\n    var littleOffset = 26;\n    var numberOffset = 52;\n\n    // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n    if (bigA <= charCode && charCode <= bigZ) {\n      return (charCode - bigA);\n    }\n\n    // 26 - 51: abcdefghijklmnopqrstuvwxyz\n    if (littleA <= charCode && charCode <= littleZ) {\n      return (charCode - littleA + littleOffset);\n    }\n\n    // 52 - 61: 0123456789\n    if (zero <= charCode && charCode <= nine) {\n      return (charCode - zero + numberOffset);\n    }\n\n    // 62: +\n    if (charCode == plus) {\n      return 62;\n    }\n\n    // 63: /\n    if (charCode == slash) {\n      return 63;\n    }\n\n    // Invalid base64 digit.\n    return -1;\n  };\n}\n"]}