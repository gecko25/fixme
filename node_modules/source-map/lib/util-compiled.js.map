{"version":3,"sources":["util.js"],"names":[],"mappings":"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","file":"util-compiled.js","sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n{\n  /**\n   * This is a helper function for getting values from parameter/options\n   * objects.\n   *\n   * @param args The object we are extracting values from\n   * @param name The name of the property we are getting.\n   * @param defaultValue An optional value to return if the property is missing\n   * from the object. If this is not specified and the property is missing, an\n   * error will be thrown.\n   */\n  function getArg(aArgs, aName, aDefaultValue) {\n    if (aName in aArgs) {\n      return aArgs[aName];\n    } else if (arguments.length === 3) {\n      return aDefaultValue;\n    } else {\n      throw new Error('\"' + aName + '\" is a required argument.');\n    }\n  }\n  exports.getArg = getArg;\n\n  var urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.]*)(?::(\\d+))?(\\S*)$/;\n  var dataUrlRegexp = /^data:.+\\,.+$/;\n\n  function urlParse(aUrl) {\n    var match = aUrl.match(urlRegexp);\n    if (!match) {\n      return null;\n    }\n    return {\n      scheme: match[1],\n      auth: match[2],\n      host: match[3],\n      port: match[4],\n      path: match[5]\n    };\n  }\n  exports.urlParse = urlParse;\n\n  function urlGenerate(aParsedUrl) {\n    var url = '';\n    if (aParsedUrl.scheme) {\n      url += aParsedUrl.scheme + ':';\n    }\n    url += '//';\n    if (aParsedUrl.auth) {\n      url += aParsedUrl.auth + '@';\n    }\n    if (aParsedUrl.host) {\n      url += aParsedUrl.host;\n    }\n    if (aParsedUrl.port) {\n      url += \":\" + aParsedUrl.port\n    }\n    if (aParsedUrl.path) {\n      url += aParsedUrl.path;\n    }\n    return url;\n  }\n  exports.urlGenerate = urlGenerate;\n\n  /**\n   * Normalizes a path, or the path portion of a URL:\n   *\n   * - Replaces consequtive slashes with one slash.\n   * - Removes unnecessary '.' parts.\n   * - Removes unnecessary '<dir>/..' parts.\n   *\n   * Based on code in the Node.js 'path' core module.\n   *\n   * @param aPath The path or url to normalize.\n   */\n  function normalize(aPath) {\n    var path = aPath;\n    var url = urlParse(aPath);\n    if (url) {\n      if (!url.path) {\n        return aPath;\n      }\n      path = url.path;\n    }\n    var isAbsolute = exports.isAbsolute(path);\n\n    var parts = path.split(/\\/+/);\n    for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n      part = parts[i];\n      if (part === '.') {\n        parts.splice(i, 1);\n      } else if (part === '..') {\n        up++;\n      } else if (up > 0) {\n        if (part === '') {\n          // The first part is blank if the path is absolute. Trying to go\n          // above the root is a no-op. Therefore we can remove all '..' parts\n          // directly after the root.\n          parts.splice(i + 1, up);\n          up = 0;\n        } else {\n          parts.splice(i, 2);\n          up--;\n        }\n      }\n    }\n    path = parts.join('/');\n\n    if (path === '') {\n      path = isAbsolute ? '/' : '.';\n    }\n\n    if (url) {\n      url.path = path;\n      return urlGenerate(url);\n    }\n    return path;\n  }\n  exports.normalize = normalize;\n\n  /**\n   * Joins two paths/URLs.\n   *\n   * @param aRoot The root path or URL.\n   * @param aPath The path or URL to be joined with the root.\n   *\n   * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n   *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n   *   first.\n   * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n   *   is updated with the result and aRoot is returned. Otherwise the result\n   *   is returned.\n   *   - If aPath is absolute, the result is aPath.\n   *   - Otherwise the two paths are joined with a slash.\n   * - Joining for example 'http://' and 'www.example.com' is also supported.\n   */\n  function join(aRoot, aPath) {\n    if (aRoot === \"\") {\n      aRoot = \".\";\n    }\n    if (aPath === \"\") {\n      aPath = \".\";\n    }\n    var aPathUrl = urlParse(aPath);\n    var aRootUrl = urlParse(aRoot);\n    if (aRootUrl) {\n      aRoot = aRootUrl.path || '/';\n    }\n\n    // `join(foo, '//www.example.org')`\n    if (aPathUrl && !aPathUrl.scheme) {\n      if (aRootUrl) {\n        aPathUrl.scheme = aRootUrl.scheme;\n      }\n      return urlGenerate(aPathUrl);\n    }\n\n    if (aPathUrl || aPath.match(dataUrlRegexp)) {\n      return aPath;\n    }\n\n    // `join('http://', 'www.example.com')`\n    if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n      aRootUrl.host = aPath;\n      return urlGenerate(aRootUrl);\n    }\n\n    var joined = aPath.charAt(0) === '/'\n      ? aPath\n      : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n    if (aRootUrl) {\n      aRootUrl.path = joined;\n      return urlGenerate(aRootUrl);\n    }\n    return joined;\n  }\n  exports.join = join;\n\n  exports.isAbsolute = function (aPath) {\n    return aPath.charAt(0) === '/' || !!aPath.match(urlRegexp);\n  };\n\n  /**\n   * Make a path relative to a URL or another path.\n   *\n   * @param aRoot The root path or URL.\n   * @param aPath The path or URL to be made relative to aRoot.\n   */\n  function relative(aRoot, aPath) {\n    if (aRoot === \"\") {\n      aRoot = \".\";\n    }\n\n    aRoot = aRoot.replace(/\\/$/, '');\n\n    // It is possible for the path to be above the root. In this case, simply\n    // checking whether the root is a prefix of the path won't work. Instead, we\n    // need to remove components from the root one by one, until either we find\n    // a prefix that fits, or we run out of components to remove.\n    var level = 0;\n    while (aPath.indexOf(aRoot + '/') !== 0) {\n      var index = aRoot.lastIndexOf(\"/\");\n      if (index < 0) {\n        return aPath;\n      }\n\n      // If the only part of the root that is left is the scheme (i.e. http://,\n      // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n      // have exhausted all components, so the path is not relative to the root.\n      aRoot = aRoot.slice(0, index);\n      if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n        return aPath;\n      }\n\n      ++level;\n    }\n\n    // Make sure we add a \"../\" for each component we removed from the root.\n    return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n  }\n  exports.relative = relative;\n\n  /**\n   * Because behavior goes wacky when you set `__proto__` on objects, we\n   * have to prefix all the strings in our set with an arbitrary character.\n   *\n   * See https://github.com/mozilla/source-map/pull/31 and\n   * https://github.com/mozilla/source-map/issues/30\n   *\n   * @param String aStr\n   */\n  function toSetString(aStr) {\n    return '$' + aStr;\n  }\n  exports.toSetString = toSetString;\n\n  function fromSetString(aStr) {\n    return aStr.substr(1);\n  }\n  exports.fromSetString = fromSetString;\n\n  /**\n   * Comparator between two mappings where the original positions are compared.\n   *\n   * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n   * mappings with the same original source/line/column, but different generated\n   * line and column the same. Useful when searching for a mapping with a\n   * stubbed out mapping.\n   */\n  function compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n    var cmp = mappingA.source - mappingB.source;\n    if (cmp !== 0) {\n      return cmp;\n    }\n\n    cmp = mappingA.originalLine - mappingB.originalLine;\n    if (cmp !== 0) {\n      return cmp;\n    }\n\n    cmp = mappingA.originalColumn - mappingB.originalColumn;\n    if (cmp !== 0 || onlyCompareOriginal) {\n      return cmp;\n    }\n\n    cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n    if (cmp !== 0) {\n      return cmp;\n    }\n\n    cmp = mappingA.generatedLine - mappingB.generatedLine;\n    if (cmp !== 0) {\n      return cmp;\n    }\n\n    return mappingA.name - mappingB.name;\n  }\n  exports.compareByOriginalPositions = compareByOriginalPositions;\n\n  /**\n   * Comparator between two mappings with deflated source and name indices where\n   * the generated positions are compared.\n   *\n   * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n   * mappings with the same generated line and column, but different\n   * source/name/original line and column the same. Useful when searching for a\n   * mapping with a stubbed out mapping.\n   */\n  function compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n    var cmp = mappingA.generatedLine - mappingB.generatedLine;\n    if (cmp !== 0) {\n      return cmp;\n    }\n\n    cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n    if (cmp !== 0 || onlyCompareGenerated) {\n      return cmp;\n    }\n\n    cmp = mappingA.source - mappingB.source;\n    if (cmp !== 0) {\n      return cmp;\n    }\n\n    cmp = mappingA.originalLine - mappingB.originalLine;\n    if (cmp !== 0) {\n      return cmp;\n    }\n\n    cmp = mappingA.originalColumn - mappingB.originalColumn;\n    if (cmp !== 0) {\n      return cmp;\n    }\n\n    return mappingA.name - mappingB.name;\n  }\n  exports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\n  function strcmp(aStr1, aStr2) {\n    if (aStr1 === aStr2) {\n      return 0;\n    }\n\n    if (aStr1 > aStr2) {\n      return 1;\n    }\n\n    return -1;\n  }\n\n  /**\n   * Comparator between two mappings with inflated source and name strings where\n   * the generated positions are compared.\n   */\n  function compareByGeneratedPositionsInflated(mappingA, mappingB) {\n    var cmp = mappingA.generatedLine - mappingB.generatedLine;\n    if (cmp !== 0) {\n      return cmp;\n    }\n\n    cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n    if (cmp !== 0) {\n      return cmp;\n    }\n\n    cmp = strcmp(mappingA.source, mappingB.source);\n    if (cmp !== 0) {\n      return cmp;\n    }\n\n    cmp = mappingA.originalLine - mappingB.originalLine;\n    if (cmp !== 0) {\n      return cmp;\n    }\n\n    cmp = mappingA.originalColumn - mappingB.originalColumn;\n    if (cmp !== 0) {\n      return cmp;\n    }\n\n    return strcmp(mappingA.name, mappingB.name);\n  }\n  exports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n}\n"]}