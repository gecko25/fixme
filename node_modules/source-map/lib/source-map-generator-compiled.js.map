{"version":3,"sources":["source-map-generator.js"],"names":[],"mappings":"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","file":"source-map-generator-compiled.js","sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n{\n  var base64VLQ = require('./base64-vlq');\n  var util = require('./util');\n  var ArraySet = require('./array-set').ArraySet;\n  var MappingList = require('./mapping-list').MappingList;\n\n  /**\n   * An instance of the SourceMapGenerator represents a source map which is\n   * being built incrementally. You may pass an object with the following\n   * properties:\n   *\n   *   - file: The filename of the generated source.\n   *   - sourceRoot: A root for all relative URLs in this source map.\n   */\n  function SourceMapGenerator(aArgs) {\n    if (!aArgs) {\n      aArgs = {};\n    }\n    this._file = util.getArg(aArgs, 'file', null);\n    this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n    this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n    this._sources = new ArraySet();\n    this._names = new ArraySet();\n    this._mappings = new MappingList();\n    this._sourcesContents = null;\n  }\n\n  SourceMapGenerator.prototype._version = 3;\n\n  /**\n   * Creates a new SourceMapGenerator based on a SourceMapConsumer\n   *\n   * @param aSourceMapConsumer The SourceMap.\n   */\n  SourceMapGenerator.fromSourceMap =\n    function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n      var sourceRoot = aSourceMapConsumer.sourceRoot;\n      var generator = new SourceMapGenerator({\n        file: aSourceMapConsumer.file,\n        sourceRoot: sourceRoot\n      });\n      aSourceMapConsumer.eachMapping(function (mapping) {\n        var newMapping = {\n          generated: {\n            line: mapping.generatedLine,\n            column: mapping.generatedColumn\n          }\n        };\n\n        if (mapping.source != null) {\n          newMapping.source = mapping.source;\n          if (sourceRoot != null) {\n            newMapping.source = util.relative(sourceRoot, newMapping.source);\n          }\n\n          newMapping.original = {\n            line: mapping.originalLine,\n            column: mapping.originalColumn\n          };\n\n          if (mapping.name != null) {\n            newMapping.name = mapping.name;\n          }\n        }\n\n        generator.addMapping(newMapping);\n      });\n      aSourceMapConsumer.sources.forEach(function (sourceFile) {\n        var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n        if (content != null) {\n          generator.setSourceContent(sourceFile, content);\n        }\n      });\n      return generator;\n    };\n\n  /**\n   * Add a single mapping from original source line and column to the generated\n   * source's line and column for this source map being created. The mapping\n   * object should have the following properties:\n   *\n   *   - generated: An object with the generated line and column positions.\n   *   - original: An object with the original line and column positions.\n   *   - source: The original source file (relative to the sourceRoot).\n   *   - name: An optional original token name for this mapping.\n   */\n  SourceMapGenerator.prototype.addMapping =\n    function SourceMapGenerator_addMapping(aArgs) {\n      var generated = util.getArg(aArgs, 'generated');\n      var original = util.getArg(aArgs, 'original', null);\n      var source = util.getArg(aArgs, 'source', null);\n      var name = util.getArg(aArgs, 'name', null);\n\n      if (!this._skipValidation) {\n        this._validateMapping(generated, original, source, name);\n      }\n\n      if (source != null && !this._sources.has(source)) {\n        this._sources.add(source);\n      }\n\n      if (name != null && !this._names.has(name)) {\n        this._names.add(name);\n      }\n\n      this._mappings.add({\n        generatedLine: generated.line,\n        generatedColumn: generated.column,\n        originalLine: original != null && original.line,\n        originalColumn: original != null && original.column,\n        source: source,\n        name: name\n      });\n    };\n\n  /**\n   * Set the source content for a source file.\n   */\n  SourceMapGenerator.prototype.setSourceContent =\n    function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n      var source = aSourceFile;\n      if (this._sourceRoot != null) {\n        source = util.relative(this._sourceRoot, source);\n      }\n\n      if (aSourceContent != null) {\n        // Add the source content to the _sourcesContents map.\n        // Create a new _sourcesContents map if the property is null.\n        if (!this._sourcesContents) {\n          this._sourcesContents = {};\n        }\n        this._sourcesContents[util.toSetString(source)] = aSourceContent;\n      } else if (this._sourcesContents) {\n        // Remove the source file from the _sourcesContents map.\n        // If the _sourcesContents map is empty, set the property to null.\n        delete this._sourcesContents[util.toSetString(source)];\n        if (Object.keys(this._sourcesContents).length === 0) {\n          this._sourcesContents = null;\n        }\n      }\n    };\n\n  /**\n   * Applies the mappings of a sub-source-map for a specific source file to the\n   * source map being generated. Each mapping to the supplied source file is\n   * rewritten using the supplied source map. Note: The resolution for the\n   * resulting mappings is the minimium of this map and the supplied map.\n   *\n   * @param aSourceMapConsumer The source map to be applied.\n   * @param aSourceFile Optional. The filename of the source file.\n   *        If omitted, SourceMapConsumer's file property will be used.\n   * @param aSourceMapPath Optional. The dirname of the path to the source map\n   *        to be applied. If relative, it is relative to the SourceMapConsumer.\n   *        This parameter is needed when the two source maps aren't in the same\n   *        directory, and the source map to be applied contains relative source\n   *        paths. If so, those relative source paths need to be rewritten\n   *        relative to the SourceMapGenerator.\n   */\n  SourceMapGenerator.prototype.applySourceMap =\n    function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n      var sourceFile = aSourceFile;\n      // If aSourceFile is omitted, we will use the file property of the SourceMap\n      if (aSourceFile == null) {\n        if (aSourceMapConsumer.file == null) {\n          throw new Error(\n            'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n            'or the source map\\'s \"file\" property. Both were omitted.'\n          );\n        }\n        sourceFile = aSourceMapConsumer.file;\n      }\n      var sourceRoot = this._sourceRoot;\n      // Make \"sourceFile\" relative if an absolute Url is passed.\n      if (sourceRoot != null) {\n        sourceFile = util.relative(sourceRoot, sourceFile);\n      }\n      // Applying the SourceMap can add and remove items from the sources and\n      // the names array.\n      var newSources = new ArraySet();\n      var newNames = new ArraySet();\n\n      // Find mappings for the \"sourceFile\"\n      this._mappings.unsortedForEach(function (mapping) {\n        if (mapping.source === sourceFile && mapping.originalLine != null) {\n          // Check if it can be mapped by the source map, then update the mapping.\n          var original = aSourceMapConsumer.originalPositionFor({\n            line: mapping.originalLine,\n            column: mapping.originalColumn\n          });\n          if (original.source != null) {\n            // Copy mapping\n            mapping.source = original.source;\n            if (aSourceMapPath != null) {\n              mapping.source = util.join(aSourceMapPath, mapping.source)\n            }\n            if (sourceRoot != null) {\n              mapping.source = util.relative(sourceRoot, mapping.source);\n            }\n            mapping.originalLine = original.line;\n            mapping.originalColumn = original.column;\n            if (original.name != null) {\n              mapping.name = original.name;\n            }\n          }\n        }\n\n        var source = mapping.source;\n        if (source != null && !newSources.has(source)) {\n          newSources.add(source);\n        }\n\n        var name = mapping.name;\n        if (name != null && !newNames.has(name)) {\n          newNames.add(name);\n        }\n\n      }, this);\n      this._sources = newSources;\n      this._names = newNames;\n\n      // Copy sourcesContents of applied map.\n      aSourceMapConsumer.sources.forEach(function (sourceFile) {\n        var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n        if (content != null) {\n          if (aSourceMapPath != null) {\n            sourceFile = util.join(aSourceMapPath, sourceFile);\n          }\n          if (sourceRoot != null) {\n            sourceFile = util.relative(sourceRoot, sourceFile);\n          }\n          this.setSourceContent(sourceFile, content);\n        }\n      }, this);\n    };\n\n  /**\n   * A mapping can have one of the three levels of data:\n   *\n   *   1. Just the generated position.\n   *   2. The Generated position, original position, and original source.\n   *   3. Generated and original position, original source, as well as a name\n   *      token.\n   *\n   * To maintain consistency, we validate that any new mapping being added falls\n   * in to one of these categories.\n   */\n  SourceMapGenerator.prototype._validateMapping =\n    function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                                aName) {\n      if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n          && aGenerated.line > 0 && aGenerated.column >= 0\n          && !aOriginal && !aSource && !aName) {\n        // Case 1.\n        return;\n      }\n      else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n               && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n               && aGenerated.line > 0 && aGenerated.column >= 0\n               && aOriginal.line > 0 && aOriginal.column >= 0\n               && aSource) {\n        // Cases 2 and 3.\n        return;\n      }\n      else {\n        throw new Error('Invalid mapping: ' + JSON.stringify({\n          generated: aGenerated,\n          source: aSource,\n          original: aOriginal,\n          name: aName\n        }));\n      }\n    };\n\n  /**\n   * Serialize the accumulated mappings in to the stream of base 64 VLQs\n   * specified by the source map format.\n   */\n  SourceMapGenerator.prototype._serializeMappings =\n    function SourceMapGenerator_serializeMappings() {\n      var previousGeneratedColumn = 0;\n      var previousGeneratedLine = 1;\n      var previousOriginalColumn = 0;\n      var previousOriginalLine = 0;\n      var previousName = 0;\n      var previousSource = 0;\n      var result = '';\n      var mapping;\n      var nameIdx;\n      var sourceIdx;\n\n      var mappings = this._mappings.toArray();\n      for (var i = 0, len = mappings.length; i < len; i++) {\n        mapping = mappings[i];\n\n        if (mapping.generatedLine !== previousGeneratedLine) {\n          previousGeneratedColumn = 0;\n          while (mapping.generatedLine !== previousGeneratedLine) {\n            result += ';';\n            previousGeneratedLine++;\n          }\n        }\n        else {\n          if (i > 0) {\n            if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n              continue;\n            }\n            result += ',';\n          }\n        }\n\n        result += base64VLQ.encode(mapping.generatedColumn\n                                   - previousGeneratedColumn);\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (mapping.source != null) {\n          sourceIdx = this._sources.indexOf(mapping.source);\n          result += base64VLQ.encode(sourceIdx - previousSource);\n          previousSource = sourceIdx;\n\n          // lines are stored 0-based in SourceMap spec version 3\n          result += base64VLQ.encode(mapping.originalLine - 1\n                                     - previousOriginalLine);\n          previousOriginalLine = mapping.originalLine - 1;\n\n          result += base64VLQ.encode(mapping.originalColumn\n                                     - previousOriginalColumn);\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (mapping.name != null) {\n            nameIdx = this._names.indexOf(mapping.name);\n            result += base64VLQ.encode(nameIdx - previousName);\n            previousName = nameIdx;\n          }\n        }\n      }\n\n      return result;\n    };\n\n  SourceMapGenerator.prototype._generateSourcesContent =\n    function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n      return aSources.map(function (source) {\n        if (!this._sourcesContents) {\n          return null;\n        }\n        if (aSourceRoot != null) {\n          source = util.relative(aSourceRoot, source);\n        }\n        var key = util.toSetString(source);\n        return Object.prototype.hasOwnProperty.call(this._sourcesContents,\n                                                    key)\n          ? this._sourcesContents[key]\n          : null;\n      }, this);\n    };\n\n  /**\n   * Externalize the source map.\n   */\n  SourceMapGenerator.prototype.toJSON =\n    function SourceMapGenerator_toJSON() {\n      var map = {\n        version: this._version,\n        sources: this._sources.toArray(),\n        names: this._names.toArray(),\n        mappings: this._serializeMappings()\n      };\n      if (this._file != null) {\n        map.file = this._file;\n      }\n      if (this._sourceRoot != null) {\n        map.sourceRoot = this._sourceRoot;\n      }\n      if (this._sourcesContents) {\n        map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n      }\n\n      return map;\n    };\n\n  /**\n   * Render the source map being generated to a string.\n   */\n  SourceMapGenerator.prototype.toString =\n    function SourceMapGenerator_toString() {\n      return JSON.stringify(this.toJSON());\n    };\n\n  exports.SourceMapGenerator = SourceMapGenerator;\n}\n"]}