{"version":3,"sources":["mapping-list.js"],"names":[],"mappings":";;;;;;;;AAMA;MACM,KADN;;;;;;;;;QAOW,yBAAT,SAAS,sBAAT,CAAgC,QAAhC,EAA0C,QAA1C,EAAoD;;AAElD,UAAI,QAAQ,SAAS,aAAT,CAFsC;AAGlD,UAAI,QAAQ,SAAS,aAAT,CAHsC;AAIlD,UAAI,UAAU,SAAS,eAAT,CAJoC;AAKlD,UAAI,UAAU,SAAS,eAAT,CALoC;AAMlD,aAAO,QAAQ,KAAR,IAAiB,SAAS,KAAT,IAAkB,WAAW,OAAX,IACnC,KAAK,mCAAL,CAAyC,QAAzC,EAAmD,QAAnD,KAAgE,CAAhE,CAP2C;KAApD;;;;;;;;;QAeS,cAAT,SAAS,WAAT,GAAuB;AACrB,WAAK,MAAL,GAAc,EAAd,CADqB;AAErB,WAAK,OAAL,GAAe,IAAf;;AAFqB,UAIrB,CAAK,KAAL,GAAa,EAAC,eAAe,CAAC,CAAD,EAAI,iBAAiB,CAAjB,EAAjC,CAJqB;KAAvB;;;;;;;;;;AArBI,WAAO,QAAQ,QAAR,CAAP;AAkCJ,gBAAY,SAAZ,CAAsB,eAAtB,GACE,SAAS,mBAAT,CAA6B,SAA7B,EAAwC,QAAxC,EAAkD;AAChD,WAAK,MAAL,CAAY,OAAZ,CAAoB,SAApB,EAA+B,QAA/B,EADgD;KAAlD;;;;;;;AASF,gBAAY,SAAZ,CAAsB,GAAtB,GAA4B,SAAS,eAAT,CAAyB,QAAzB,EAAmC;AAC7D,UAAI,uBAAuB,KAAK,KAAL,EAAY,QAAnC,CAAJ,EAAkD;AAChD,aAAK,KAAL,GAAa,QAAb,CADgD;AAEhD,aAAK,MAAL,CAAY,IAAZ,CAAiB,QAAjB,EAFgD;OAAlD,MAGO;AACL,aAAK,OAAL,GAAe,KAAf,CADK;AAEL,aAAK,MAAL,CAAY,IAAZ,CAAiB,QAAjB,EAFK;OAHP;KAD0B;;;;;;;;;;;AAmB5B,gBAAY,SAAZ,CAAsB,OAAtB,GAAgC,SAAS,mBAAT,GAA+B;AAC7D,UAAI,CAAC,KAAK,OAAL,EAAc;AACjB,aAAK,MAAL,CAAY,IAAZ,CAAiB,KAAK,mCAAL,CAAjB,CADiB;AAEjB,aAAK,OAAL,GAAe,IAAf,CAFiB;OAAnB;AAIA,aAAO,KAAK,MAAL,CALsD;KAA/B;;AAQhC,YAAQ,WAAR,GAAsB,WAAtB;OAxEF","file":"mapping-list-compiled.js","sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n{\n  var util = require('./util');\n\n  /**\n   * Determine whether mappingB is after mappingA with respect to generated\n   * position.\n   */\n  function generatedPositionAfter(mappingA, mappingB) {\n    // Optimized for most common case\n    var lineA = mappingA.generatedLine;\n    var lineB = mappingB.generatedLine;\n    var columnA = mappingA.generatedColumn;\n    var columnB = mappingB.generatedColumn;\n    return lineB > lineA || lineB == lineA && columnB >= columnA ||\n           util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n  }\n\n  /**\n   * A data structure to provide a sorted view of accumulated mappings in a\n   * performance conscious manner. It trades a neglibable overhead in general\n   * case for a large speedup in case of mappings being added in order.\n   */\n  function MappingList() {\n    this._array = [];\n    this._sorted = true;\n    // Serves as infimum\n    this._last = {generatedLine: -1, generatedColumn: 0};\n  }\n\n  /**\n   * Iterate through internal items. This method takes the same arguments that\n   * `Array.prototype.forEach` takes.\n   *\n   * NOTE: The order of the mappings is NOT guaranteed.\n   */\n  MappingList.prototype.unsortedForEach =\n    function MappingList_forEach(aCallback, aThisArg) {\n      this._array.forEach(aCallback, aThisArg);\n    };\n\n  /**\n   * Add the given source mapping.\n   *\n   * @param Object aMapping\n   */\n  MappingList.prototype.add = function MappingList_add(aMapping) {\n    if (generatedPositionAfter(this._last, aMapping)) {\n      this._last = aMapping;\n      this._array.push(aMapping);\n    } else {\n      this._sorted = false;\n      this._array.push(aMapping);\n    }\n  };\n\n  /**\n   * Returns the flat, sorted array of mappings. The mappings are sorted by\n   * generated position.\n   *\n   * WARNING: This method returns internal data without copying, for\n   * performance. The return value must NOT be mutated, and should be treated as\n   * an immutable borrow. If you want to take ownership, you must make your own\n   * copy.\n   */\n  MappingList.prototype.toArray = function MappingList_toArray() {\n    if (!this._sorted) {\n      this._array.sort(util.compareByGeneratedPositionsInflated);\n      this._sorted = true;\n    }\n    return this._array;\n  };\n\n  exports.MappingList = MappingList;\n}\n"]}