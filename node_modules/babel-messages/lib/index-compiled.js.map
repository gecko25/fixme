{"version":3,"sources":["index.js"],"names":[],"mappings":";;AAEA;;AAEA,IAAI,0BAA0B,QAAQ,gDAAR,EAA0D,SAA1D,CAA1B;;AAEJ,QAAQ,UAAR,GAAqB,IAArB;AACA,QAAQ,GAAR,GAAc,GAAd;AACA,QAAQ,SAAR,GAAoB,SAApB;;AAEA,IAAI,QAAQ,QAAQ,MAAR,CAAR;;AAEJ,IAAI,OAAO,wBAAwB,KAAxB,CAAP;;;;;;;AAOJ,IAAI,WAAW;AACb,6BAA2B,+HAA3B;AACA,2BAAyB,2BAAzB;AACA,2BAAyB,yEAAzB;AACA,6BAA2B,0BAA3B;AACA,iBAAe,uCAAf;AACA,0BAAwB,0CAAxB;AACA,wCAAsC,8CAAtC;AACA,4BAA0B,wFAA1B;AACA,YAAU,iBAAV;AACA,kBAAgB,sCAAhB;AACA,cAAY,kBAAZ;AACA,sBAAoB,yFAApB;AACA,6BAA2B,2IAA3B;AACA,yBAAuB,4BAAvB;AACA,qBAAmB,wBAAnB;AACA,qBAAmB,wFAAnB;;AAEA,4BAA0B,mBAA1B;AACA,gCAA8B,4EAA9B;;AAEA,sBAAoB,qCAApB;AACA,0BAAwB,uDAAxB;AACA,gCAA8B,wDAA9B;;AAEA,uBAAqB,8JAArB;AACA,8BAA4B,2HAA5B;AACA,iCAA+B,gGAA/B;AACA,0BAAwB,sEAAxB;;AAEA,mBAAiB,yFAAjB;AACA,qBAAmB,6EAAnB;AACA,iBAAe,8EAAf;AACA,yBAAuB,8DAAvB;CAjCE;;AAoCJ,QAAQ,QAAR,GAAmB,QAAnB;;;;;AAKA,SAAS,GAAT,CAAa,GAAb,EAAkB;AAChB,OAAK,IAAI,OAAO,UAAU,MAAV,EAAkB,OAAO,MAAM,OAAO,CAAP,GAAW,OAAO,CAAP,GAAW,CAAtB,CAAb,EAAuC,OAAO,CAAP,EAAU,OAAO,IAAP,EAAa,MAAhG,EAAwG;AACtG,SAAK,OAAO,CAAP,CAAL,GAAiB,UAAU,IAAV,CAAjB,CADsG;GAAxG;;AAIA,MAAI,MAAM,SAAS,GAAT,CAAN,CALY;AAMhB,MAAI,CAAC,GAAD,EAAM,MAAM,IAAI,cAAJ,CAAmB,qBAAqB,KAAK,SAAL,CAAe,GAAf,CAArB,CAAzB,CAAV;;;AANgB,MAShB,GAAO,UAAU,IAAV,CAAP;;;AATgB,SAYT,IAAI,OAAJ,CAAY,UAAZ,EAAwB,UAAU,GAAV,EAAe,CAAf,EAAkB;AAC/C,WAAO,KAAK,IAAI,CAAJ,CAAZ,CAD+C;GAAlB,CAA/B,CAZgB;CAAlB;;;;;;AAqBA,SAAS,SAAT,CAAmB,IAAnB,EAAyB;AACvB,SAAO,KAAK,GAAL,CAAS,UAAU,GAAV,EAAe;AAC7B,QAAI,OAAO,IAAP,IAAe,IAAI,OAAJ,EAAa;AAC9B,aAAO,IAAI,OAAJ,EAAP,CAD8B;KAAhC,MAEO;AACL,UAAI;AACF,eAAO,KAAK,SAAL,CAAe,GAAf,KAAuB,MAAM,EAAN,CAD5B;OAAJ,CAEE,OAAO,CAAP,EAAU;AACV,eAAO,KAAK,OAAL,CAAa,GAAb,CAAP,CADU;OAAV;KALJ;GADc,CAAhB,CADuB;CAAzB","file":"index-compiled.js","sourcesContent":["/* eslint max-len: 0 */\n\n\"use strict\";\n\nvar _interopRequireWildcard = require(\"babel-runtime/helpers/interop-require-wildcard\")[\"default\"];\n\nexports.__esModule = true;\nexports.get = get;\nexports.parseArgs = parseArgs;\n\nvar _util = require(\"util\");\n\nvar util = _interopRequireWildcard(_util);\n\n/**\n * Mapping of messages to be used in Babel.\n * Messages can include $0-style placeholders.\n */\n\nvar MESSAGES = {\n  tailCallReassignmentDeopt: \"Function reference has been reassigned, so it will probably be dereferenced, therefore we can't optimise this with confidence\",\n  classesIllegalBareSuper: \"Illegal use of bare super\",\n  classesIllegalSuperCall: \"Direct super call is illegal in non-constructor, use super.$1() instead\",\n  scopeDuplicateDeclaration: \"Duplicate declaration $1\",\n  settersNoRest: \"Setters aren't allowed to have a rest\",\n  noAssignmentsInForHead: \"No assignments allowed in for-in/of head\",\n  expectedMemberExpressionOrIdentifier: \"Expected type MemberExpression or Identifier\",\n  invalidParentForThisNode: \"We don't know how to handle this node within the current parent - please open an issue\",\n  readOnly: \"$1 is read-only\",\n  unknownForHead: \"Unknown node type $1 in ForStatement\",\n  didYouMean: \"Did you mean $1?\",\n  codeGeneratorDeopt: \"Note: The code generator has deoptimised the styling of $1 as it exceeds the max of $2.\",\n  missingTemplatesDirectory: \"no templates directory - this is most likely the result of a broken `npm publish`. Please report to https://github.com/babel/babel/issues\",\n  unsupportedOutputType: \"Unsupported output type $1\",\n  illegalMethodName: \"Illegal method name $1\",\n  lostTrackNodePath: \"We lost track of this node's position, likely because the AST was directly manipulated\",\n\n  modulesIllegalExportName: \"Illegal export $1\",\n  modulesDuplicateDeclarations: \"Duplicate module declarations with the same source but in different scopes\",\n\n  undeclaredVariable: \"Reference to undeclared variable $1\",\n  undeclaredVariableType: \"Referencing a type alias outside of a type annotation\",\n  undeclaredVariableSuggestion: \"Reference to undeclared variable $1 - did you mean $2?\",\n\n  traverseNeedsParent: \"You must pass a scope and parentPath unless traversing a Program/File. Instead of that you tried to traverse a $1 node without passing scope and parentPath.\",\n  traverseVerifyRootFunction: \"You passed `traverse()` a function when it expected a visitor object, are you sure you didn't mean `{ enter: Function }`?\",\n  traverseVerifyVisitorProperty: \"You passed `traverse()` a visitor object with the property $1 that has the invalid property $2\",\n  traverseVerifyNodeType: \"You gave us a visitor for the node type $1 but it's not a valid type\",\n\n  pluginNotObject: \"Plugin $2 specified in $1 was expected to return an object when invoked but returned $3\",\n  pluginNotFunction: \"Plugin $2 specified in $1 was expected to return a function but returned $3\",\n  pluginUnknown: \"Unknown plugin $1 specified in $2 at $3, attempted to resolve relative to $4\",\n  pluginInvalidProperty: \"Plugin $2 specified in $1 provided an invalid property of $3\"\n};\n\nexports.MESSAGES = MESSAGES;\n/**\n * Get a message with $0 placeholders replaced by arguments.\n */\n\nfunction get(key) {\n  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  var msg = MESSAGES[key];\n  if (!msg) throw new ReferenceError(\"Unknown message \" + JSON.stringify(key));\n\n  // stringify args\n  args = parseArgs(args);\n\n  // replace $0 placeholders with args\n  return msg.replace(/\\$(\\d+)/g, function (str, i) {\n    return args[i - 1];\n  });\n}\n\n/**\n * Stingify arguments to be used inside messages.\n */\n\nfunction parseArgs(args) {\n  return args.map(function (val) {\n    if (val != null && val.inspect) {\n      return val.inspect();\n    } else {\n      try {\n        return JSON.stringify(val) || val + \"\";\n      } catch (e) {\n        return util.inspect(val);\n      }\n    }\n  });\n}"]}