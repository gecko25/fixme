{"version":3,"sources":["hoist.js"],"names":[],"mappings":"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","file":"hoist-compiled.js","sourcesContent":["/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\nimport * as t from \"babel-types\";\nlet hasOwn = Object.prototype.hasOwnProperty;\n\n// The hoist function takes a FunctionExpression or FunctionDeclaration\n// and replaces any Declaration nodes in its body with assignments, then\n// returns a VariableDeclaration containing just the names of the removed\n// declarations.\nexports.hoist = function(funPath) {\n  t.assertFunction(funPath.node);\n\n  let vars = {};\n\n  function varDeclToExpr(vdec, includeIdentifiers) {\n    t.assertVariableDeclaration(vdec);\n    // TODO assert.equal(vdec.kind, \"var\");\n    let exprs = [];\n\n    vdec.declarations.forEach(function(dec) {\n      vars[dec.id.name] = dec.id;\n\n      if (dec.init) {\n        exprs.push(t.assignmentExpression(\n          \"=\", dec.id, dec.init\n        ));\n      } else if (includeIdentifiers) {\n        exprs.push(dec.id);\n      }\n    });\n\n    if (exprs.length === 0)\n      return null;\n\n    if (exprs.length === 1)\n      return exprs[0];\n\n    return t.sequenceExpression(exprs);\n  }\n\n  funPath.get(\"body\").traverse({\n    VariableDeclaration: {\n      exit: function(path) {\n        let expr = varDeclToExpr(path.node, false);\n        if (expr === null) {\n          path.remove();\n        } else {\n          // We don't need to traverse this expression any further because\n          // there can't be any new declarations inside an expression.\n          path.replaceWith(t.expressionStatement(expr));\n        }\n\n        // Since the original node has been either removed or replaced,\n        // avoid traversing it any further.\n        path.skip();\n      }\n    },\n\n    ForStatement: function(path) {\n      let init = path.node.init;\n      if (t.isVariableDeclaration(init)) {\n        path.get(\"init\").replaceWith(varDeclToExpr(init, false));\n      }\n    },\n\n    ForXStatement: function(path) {\n      let left = path.get(\"left\");\n      if (left.isVariableDeclaration()) {\n        left.replaceWith(varDeclToExpr(left.node, true));\n      }\n    },\n\n    FunctionDeclaration: function(path) {\n      let node = path.node;\n      vars[node.id.name] = node.id;\n\n      let assignment = t.expressionStatement(\n        t.assignmentExpression(\n          \"=\",\n          node.id,\n          t.functionExpression(\n            node.id,\n            node.params,\n            node.body,\n            node.generator,\n            node.expression\n          )\n        )\n      );\n\n      if (path.parentPath.isBlockStatement()) {\n        // Insert the assignment form before the first statement in the\n        // enclosing block.\n        path.parentPath.unshiftContainer(\"body\", assignment);\n\n        // Remove the function declaration now that we've inserted the\n        // equivalent assignment form at the beginning of the block.\n        path.remove();\n      } else {\n        // If the parent node is not a block statement, then we can just\n        // replace the declaration with the equivalent assignment form\n        // without worrying about hoisting it.\n        path.replaceWith(assignment);\n      }\n\n      // Don't hoist variables out of inner functions.\n      path.skip();\n    },\n\n    FunctionExpression: function(path) {\n      // Don't descend into nested function expressions.\n      path.skip();\n    }\n  });\n\n  let paramNames = {};\n  funPath.get(\"params\").forEach(function(paramPath) {\n    let param = paramPath.node;\n    if (t.isIdentifier(param)) {\n      paramNames[param.name] = param;\n    } else {\n      // Variables declared by destructuring parameter patterns will be\n      // harmlessly re-declared.\n    }\n  });\n\n  let declarations = [];\n\n  Object.keys(vars).forEach(function(name) {\n    if (!hasOwn.call(paramNames, name)) {\n      declarations.push(t.variableDeclarator(vars[name], null));\n    }\n  });\n\n  if (declarations.length === 0) {\n    return null; // Be sure to handle this case!\n  }\n\n  return t.variableDeclaration(\"var\", declarations);\n};\n"]}