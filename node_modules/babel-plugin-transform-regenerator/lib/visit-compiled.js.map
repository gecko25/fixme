{"version":3,"sources":["visit.js"],"names":[],"mappings":"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","file":"visit-compiled.js","sourcesContent":["/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"babel-runtime/helpers/interop-require-default\")[\"default\"];\n\nvar _interopRequireWildcard = require(\"babel-runtime/helpers/interop-require-wildcard\")[\"default\"];\n\nvar _assert = require(\"assert\");\n\nvar _assert2 = _interopRequireDefault(_assert);\n\nvar _babelTypes = require(\"babel-types\");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nvar _hoist = require(\"./hoist\");\n\nvar _emit = require(\"./emit\");\n\nvar _util = require(\"./util\");\n\nvar util = _interopRequireWildcard(_util);\n\nvar getMarkInfo = require(\"private\").makeAccessor();\n\nexports.visitor = {\n  Function: {\n    exit: function exit(path, state) {\n      var node = path.node;\n\n      if (node.generator) {\n        if (node.async) {\n          // Async generator\n          if (state.opts.asyncGenerators === false) return;\n        } else {\n          // Plain generator\n          if (state.opts.generators === false) return;\n        }\n      } else if (node.async) {\n        // Async function\n        if (state.opts.async === false) return;\n      } else {\n        // Not a generator or async function.\n        return;\n      }\n\n      var contextId = path.scope.generateUidIdentifier(\"context\");\n      var argsId = path.scope.generateUidIdentifier(\"args\");\n\n      path.ensureBlock();\n      var bodyBlockPath = path.get(\"body\");\n\n      if (node.async) {\n        bodyBlockPath.traverse(awaitVisitor);\n      }\n\n      bodyBlockPath.traverse(functionSentVisitor, {\n        context: contextId\n      });\n\n      var outerBody = [];\n      var innerBody = [];\n\n      bodyBlockPath.get(\"body\").forEach(function (childPath) {\n        var node = childPath.node;\n        if (node && node._blockHoist != null) {\n          outerBody.push(node);\n        } else {\n          innerBody.push(node);\n        }\n      });\n\n      if (outerBody.length > 0) {\n        // Only replace the inner body if we actually hoisted any statements\n        // to the outer body.\n        bodyBlockPath.node.body = innerBody;\n      }\n\n      var outerFnExpr = getOuterFnExpr(path);\n      // Note that getOuterFnExpr has the side-effect of ensuring that the\n      // function has a name (so node.id will always be an Identifier), even\n      // if a temporary name has to be synthesized.\n      t.assertIdentifier(node.id);\n      var innerFnId = t.identifier(node.id.name + \"$\");\n\n      // Turn all declarations into vars, and replace the original\n      // declarations with equivalent assignment expressions.\n      var vars = _hoist.hoist(path);\n\n      var didRenameArguments = renameArguments(path, argsId);\n      if (didRenameArguments) {\n        vars = vars || t.variableDeclaration(\"var\", []);\n        vars.declarations.push(t.variableDeclarator(argsId, t.identifier(\"arguments\")));\n      }\n\n      var emitter = new _emit.Emitter(contextId);\n      emitter.explode(path.get(\"body\"));\n\n      if (vars && vars.declarations.length > 0) {\n        outerBody.push(vars);\n      }\n\n      var wrapArgs = [emitter.getContextFunction(innerFnId),\n      // Async functions that are not generators don't care about the\n      // outer function because they don't need it to be marked and don't\n      // inherit from its .prototype.\n      node.generator ? outerFnExpr : t.nullLiteral(), t.thisExpression()];\n\n      var tryLocsList = emitter.getTryLocsList();\n      if (tryLocsList) {\n        wrapArgs.push(tryLocsList);\n      }\n\n      var wrapCall = t.callExpression(util.runtimeProperty(node.async ? \"async\" : \"wrap\"), wrapArgs);\n\n      outerBody.push(t.returnStatement(wrapCall));\n      node.body = t.blockStatement(outerBody);\n\n      var wasGeneratorFunction = node.generator;\n      if (wasGeneratorFunction) {\n        node.generator = false;\n      }\n\n      if (node.async) {\n        node.async = false;\n      }\n\n      if (wasGeneratorFunction && t.isExpression(node)) {\n        path.replaceWith(t.callExpression(util.runtimeProperty(\"mark\"), [node]));\n      }\n\n      // Generators are processed in 'exit' handlers so that regenerator only has to run on\n      // an ES5 AST, but that means traversal will not pick up newly inserted references\n      // to things like 'regeneratorRuntime'. To avoid this, we explicitly requeue.\n      path.requeue();\n    }\n  }\n};\n\n// Given a NodePath for a Function, return an Expression node that can be\n// used to refer reliably to the function object from inside the function.\n// This expression is essentially a replacement for arguments.callee, with\n// the key advantage that it works in strict mode.\nfunction getOuterFnExpr(funPath) {\n  var node = funPath.node;\n  t.assertFunction(node);\n\n  if (!node.id) {\n    // Default-exported function declarations, and function expressions may not\n    // have a name to reference, so we explicitly add one.\n    node.id = funPath.scope.parent.generateUidIdentifier(\"callee\");\n  }\n\n  if (node.generator && // Non-generator functions don't need to be marked.\n  t.isFunctionDeclaration(node)) {\n    var pp = funPath.findParent(function (path) {\n      return path.isProgram() || path.isBlockStatement();\n    });\n\n    if (!pp) {\n      return node.id;\n    }\n\n    var markDecl = getRuntimeMarkDecl(pp);\n    var markedArray = markDecl.declarations[0].id;\n    var funDeclIdArray = markDecl.declarations[0].init.callee.object;\n    t.assertArrayExpression(funDeclIdArray);\n\n    var index = funDeclIdArray.elements.length;\n    funDeclIdArray.elements.push(node.id);\n\n    return t.memberExpression(markedArray, t.numericLiteral(index), true);\n  }\n\n  return node.id;\n}\n\nfunction getRuntimeMarkDecl(blockPath) {\n  var block = blockPath.node;\n  _assert2[\"default\"].ok(Array.isArray(block.body));\n\n  var info = getMarkInfo(block);\n  if (info.decl) {\n    return info.decl;\n  }\n\n  info.decl = t.variableDeclaration(\"var\", [t.variableDeclarator(blockPath.scope.generateUidIdentifier(\"marked\"), t.callExpression(t.memberExpression(t.arrayExpression([]), t.identifier(\"map\"), false), [util.runtimeProperty(\"mark\")]))]);\n\n  blockPath.unshiftContainer(\"body\", info.decl);\n\n  return info.decl;\n}\n\nfunction renameArguments(funcPath, argsId) {\n  var state = {\n    didRenameArguments: false,\n    argsId: argsId\n  };\n\n  funcPath.traverse(argumentsVisitor, state);\n\n  // If the traversal replaced any arguments references, then we need to\n  // alias the outer function's arguments binding (be it the implicit\n  // arguments object or some other parameter or variable) to the variable\n  // named by argsId.\n  return state.didRenameArguments;\n}\n\nvar argumentsVisitor = {\n  \"FunctionExpression|FunctionDeclaration\": function FunctionExpressionFunctionDeclaration(path) {\n    path.skip();\n  },\n\n  Identifier: function Identifier(path, state) {\n    if (path.node.name === \"arguments\" && util.isReference(path)) {\n      path.replaceWith(state.argsId);\n      state.didRenameArguments = true;\n    }\n  }\n};\n\nvar functionSentVisitor = {\n  MetaProperty: function MetaProperty(path) {\n    var node = path.node;\n\n    if (node.meta.name === \"function\" && node.property.name === \"sent\") {\n      path.replaceWith(t.memberExpression(this.context, t.identifier(\"_sent\")));\n    }\n  }\n};\n\nvar awaitVisitor = {\n  Function: function Function(path) {\n    path.skip(); // Don't descend into nested function scopes.\n  },\n\n  AwaitExpression: function AwaitExpression(path) {\n    // Convert await expressions to yield expressions.\n    var argument = path.node.argument;\n\n    // Transforming `await x` to `yield regeneratorRuntime.awrap(x)`\n    // causes the argument to be wrapped in such a way that the runtime\n    // can distinguish between awaited and merely yielded values.\n    path.replaceWith(t.yieldExpression(t.callExpression(util.runtimeProperty(\"awrap\"), [argument]), false));\n  }\n};"]}