{"version":3,"sources":["es6.typed.array-buffer.js"],"names":[],"mappings":"AAAA;;AACA,IAAG,QAAQ,iBAAR,CAAH,EAA8B;AAC5B,MAAI,UAAe,QAAQ,YAAR,CAAf;MACA,SAAe,QAAQ,WAAR,CAAf;MACA,SAAe,QAAQ,YAAR,CAAf;MACA,UAAe,QAAQ,cAAR,CAAf;MACA,WAAe,QAAQ,eAAR,CAAf;MACA,WAAe,QAAQ,eAAR,CAAf;MACA,cAAe,QAAQ,SAAR,EAAmB,aAAnB,CAAf;MACA,eAAe,OAAO,WAAP;MACf,YAAe,OAAO,QAAP;MACf,SAAe,gBAAgB,aAAa,SAAb,CAAuB,KAAvB;MAC/B,OAAe,OAAO,IAAP;MACf,eAAe,aAAf,CAZwB;;AAc5B,UAAQ,QAAQ,CAAR,GAAY,QAAQ,CAAR,GAAY,QAAQ,CAAR,GAAY,CAAC,OAAO,GAAP,EAAY,EAAC,aAAa,YAAb,EAA1D,EAd4B;;AAgB5B,UAAQ,QAAQ,CAAR,GAAY,QAAQ,CAAR,GAAY,CAAC,OAAO,MAAP,EAAe,YAAhD,EAA8D;;AAE5D,YAAQ,SAAS,MAAT,CAAgB,EAAhB,EAAmB;;AACzB,aAAO,SAAS,EAAT,KAAgB,QAAQ,EAAR,CADE;KAAnB;GAFV,EAhB4B;;AAuB5B,UAAQ,QAAQ,CAAR,GAAY,QAAQ,CAAR,GAAY,QAAQ,WAAR,EAAqB,YAAU;AAC7D,WAAO,CAAC,IAAI,YAAJ,CAAiB,CAAjB,EAAoB,KAApB,CAA0B,CAA1B,EAA6B,SAA7B,EAAwC,UAAxC,CADqD;GAAV,CAAjC,EAEhB,YAFJ,EAEkB;;AAEhB,WAAO,SAAS,KAAT,CAAe,KAAf,EAAsB,GAAtB,EAA0B;AAC/B,UAAG,WAAW,SAAX,IAAwB,QAAQ,SAAR,EAAkB,OAAO,OAAO,IAAP,CAAY,IAAZ,EAAkB,KAAlB,CAAP,CAA7C;AAD+B,UAE3B,MAAS,KAAK,UAAL;UACT,QAAS,QAAQ,KAAR,EAAe,GAAf,CAAT;UACA,QAAS,QAAQ,QAAQ,SAAR,GAAoB,GAApB,GAA0B,GAA1B,EAA+B,GAAvC,CAAT;UACA,SAAS,IAAI,YAAJ,CAAiB,SAAS,QAAQ,KAAR,CAA1B,CAAT;UACA,QAAS,IAAI,SAAJ,CAAc,IAAd,CAAT;UACA,QAAS,IAAI,SAAJ,CAAc,MAAd,CAAT;UACA,QAAS,CAAT,CAR2B;AAS/B,aAAM,QAAQ,KAAR,EAAc;AAClB,cAAM,QAAN,CAAe,OAAf,EAAwB,MAAM,QAAN,CAAe,OAAf,CAAxB,EADkB;OAApB,OAES,MAAP,CAX6B;KAA1B;GAJT,EAvB4B;CAA9B","file":"es6.typed.array-buffer-compiled.js","sourcesContent":["'use strict';\nif(require('./$.descriptors')){\n  var $export      = require('./$.export')\n    , $typed       = require('./$.typed')\n    , buffer       = require('./$.buffer')\n    , toIndex      = require('./$.to-index')\n    , toLength     = require('./$.to-length')\n    , isObject     = require('./$.is-object')\n    , TYPED_ARRAY  = require('./$.wks')('typed_array')\n    , $ArrayBuffer = buffer.ArrayBuffer\n    , $DataView    = buffer.DataView\n    , $slice       = $ArrayBuffer && $ArrayBuffer.prototype.slice\n    , VIEW         = $typed.VIEW\n    , ARRAY_BUFFER = 'ArrayBuffer';\n\n  $export($export.G + $export.W + $export.F * !$typed.ABV, {ArrayBuffer: $ArrayBuffer});\n\n  $export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {\n    // 24.1.3.1 ArrayBuffer.isView(arg)\n    isView: function isView(it){ // not cross-realm\n      return isObject(it) && VIEW in it;\n    }\n  });\n\n  $export($export.P + $export.F * require('./$.fails')(function(){\n    return !new $ArrayBuffer(2).slice(1, undefined).byteLength;\n  }), ARRAY_BUFFER, {\n    // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)\n    slice: function slice(start, end){\n      if($slice !== undefined && end === undefined)return $slice.call(this, start); // FF fix\n      var len    = this.byteLength\n        , first  = toIndex(start, len)\n        , final  = toIndex(end === undefined ? len : end, len)\n        , result = new $ArrayBuffer(toLength(final - first))\n        , viewS  = new $DataView(this)\n        , viewT  = new $DataView(result)\n        , index  = 0;\n      while(first < final){\n        viewT.setUint8(index++, viewS.getUint8(first++));\n      } return result;\n    }\n  });\n}"]}