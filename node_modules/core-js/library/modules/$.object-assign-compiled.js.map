{"version":3,"sources":["$.object-assign.js"],"names":[],"mappings":";;;AACA,IAAI,IAAW,QAAQ,KAAR,CAAX;IACA,WAAW,QAAQ,eAAR,CAAX;IACA,UAAW,QAAQ,aAAR,CAAX;;;AAGJ,OAAO,OAAP,GAAiB,QAAQ,WAAR,EAAqB,YAAU;AAC9C,MAAI,IAAI,OAAO,MAAP;MACJ,IAAI,EAAJ;MACA,IAAI,EAAJ;MACA,IAAI,QAAJ;MACA,IAAI,sBAAJ,CAL0C;AAM9C,IAAE,CAAF,IAAO,CAAP,CAN8C;AAO9C,IAAE,KAAF,CAAQ,EAAR,EAAY,OAAZ,CAAoB,UAAS,CAAT,EAAW;AAAE,MAAE,CAAF,IAAO,CAAP,CAAF;GAAX,CAApB,CAP8C;AAQ9C,SAAO,EAAE,EAAF,EAAM,CAAN,EAAS,CAAT,KAAe,CAAf,IAAoB,OAAO,IAAP,CAAY,EAAE,EAAF,EAAM,CAAN,CAAZ,EAAsB,IAAtB,CAA2B,EAA3B,KAAkC,CAAlC,CARmB;CAAV,CAArB,GASZ,SAAS,MAAT,CAAgB,MAAhB,EAAwB,MAAxB,EAA+B;;AAClC,MAAI,IAAQ,SAAS,MAAT,CAAR;MACA,KAAQ,SAAR;MACA,QAAQ,GAAG,MAAH;MACR,QAAQ,CAAR;MACA,UAAa,EAAE,OAAF;MACb,aAAa,EAAE,UAAF;MACb,SAAa,EAAE,MAAF,CAPiB;AAQlC,SAAM,QAAQ,KAAR,EAAc;AAClB,QAAI,IAAS,QAAQ,GAAG,OAAH,CAAR,CAAT;QACA,OAAS,aAAa,QAAQ,CAAR,EAAW,MAAX,CAAkB,WAAW,CAAX,CAAlB,CAAb,GAAgD,QAAQ,CAAR,CAAhD;QACT,SAAS,KAAK,MAAL;QACT,IAAS,CAAT;QACA,GAJJ,CADkB;AAMlB,WAAM,SAAS,CAAT;AAAW,UAAG,OAAO,IAAP,CAAY,CAAZ,EAAe,MAAM,KAAK,GAAL,CAAN,CAAlB,EAAmC,EAAE,GAAF,IAAS,EAAE,GAAF,CAAT,CAAnC;KAAjB;GANF;AAQA,SAAO,CAAP,CAhBkC;CAA/B,GAiBD,OAAO,MAAP","file":"$.object-assign-compiled.js","sourcesContent":["// 19.1.2.1 Object.assign(target, source, ...)\nvar $        = require('./$')\n  , toObject = require('./$.to-object')\n  , IObject  = require('./$.iobject');\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = require('./$.fails')(function(){\n  var a = Object.assign\n    , A = {}\n    , B = {}\n    , S = Symbol()\n    , K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function(k){ B[k] = k; });\n  return a({}, A)[S] != 7 || Object.keys(a({}, B)).join('') != K;\n}) ? function assign(target, source){ // eslint-disable-line no-unused-vars\n  var T     = toObject(target)\n    , $$    = arguments\n    , $$len = $$.length\n    , index = 1\n    , getKeys    = $.getKeys\n    , getSymbols = $.getSymbols\n    , isEnum     = $.isEnum;\n  while($$len > index){\n    var S      = IObject($$[index++])\n      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)\n      , length = keys.length\n      , j      = 0\n      , key;\n    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];\n  }\n  return T;\n} : Object.assign;"]}