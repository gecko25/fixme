{"version":3,"sources":["$.to-primitive.js"],"names":[],"mappings":";;;AACA,IAAI,WAAW,QAAQ,eAAR,CAAX;;;AAGJ,OAAO,OAAP,GAAiB,UAAS,EAAT,EAAa,CAAb,EAAe;AAC9B,MAAG,CAAC,SAAS,EAAT,CAAD,EAAc,OAAO,EAAP,CAAjB;AACA,MAAI,EAAJ,EAAQ,GAAR,CAF8B;AAG9B,MAAG,KAAK,QAAQ,KAAK,GAAG,QAAH,CAAb,IAA6B,UAA7B,IAA2C,CAAC,SAAS,MAAM,GAAG,IAAH,CAAQ,EAAR,CAAN,CAAV,EAA6B,OAAO,GAAP,CAAhF;AACA,MAAG,QAAQ,KAAK,GAAG,OAAH,CAAb,IAA4B,UAA5B,IAA0C,CAAC,SAAS,MAAM,GAAG,IAAH,CAAQ,EAAR,CAAN,CAAV,EAA6B,OAAO,GAAP,CAA1E;AACA,MAAG,CAAC,CAAD,IAAM,QAAQ,KAAK,GAAG,QAAH,CAAb,IAA6B,UAA7B,IAA2C,CAAC,SAAS,MAAM,GAAG,IAAH,CAAQ,EAAR,CAAN,CAAV,EAA6B,OAAO,GAAP,CAAjF;AACA,QAAM,UAAU,yCAAV,CAAN,CAN8B;CAAf","file":"$.to-primitive-compiled.js","sourcesContent":["// 7.1.1 ToPrimitive(input [, PreferredType])\r\nvar isObject = require('./$.is-object');\r\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\r\n// and the second argument - flag - preferred type is a string\r\nmodule.exports = function(it, S){\r\n  if(!isObject(it))return it;\r\n  var fn, val;\r\n  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\r\n  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;\r\n  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\r\n  throw TypeError(\"Can't convert object to primitive value\");\r\n};"]}