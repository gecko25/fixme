{"version":3,"sources":["$.export.js"],"names":[],"mappings":";;AAAA,IAAI,SAAY,QAAQ,YAAR,CAAZ;IACA,OAAY,QAAQ,UAAR,CAAZ;IACA,OAAY,QAAQ,UAAR,CAAZ;IACA,WAAY,QAAQ,cAAR,CAAZ;IACA,MAAY,QAAQ,SAAR,CAAZ;IACA,YAAY,WAAZ;;AAEJ,IAAI,UAAU,SAAV,OAAU,CAAS,IAAT,EAAe,IAAf,EAAqB,MAArB,EAA4B;AACxC,MAAI,YAAY,OAAO,QAAQ,CAAR;MACnB,YAAY,OAAO,QAAQ,CAAR;MACnB,YAAY,OAAO,QAAQ,CAAR;MACnB,WAAY,OAAO,QAAQ,CAAR;MACnB,UAAY,OAAO,QAAQ,CAAR;MACnB,SAAY,YAAY,MAAZ,GAAqB,YAAY,OAAO,IAAP,MAAiB,OAAO,IAAP,IAAe,EAAf,CAAjB,GAAsC,CAAC,OAAO,IAAP,KAAgB,EAAhB,CAAD,CAAqB,SAArB,CAAlD;MACjC,UAAY,YAAY,IAAZ,GAAmB,KAAK,IAAL,MAAe,KAAK,IAAL,IAAa,EAAb,CAAf;MAC/B,WAAY,QAAQ,SAAR,MAAuB,QAAQ,SAAR,IAAqB,EAArB,CAAvB;MACZ,GARJ;MAQS,GART;MAQc,GARd;MAQmB,GARnB,CADwC;AAUxC,MAAG,SAAH,EAAa,SAAS,IAAT,CAAb;AACA,OAAI,GAAJ,IAAW,MAAX,EAAkB;;AAEhB,UAAM,CAAC,SAAD,IAAc,MAAd,IAAwB,OAAO,MAAP;;AAFd,OAIhB,GAAM,CAAC,MAAM,MAAN,GAAe,MAAf,CAAD,CAAwB,GAAxB,CAAN;;AAJgB,OAMhB,GAAM,WAAW,GAAX,GAAiB,IAAI,GAAJ,EAAS,MAAT,CAAjB,GAAoC,YAAY,OAAO,GAAP,IAAc,UAAd,GAA2B,IAAI,SAAS,IAAT,EAAe,GAAnB,CAAvC,GAAiE,GAAjE;;AAN1B,QAQb,UAAU,CAAC,GAAD,EAAK,SAAS,MAAT,EAAiB,GAAjB,EAAsB,GAAtB,EAAlB;;AARgB,QAUb,QAAQ,GAAR,KAAgB,GAAhB,EAAoB,KAAK,OAAL,EAAc,GAAd,EAAmB,GAAnB,EAAvB;AACA,QAAG,YAAY,SAAS,GAAT,KAAiB,GAAjB,EAAqB,SAAS,GAAT,IAAgB,GAAhB,CAApC;GAXF;CAXY;AAyBd,OAAO,IAAP,GAAc,IAAd;;AAEA,QAAQ,CAAR,GAAY,CAAZ;AACA,QAAQ,CAAR,GAAY,CAAZ;AACA,QAAQ,CAAR,GAAY,CAAZ;AACA,QAAQ,CAAR,GAAY,CAAZ;AACA,QAAQ,CAAR,GAAY,EAAZ;AACA,QAAQ,CAAR,GAAY,EAAZ;AACA,OAAO,OAAP,GAAiB,OAAjB","file":"$.export-compiled.js","sourcesContent":["var global    = require('./$.global')\n  , core      = require('./$.core')\n  , hide      = require('./$.hide')\n  , redefine  = require('./$.redefine')\n  , ctx       = require('./$.ctx')\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE]\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , expProto  = exports[PROTOTYPE] || (exports[PROTOTYPE] = {})\n    , key, own, out, exp;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && key in target;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if(target && !own)redefine(target, key, out);\n    // export\n    if(exports[key] != out)hide(exports, key, exp);\n    if(IS_PROTO && expProto[key] != out)expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;  // forced\n$export.G = 2;  // global\n$export.S = 4;  // static\n$export.P = 8;  // proto\n$export.B = 16; // bind\n$export.W = 32; // wrap\nmodule.exports = $export;"]}