{"version":3,"sources":["core.dict.js"],"names":[],"mappings":"AAAA;;AACA,IAAI,IAAc,QAAQ,KAAR,CAAd;IACA,MAAc,QAAQ,SAAR,CAAd;IACA,UAAc,QAAQ,YAAR,CAAd;IACA,aAAc,QAAQ,mBAAR,CAAd;IACA,SAAc,QAAQ,mBAAR,CAAd;IACA,QAAc,QAAQ,WAAR,CAAd;IACA,YAAc,QAAQ,gBAAR,CAAd;IACA,QAAc,QAAQ,YAAR,CAAd;IACA,aAAc,QAAQ,oBAAR,CAAd;IACA,cAAc,QAAQ,iBAAR,CAAd;IACA,OAAc,QAAQ,eAAR,CAAd;IACA,WAAc,QAAQ,eAAR,CAAd;IACA,YAAc,QAAQ,gBAAR,CAAd;IACA,cAAc,QAAQ,iBAAR,CAAd;IACA,MAAc,QAAQ,SAAR,CAAd;IACA,UAAc,EAAE,OAAF;;;;;;;;;;AAUlB,IAAI,mBAAmB,SAAnB,gBAAmB,CAAS,IAAT,EAAc;AACnC,MAAI,SAAW,QAAQ,CAAR;MACX,WAAW,QAAQ,CAAR,CAFoB;AAGnC,SAAO,UAAS,MAAT,EAAiB,UAAjB,EAA6B,sBAA7B,EAAoD;AACzD,QAAI,IAAS,IAAI,UAAJ,EAAgB,IAAhB,EAAsB,CAAtB,CAAT;QACA,IAAS,UAAU,MAAV,CAAT;QACA,SAAS,UAAU,QAAQ,CAAR,IAAa,QAAQ,CAAR,GAC5B,KAAK,OAAO,IAAP,IAAe,UAAf,GAA4B,IAA5B,GAAmC,IAAnC,CAAL,EADK,GAC2C,SAD3C;QAET,GAJJ;QAIS,GAJT;QAIc,GAJd,CADyD;AAMzD,SAAI,GAAJ,IAAW,CAAX;AAAa,UAAG,IAAI,CAAJ,EAAO,GAAP,CAAH,EAAe;AAC1B,cAAM,EAAE,GAAF,CAAN,CAD0B;AAE1B,cAAM,EAAE,GAAF,EAAO,GAAP,EAAY,MAAZ,CAAN,CAF0B;AAG1B,YAAG,IAAH,EAAQ;AACN,cAAG,MAAH,EAAU,OAAO,GAAP,IAAc,GAAd;AAAV,eACK,IAAG,GAAH,EAAO,QAAO,IAAP;AACV,mBAAK,CAAL;AAAQ,uBAAO,GAAP,IAAc,GAAd,CAAR;AADU,mBAEL,CAAL;AAAQ,uBAAO,IAAP,CAAR;AAFU,mBAGL,CAAL;AAAQ,uBAAO,GAAP,CAAR;AAHU,mBAIL,CAAL;AAAQ,uBAAO,GAAP,CAAR;AAJU,mBAKL,CAAL;AAAQ,uBAAO,IAAI,CAAJ,CAAP,IAAiB,IAAI,CAAJ,CAAjB,CAAR;AALU,aAAP,MAME,IAAG,QAAH,EAAY,OAAO,KAAP,CAAZ;AARD,SAAR;OAHW;KAAb,OAcO,QAAQ,CAAR,IAAa,QAAb,GAAwB,QAAxB,GAAmC,MAAnC,CApBkD;GAApD,CAH4B;CAAd;AA0BvB,IAAI,UAAU,iBAAiB,CAAjB,CAAV;;AAEJ,IAAI,iBAAiB,SAAjB,cAAiB,CAAS,IAAT,EAAc;AACjC,SAAO,UAAS,EAAT,EAAY;AACjB,WAAO,IAAI,YAAJ,CAAiB,EAAjB,EAAqB,IAArB,CAAP,CADiB;GAAZ,CAD0B;CAAd;AAKrB,IAAI,eAAe,SAAf,YAAe,CAAS,QAAT,EAAmB,IAAnB,EAAwB;AACzC,OAAK,EAAL,GAAU,UAAU,QAAV,CAAV;AADyC,MAEzC,CAAK,EAAL,GAAU,QAAQ,QAAR,CAAV;AAFyC,MAGzC,CAAK,EAAL,GAAU,CAAV;AAHyC,MAIzC,CAAK,EAAL,GAAU,IAAV;AAJyC,CAAxB;AAMnB,YAAY,YAAZ,EAA0B,MAA1B,EAAkC,YAAU;AAC1C,MAAI,OAAO,IAAP;MACA,IAAO,KAAK,EAAL;MACP,OAAO,KAAK,EAAL;MACP,OAAO,KAAK,EAAL;MACP,GAJJ,CAD0C;AAM1C,KAAG;AACD,QAAG,KAAK,EAAL,IAAW,KAAK,MAAL,EAAY;AACxB,WAAK,EAAL,GAAU,SAAV,CADwB;AAExB,aAAO,KAAK,CAAL,CAAP,CAFwB;KAA1B;GADF,QAKQ,CAAC,IAAI,CAAJ,EAAO,MAAM,KAAK,KAAK,EAAL,EAAL,CAAN,CAAR,EAXkC;AAY1C,MAAG,QAAQ,MAAR,EAAiB,OAAO,KAAK,CAAL,EAAQ,GAAR,CAAP,CAApB;AACA,MAAG,QAAQ,QAAR,EAAiB,OAAO,KAAK,CAAL,EAAQ,EAAE,GAAF,CAAR,CAAP,CAApB;AACA,SAAO,KAAK,CAAL,EAAQ,CAAC,GAAD,EAAM,EAAE,GAAF,CAAN,CAAR,CAAP,CAd0C;CAAV,CAAlC;;AAiBA,SAAS,IAAT,CAAc,QAAd,EAAuB;AACrB,MAAI,OAAO,EAAE,MAAF,CAAS,IAAT,CAAP,CADiB;AAErB,MAAG,YAAY,SAAZ,EAAsB;AACvB,QAAG,WAAW,QAAX,CAAH,EAAwB;AACtB,YAAM,QAAN,EAAgB,IAAhB,EAAsB,UAAS,GAAT,EAAc,KAAd,EAAoB;AACxC,aAAK,GAAL,IAAY,KAAZ,CADwC;OAApB,CAAtB,CADsB;KAAxB,MAIO,OAAO,IAAP,EAAa,QAAb,EAJP;GADF;AAOA,SAAO,IAAP,CATqB;CAAvB;AAWA,KAAK,SAAL,GAAiB,IAAjB;;AAEA,SAAS,MAAT,CAAgB,MAAhB,EAAwB,KAAxB,EAA+B,IAA/B,EAAoC;AAClC,YAAU,KAAV,EADkC;AAElC,MAAI,IAAS,UAAU,MAAV,CAAT;MACA,OAAS,QAAQ,CAAR,CAAT;MACA,SAAS,KAAK,MAAL;MACT,IAAS,CAAT;MACA,IAJJ;MAIU,GAJV,CAFkC;AAOlC,MAAG,UAAU,MAAV,GAAmB,CAAnB,EAAqB;AACtB,QAAG,CAAC,MAAD,EAAQ,MAAM,UAAU,8CAAV,CAAN,CAAX;AACA,WAAO,EAAE,KAAK,GAAL,CAAF,CAAP,CAFsB;GAAxB,MAGO,OAAO,OAAO,IAAP,CAAP,CAHP;AAIA,SAAM,SAAS,CAAT;AAAW,QAAG,IAAI,CAAJ,EAAO,MAAM,KAAK,GAAL,CAAN,CAAV,EAA2B;AAC1C,aAAO,MAAM,IAAN,EAAY,EAAE,GAAF,CAAZ,EAAoB,GAApB,EAAyB,MAAzB,CAAP,CAD0C;KAA3B;GAAjB,OAGO,IAAP,CAdkC;CAApC;;AAiBA,SAAS,QAAT,CAAkB,MAAlB,EAA0B,EAA1B,EAA6B;AAC3B,SAAO,CAAC,MAAM,EAAN,GAAW,MAAM,MAAN,EAAc,EAAd,CAAX,GAA+B,QAAQ,MAAR,EAAgB,UAAS,EAAT,EAAY;AACjE,WAAO,MAAM,EAAN,CAD0D;GAAZ,CAA/C,CAAD,KAEC,SAFD,CADoB;CAA7B;;AAMA,SAAS,GAAT,CAAa,MAAb,EAAqB,GAArB,EAAyB;AACvB,MAAG,IAAI,MAAJ,EAAY,GAAZ,CAAH,EAAoB,OAAO,OAAO,GAAP,CAAP,CAApB;CADF;AAGA,SAAS,GAAT,CAAa,MAAb,EAAqB,GAArB,EAA0B,KAA1B,EAAgC;AAC9B,MAAG,eAAe,OAAO,MAAP,EAAc,EAAE,OAAF,CAAU,MAAV,EAAkB,GAAlB,EAAuB,WAAW,CAAX,EAAc,KAAd,CAAvB,EAAhC,KACK,OAAO,GAAP,IAAc,KAAd,CADL;AAEA,SAAO,MAAP,CAH8B;CAAhC;;AAMA,SAAS,MAAT,CAAgB,EAAhB,EAAmB;AACjB,SAAO,SAAS,EAAT,KAAgB,EAAE,QAAF,CAAW,EAAX,MAAmB,KAAK,SAAL,CADzB;CAAnB;;AAIA,QAAQ,QAAQ,CAAR,GAAY,QAAQ,CAAR,EAAW,EAAC,MAAM,IAAN,EAAhC;;AAEA,QAAQ,QAAQ,CAAR,EAAW,MAAnB,EAA2B;AACzB,QAAU,eAAe,MAAf,CAAV;AACA,UAAU,eAAe,QAAf,CAAV;AACA,WAAU,eAAe,SAAf,CAAV;AACA,WAAU,iBAAiB,CAAjB,CAAV;AACA,OAAU,iBAAiB,CAAjB,CAAV;AACA,UAAU,iBAAiB,CAAjB,CAAV;AACA,QAAU,iBAAiB,CAAjB,CAAV;AACA,SAAU,iBAAiB,CAAjB,CAAV;AACA,QAAU,iBAAiB,CAAjB,CAAV;AACA,WAAU,OAAV;AACA,YAAU,iBAAiB,CAAjB,CAAV;AACA,UAAU,MAAV;AACA,SAAU,KAAV;AACA,YAAU,QAAV;AACA,OAAU,GAAV;AACA,OAAU,GAAV;AACA,OAAU,GAAV;AACA,UAAU,MAAV;CAlBF","file":"core.dict-compiled.js","sourcesContent":["'use strict';\nvar $           = require('./$')\n  , ctx         = require('./$.ctx')\n  , $export     = require('./$.export')\n  , createDesc  = require('./$.property-desc')\n  , assign      = require('./$.object-assign')\n  , keyOf       = require('./$.keyof')\n  , aFunction   = require('./$.a-function')\n  , forOf       = require('./$.for-of')\n  , isIterable  = require('./core.is-iterable')\n  , $iterCreate = require('./$.iter-create')\n  , step        = require('./$.iter-step')\n  , isObject    = require('./$.is-object')\n  , toIObject   = require('./$.to-iobject')\n  , DESCRIPTORS = require('./$.descriptors')\n  , has         = require('./$.has')\n  , getKeys     = $.getKeys;\n\n// 0 -> Dict.forEach\n// 1 -> Dict.map\n// 2 -> Dict.filter\n// 3 -> Dict.some\n// 4 -> Dict.every\n// 5 -> Dict.find\n// 6 -> Dict.findKey\n// 7 -> Dict.mapPairs\nvar createDictMethod = function(TYPE){\n  var IS_MAP   = TYPE == 1\n    , IS_EVERY = TYPE == 4;\n  return function(object, callbackfn, that /* = undefined */){\n    var f      = ctx(callbackfn, that, 3)\n      , O      = toIObject(object)\n      , result = IS_MAP || TYPE == 7 || TYPE == 2\n          ? new (typeof this == 'function' ? this : Dict) : undefined\n      , key, val, res;\n    for(key in O)if(has(O, key)){\n      val = O[key];\n      res = f(val, key, object);\n      if(TYPE){\n        if(IS_MAP)result[key] = res;            // map\n        else if(res)switch(TYPE){\n          case 2: result[key] = val; break;     // filter\n          case 3: return true;                  // some\n          case 5: return val;                   // find\n          case 6: return key;                   // findKey\n          case 7: result[res[0]] = res[1];      // mapPairs\n        } else if(IS_EVERY)return false;        // every\n      }\n    }\n    return TYPE == 3 || IS_EVERY ? IS_EVERY : result;\n  };\n};\nvar findKey = createDictMethod(6);\n\nvar createDictIter = function(kind){\n  return function(it){\n    return new DictIterator(it, kind);\n  };\n};\nvar DictIterator = function(iterated, kind){\n  this._t = toIObject(iterated); // target\n  this._a = getKeys(iterated);   // keys\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n};\n$iterCreate(DictIterator, 'Dict', function(){\n  var that = this\n    , O    = that._t\n    , keys = that._a\n    , kind = that._k\n    , key;\n  do {\n    if(that._i >= keys.length){\n      that._t = undefined;\n      return step(1);\n    }\n  } while(!has(O, key = keys[that._i++]));\n  if(kind == 'keys'  )return step(0, key);\n  if(kind == 'values')return step(0, O[key]);\n  return step(0, [key, O[key]]);\n});\n\nfunction Dict(iterable){\n  var dict = $.create(null);\n  if(iterable != undefined){\n    if(isIterable(iterable)){\n      forOf(iterable, true, function(key, value){\n        dict[key] = value;\n      });\n    } else assign(dict, iterable);\n  }\n  return dict;\n}\nDict.prototype = null;\n\nfunction reduce(object, mapfn, init){\n  aFunction(mapfn);\n  var O      = toIObject(object)\n    , keys   = getKeys(O)\n    , length = keys.length\n    , i      = 0\n    , memo, key;\n  if(arguments.length < 3){\n    if(!length)throw TypeError('Reduce of empty object with no initial value');\n    memo = O[keys[i++]];\n  } else memo = Object(init);\n  while(length > i)if(has(O, key = keys[i++])){\n    memo = mapfn(memo, O[key], key, object);\n  }\n  return memo;\n}\n\nfunction includes(object, el){\n  return (el == el ? keyOf(object, el) : findKey(object, function(it){\n    return it != it;\n  })) !== undefined;\n}\n\nfunction get(object, key){\n  if(has(object, key))return object[key];\n}\nfunction set(object, key, value){\n  if(DESCRIPTORS && key in Object)$.setDesc(object, key, createDesc(0, value));\n  else object[key] = value;\n  return object;\n}\n\nfunction isDict(it){\n  return isObject(it) && $.getProto(it) === Dict.prototype;\n}\n\n$export($export.G + $export.F, {Dict: Dict});\n\n$export($export.S, 'Dict', {\n  keys:     createDictIter('keys'),\n  values:   createDictIter('values'),\n  entries:  createDictIter('entries'),\n  forEach:  createDictMethod(0),\n  map:      createDictMethod(1),\n  filter:   createDictMethod(2),\n  some:     createDictMethod(3),\n  every:    createDictMethod(4),\n  find:     createDictMethod(5),\n  findKey:  findKey,\n  mapPairs: createDictMethod(7),\n  reduce:   reduce,\n  keyOf:    keyOf,\n  includes: includes,\n  has:      has,\n  get:      get,\n  set:      set,\n  isDict:   isDict\n});"]}