{"version":3,"sources":["$.microtask.js"],"names":[],"mappings":";;AAAA,IAAI,SAAY,QAAQ,YAAR,CAAZ;IACA,YAAY,QAAQ,UAAR,EAAoB,GAApB;IACZ,WAAY,OAAO,gBAAP,IAA2B,OAAO,sBAAP;IACvC,UAAY,OAAO,OAAP;IACZ,UAAY,OAAO,OAAP;IACZ,SAAY,QAAQ,SAAR,EAAmB,OAAnB,KAA+B,SAA/B;IACZ,IANJ;IAMU,IANV;IAMgB,MANhB;;AAQA,IAAI,QAAQ,SAAR,KAAQ,GAAU;AACpB,MAAI,MAAJ,EAAY,MAAZ,EAAoB,EAApB,CADoB;AAEpB,MAAG,WAAW,SAAS,QAAQ,MAAR,CAApB,EAAoC;AACrC,YAAQ,MAAR,GAAiB,IAAjB,CADqC;AAErC,WAAO,IAAP,GAFqC;GAAvC;AAIA,SAAM,IAAN,EAAW;AACT,aAAS,KAAK,MAAL,CADA;AAET,SAAS,KAAK,EAAL,CAFA;AAGT,QAAG,MAAH,EAAU,OAAO,KAAP,GAAV;AACA;AAJS,QAKN,MAAH,EAAU,OAAO,IAAP,GAAV;AACA,WAAO,KAAK,IAAL,CANE;GAAX,IAOE,GAAO,SAAP,CAbkB;AAcpB,MAAG,MAAH,EAAU,OAAO,KAAP,GAAV;CAdU;;;AAkBZ,IAAG,MAAH,EAAU;AACR,WAAS,kBAAU;AACjB,YAAQ,QAAR,CAAiB,KAAjB,EADiB;GAAV;;AADD,CAAV,MAKO,IAAG,QAAH,EAAY;AACjB,QAAI,SAAS,CAAT;QACA,OAAS,SAAS,cAAT,CAAwB,EAAxB,CAAT,CAFa;AAGjB,QAAI,QAAJ,CAAa,KAAb,EAAoB,OAApB,CAA4B,IAA5B,EAAkC,EAAC,eAAe,IAAf,EAAnC;AAHiB,UAIjB,GAAS,kBAAU;AACjB,WAAK,IAAL,GAAY,SAAS,CAAC,MAAD,CADJ;KAAV;;AAJQ,GAAZ,MAQA,IAAG,WAAW,QAAQ,OAAR,EAAgB;AACnC,eAAS,kBAAU;AACjB,gBAAQ,OAAR,GAAkB,IAAlB,CAAuB,KAAvB,EADiB;OAAV;;;;;;;AAD0B,KAA9B,MAUA;AACL,iBAAS,kBAAU;;AAEjB,oBAAU,IAAV,CAAe,MAAf,EAAuB,KAAvB,EAFiB;SAAV,CADJ;OAVA;;AAiBP,OAAO,OAAP,GAAiB,SAAS,IAAT,CAAc,EAAd,EAAiB;AAChC,MAAI,OAAO,EAAC,IAAI,EAAJ,EAAQ,MAAM,SAAN,EAAiB,QAAQ,UAAU,QAAQ,MAAR,EAAnD,CAD4B;AAEhC,MAAG,IAAH,EAAQ,KAAK,IAAL,GAAY,IAAZ,CAAR;AACA,MAAG,CAAC,IAAD,EAAM;AACP,WAAO,IAAP,CADO;AAEP,aAFO;GAAT,IAGE,GAAO,IAAP,CAN8B;CAAjB","file":"$.microtask-compiled.js","sourcesContent":["var global    = require('./$.global')\n  , macrotask = require('./$.task').set\n  , Observer  = global.MutationObserver || global.WebKitMutationObserver\n  , process   = global.process\n  , Promise   = global.Promise\n  , isNode    = require('./$.cof')(process) == 'process'\n  , head, last, notify;\n\nvar flush = function(){\n  var parent, domain, fn;\n  if(isNode && (parent = process.domain)){\n    process.domain = null;\n    parent.exit();\n  }\n  while(head){\n    domain = head.domain;\n    fn     = head.fn;\n    if(domain)domain.enter();\n    fn(); // <- currently we use it only for Promise - try / catch not required\n    if(domain)domain.exit();\n    head = head.next;\n  } last = undefined;\n  if(parent)parent.enter();\n};\n\n// Node.js\nif(isNode){\n  notify = function(){\n    process.nextTick(flush);\n  };\n// browsers with MutationObserver\n} else if(Observer){\n  var toggle = 1\n    , node   = document.createTextNode('');\n  new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new\n  notify = function(){\n    node.data = toggle = -toggle;\n  };\n// environments with maybe non-completely correct, but existent Promise\n} else if(Promise && Promise.resolve){\n  notify = function(){\n    Promise.resolve().then(flush);\n  };\n// for other environments - macrotask based on:\n// - setImmediate\n// - MessageChannel\n// - window.postMessag\n// - onreadystatechange\n// - setTimeout\n} else {\n  notify = function(){\n    // strange IE + webpack dev server bug - use .call(global)\n    macrotask.call(global, flush);\n  };\n}\n\nmodule.exports = function asap(fn){\n  var task = {fn: fn, next: undefined, domain: isNode && process.domain};\n  if(last)last.next = task;\n  if(!head){\n    head = task;\n    notify();\n  } last = task;\n};"]}