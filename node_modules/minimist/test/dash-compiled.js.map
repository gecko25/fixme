{"version":3,"sources":["dash.js"],"names":[],"mappings":";;AAAA,IAAI,QAAQ,QAAQ,KAAR,CAAR;AACJ,IAAI,OAAO,QAAQ,MAAR,CAAP;;AAEJ,KAAK,GAAL,EAAU,UAAU,CAAV,EAAa;AACnB,MAAE,IAAF,CAAO,CAAP,EADmB;AAEnB,MAAE,SAAF,CAAY,MAAM,CAAE,IAAF,EAAQ,GAAR,CAAN,CAAZ,EAAkC,EAAE,GAAG,GAAH,EAAQ,GAAG,EAAH,EAA5C,EAFmB;AAGnB,MAAE,SAAF,CAAY,MAAM,CAAE,GAAF,CAAN,CAAZ,EAA4B,EAAE,GAAG,CAAE,GAAF,CAAH,EAA9B,EAHmB;AAInB,MAAE,SAAF,CAAY,MAAM,CAAE,KAAF,CAAN,CAAZ,EAA8B,EAAE,GAAG,GAAH,EAAQ,GAAG,EAAH,EAAxC,EAJmB;AAKnB,MAAE,SAAF,CACI,MAAM,CAAE,IAAF,EAAQ,GAAR,CAAN,EAAqB,EAAE,SAAS,GAAT,EAAvB,CADJ,EAEI,EAAE,GAAG,IAAH,EAAS,GAAG,CAAE,GAAF,CAAH,EAFf,EALmB;AASnB,MAAE,SAAF,CACI,MAAM,CAAE,IAAF,EAAQ,GAAR,CAAN,EAAqB,EAAE,QAAQ,GAAR,EAAvB,CADJ,EAEI,EAAE,GAAG,GAAH,EAAQ,GAAG,EAAH,EAFd,EATmB;CAAb,CAAV;;AAeA,KAAK,SAAL,EAAgB,UAAU,CAAV,EAAa;AACzB,MAAE,IAAF,CAAO,CAAP,EADyB;AAEzB,MAAE,SAAF,CAAY,MAAM,CAAE,IAAF,EAAQ,IAAR,EAAc,GAAd,CAAN,CAAZ,EAAwC,EAAE,GAAG,IAAH,EAAS,GAAG,CAAE,GAAF,CAAH,EAAnD,EAFyB;AAGzB,MAAE,SAAF,CAAY,MAAM,CAAE,KAAF,EAAS,IAAT,EAAe,GAAf,CAAN,CAAZ,EAAyC,EAAE,GAAG,IAAH,EAAS,GAAG,CAAE,GAAF,CAAH,EAApD,EAHyB;AAIzB,MAAE,SAAF,CAAY,MAAM,CAAE,KAAF,EAAS,IAAT,EAAe,GAAf,CAAN,CAAZ,EAAyC,EAAE,GAAG,IAAH,EAAS,GAAG,CAAE,GAAF,CAAH,EAApD,EAJyB;CAAb,CAAhB;;AAOA,KAAK,uDAAL,EAA8D,UAAS,CAAT,EAAY;AACtE,MAAE,IAAF,CAAO,CAAP,EADsE;AAEtE,MAAE,SAAF,CACI,MAAM,CAAE,QAAF,EAAY,MAAZ,EAAoB,QAApB,EAA8B,IAA9B,EAAoC,OAApC,CAAN,EAAqD,EAAE,MAAM,IAAN,EAAvD,CADJ,EAEI,EAAE,MAAM,MAAN,EAAc,GAAG,CAAE,QAAF,CAAH,EAAiB,MAAM,CAAE,OAAF,CAAN,EAFrC,EAFsE;CAAZ,CAA9D","file":"dash-compiled.js","sourcesContent":["var parse = require('../');\nvar test = require('tape');\n\ntest('-', function (t) {\n    t.plan(5);\n    t.deepEqual(parse([ '-n', '-' ]), { n: '-', _: [] });\n    t.deepEqual(parse([ '-' ]), { _: [ '-' ] });\n    t.deepEqual(parse([ '-f-' ]), { f: '-', _: [] });\n    t.deepEqual(\n        parse([ '-b', '-' ], { boolean: 'b' }),\n        { b: true, _: [ '-' ] }\n    );\n    t.deepEqual(\n        parse([ '-s', '-' ], { string: 's' }),\n        { s: '-', _: [] }\n    );\n});\n\ntest('-a -- b', function (t) {\n    t.plan(3);\n    t.deepEqual(parse([ '-a', '--', 'b' ]), { a: true, _: [ 'b' ] });\n    t.deepEqual(parse([ '--a', '--', 'b' ]), { a: true, _: [ 'b' ] });\n    t.deepEqual(parse([ '--a', '--', 'b' ]), { a: true, _: [ 'b' ] });\n});\n\ntest('move arguments after the -- into their own `--` array', function(t) {\n    t.plan(1);\n    t.deepEqual(\n        parse([ '--name', 'John', 'before', '--', 'after' ], { '--': true }),\n        { name: 'John', _: [ 'before' ], '--': [ 'after' ] });\n});\n"]}