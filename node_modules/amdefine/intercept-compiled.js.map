{"version":3,"sources":["intercept.js"],"names":[],"mappings":";;;AACA,IAAI,QAAJ;IACI,SAAS,QAAQ,QAAR,CAAT;IACA,KAAK,QAAQ,IAAR,CAAL;IACA,gBAAgB,OAAO,WAAP,CAAmB,KAAnB,CAAhB;IACA,iBAAiB,cAAjB;;AAEJ,WAAY,8EAAZ;;;AAGA,SAAS,QAAT,CAAkB,OAAlB,EAA2B;;;;AAIvB,QAAI,QAAQ,UAAR,CAAmB,CAAnB,MAA0B,MAA1B,EAAkC;AAClC,kBAAU,QAAQ,KAAR,CAAc,CAAd,CAAV,CADkC;KAAtC;AAGA,WAAO,OAAP,CAPuB;CAA3B;;;AAWA,SAAS,SAAT,CAAmB,MAAnB,EAA2B,QAA3B,EAAqC;AACjC,QAAI,UAAU,SAAS,GAAG,YAAH,CAAgB,QAAhB,EAA0B,MAA1B,CAAT,CAAV,CAD6B;;AAGjC,QAAI,CAAC,eAAe,IAAf,CAAoB,OAAO,EAAP,CAArB,EAAiC;AACjC,kBAAU,WAAW,OAAX,CADuB;KAArC;;AAIA,WAAO,QAAP,CAAgB,OAAhB,EAAyB,QAAzB,EAPiC;CAArC;;AAUA,UAAU,GAAV,GAAgB,oBAAhB;;AAEA,IAAI,CAAC,cAAc,GAAd,IAAqB,cAAc,GAAd,KAAsB,UAAU,GAAV,EAAe;AAC3D,WAAO,WAAP,CAAmB,KAAnB,IAA4B,SAA5B,CAD2D;CAA/D","file":"intercept-compiled.js","sourcesContent":["/*jshint node: true */\nvar inserted,\n    Module = require('module'),\n    fs = require('fs'),\n    existingExtFn = Module._extensions['.js'],\n    amdefineRegExp = /amdefine\\.js/;\n\ninserted  = \"if (typeof define !== 'function') {var define = require('amdefine')(module)}\";\n\n//From the node/lib/module.js source:\nfunction stripBOM(content) {\n    // Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n    // because the buffer-to-string conversion in `fs.readFileSync()`\n    // translates it to FEFF, the UTF-16 BOM.\n    if (content.charCodeAt(0) === 0xFEFF) {\n        content = content.slice(1);\n    }\n    return content;\n}\n\n//Also adapted from the node/lib/module.js source:\nfunction intercept(module, filename) {\n    var content = stripBOM(fs.readFileSync(filename, 'utf8'));\n\n    if (!amdefineRegExp.test(module.id)) {\n        content = inserted + content;\n    }\n\n    module._compile(content, filename);\n}\n\nintercept._id = 'amdefine/intercept';\n\nif (!existingExtFn._id || existingExtFn._id !== intercept._id) {\n    Module._extensions['.js'] = intercept;\n}\n"]}