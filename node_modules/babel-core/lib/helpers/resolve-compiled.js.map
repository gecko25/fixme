{"version":3,"sources":["resolve.js"],"names":[],"mappings":"AAAA;;;;AAEA,IAAI,yBAAyB,QAAQ,+CAAR,EAAyD,SAAzD,CAAzB;;AAEJ,QAAQ,UAAR,GAAqB,IAArB;;AAEA,IAAI,WAAW,QAAQ,QAAR,CAAX;;AAEJ,IAAI,WAAW,uBAAuB,QAAvB,CAAX;;AAEJ,IAAI,QAAQ,QAAQ,MAAR,CAAR;;AAEJ,IAAI,SAAS,uBAAuB,KAAvB,CAAT;;AAEJ,IAAI,kBAAkB,EAAlB;;AAEJ,QAAQ,SAAR,IAAqB,UAAU,GAAV,EAAe;AAClC,MAAI,WAAW,UAAU,MAAV,IAAoB,CAApB,IAAyB,UAAU,CAAV,MAAiB,SAAjB,GAA6B,QAAQ,GAAR,EAAtD,GAAsE,UAAU,CAAV,CAAtE;;;AADmB,MAI9B,QAAO,SAAS,SAAT,EAAP,KAA+B,QAA/B,EAAyC,OAAO,IAAP,CAA7C;;AAEA,MAAI,cAAc,gBAAgB,QAAhB,CAAd,CAN8B;;AAQlC,MAAI,CAAC,WAAD,EAAc;AAChB,kBAAc,IAAI,SAAS,SAAT,CAAJ,EAAd;;;;;;;;AADgB,QASZ,WAAW,OAAO,SAAP,EAAkB,IAAlB,CAAuB,QAAvB,EAAiC,UAAjC,CAAX,CATY;AAUhB,gBAAY,EAAZ,GAAiB,QAAjB,CAVgB;AAWhB,gBAAY,QAAZ,GAAuB,QAAvB,CAXgB;;AAahB,gBAAY,KAAZ,GAAoB,SAAS,SAAT,EAAoB,gBAApB,CAAqC,QAArC,CAApB,CAbgB;AAchB,oBAAgB,QAAhB,IAA4B,WAA5B,CAdgB;GAAlB;;AAiBA,MAAI;AACF,WAAO,SAAS,SAAT,EAAoB,gBAApB,CAAqC,GAArC,EAA0C,WAA1C,CAAP,CADE;GAAJ,CAEE,OAAO,GAAP,EAAY;AACZ,WAAO,IAAP,CADY;GAAZ;CA3BiB;;AAgCrB,OAAO,OAAP,GAAiB,QAAQ,SAAR,CAAjB","file":"resolve-compiled.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"babel-runtime/helpers/interop-require-default\")[\"default\"];\n\nexports.__esModule = true;\n\nvar _module2 = require(\"module\");\n\nvar _module3 = _interopRequireDefault(_module2);\n\nvar _path = require(\"path\");\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar relativeModules = {};\n\nexports[\"default\"] = function (loc) {\n  var relative = arguments.length <= 1 || arguments[1] === undefined ? process.cwd() : arguments[1];\n\n  // we're in the browser, probably\n  if (typeof _module3[\"default\"] === \"object\") return null;\n\n  var relativeMod = relativeModules[relative];\n\n  if (!relativeMod) {\n    relativeMod = new _module3[\"default\"]();\n\n    // We need to define an id and filename on our \"fake\" relative` module so that\n    // Node knows what \".\" means in the case of us trying to resolve a plugin\n    // such as \"./myPlugins/somePlugin.js\". If we don't specify id and filename here,\n    // Node presumes \".\" is process.cwd(), not our relative path.\n    // Since this fake module is never \"loaded\", we don't have to worry about mutating\n    // any global Node module cache state here.\n    var filename = _path2[\"default\"].join(relative, \".babelrc\");\n    relativeMod.id = filename;\n    relativeMod.filename = filename;\n\n    relativeMod.paths = _module3[\"default\"]._nodeModulePaths(relative);\n    relativeModules[relative] = relativeMod;\n  }\n\n  try {\n    return _module3[\"default\"]._resolveFilename(loc, relativeMod);\n  } catch (err) {\n    return null;\n  }\n};\n\nmodule.exports = exports[\"default\"];"]}