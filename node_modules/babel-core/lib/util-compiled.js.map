{"version":3,"sources":["util.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,yBAAyB,QAAQ,+CAAR,EAAyD,SAAzD,CAAzB;;AAEJ,QAAQ,UAAR,GAAqB,IAArB;AACA,QAAQ,UAAR,GAAqB,UAArB;AACA,QAAQ,IAAR,GAAe,IAAf;AACA,QAAQ,QAAR,GAAmB,QAAnB;AACA,QAAQ,QAAR,GAAmB,QAAnB;AACA,QAAQ,UAAR,GAAqB,UAArB;AACA,QAAQ,YAAR,GAAuB,YAAvB;;AAEA,IAAI,4BAA4B,QAAQ,4BAAR,CAA5B;;AAEJ,IAAI,6BAA6B,uBAAuB,yBAAvB,CAA7B;;AAEJ,IAAI,0BAA0B,QAAQ,0BAAR,CAA1B;;AAEJ,IAAI,2BAA2B,uBAAuB,uBAAvB,CAA3B;;AAEJ,IAAI,uBAAuB,QAAQ,uBAAR,CAAvB;;AAEJ,IAAI,wBAAwB,uBAAuB,oBAAvB,CAAxB;;AAEJ,IAAI,aAAa,QAAQ,WAAR,CAAb;;AAEJ,IAAI,cAAc,uBAAuB,UAAvB,CAAd;;AAEJ,IAAI,4BAA4B,QAAQ,4BAAR,CAA5B;;AAEJ,IAAI,6BAA6B,uBAAuB,yBAAvB,CAA7B;;AAEJ,IAAI,sBAAsB,QAAQ,sBAAR,CAAtB;;AAEJ,IAAI,uBAAuB,uBAAuB,mBAAvB,CAAvB;;AAEJ,IAAI,sBAAsB,QAAQ,sBAAR,CAAtB;;AAEJ,IAAI,uBAAuB,uBAAuB,mBAAvB,CAAvB;;AAEJ,IAAI,QAAQ,QAAQ,MAAR,CAAR;;AAEJ,IAAI,SAAS,uBAAuB,KAAvB,CAAT;;AAEJ,IAAI,SAAS,QAAQ,OAAR,CAAT;;AAEJ,IAAI,UAAU,uBAAuB,MAAvB,CAAV;;AAEJ,IAAI,QAAQ,QAAQ,MAAR,CAAR;;AAEJ,QAAQ,QAAR,GAAmB,MAAM,QAAN;AACnB,QAAQ,OAAR,GAAkB,MAAM,OAAN;;;;;;AAMlB,SAAS,UAAT,CAAoB,QAApB,EAA8B,OAA9B,EAAuC;AACrC,MAAI,OAAO,WAAW,WAAW,UAAX,CADe;AAErC,MAAI,MAAM,OAAO,SAAP,EAAkB,OAAlB,CAA0B,QAA1B,CAAN,CAFiC;AAGrC,SAAO,2BAA2B,SAA3B,EAAsC,IAAtC,EAA4C,GAA5C,CAAP,CAHqC;CAAvC;;;;;;AAUA,WAAW,UAAX,GAAwB,CAAC,KAAD,EAAQ,MAAR,EAAgB,MAAhB,EAAwB,KAAxB,CAAxB;;;;;;AAMA,SAAS,IAAT,CAAc,GAAd,EAAmB;AACjB,MAAI,CAAC,GAAD,EAAM;AACR,WAAO,EAAP,CADQ;GAAV,MAEO,IAAI,MAAM,OAAN,CAAc,GAAd,CAAJ,EAAwB;AAC7B,WAAO,GAAP,CAD6B;GAAxB,MAEA,IAAI,OAAO,GAAP,KAAe,QAAf,EAAyB;AAClC,WAAO,IAAI,KAAJ,CAAU,GAAV,CAAP,CADkC;GAA7B,MAEA;AACL,WAAO,CAAC,GAAD,CAAP,CADK;GAFA;CALT;;;;;;AAgBA,SAAS,QAAT,CAAkB,GAAlB,EAAuB;AACrB,MAAI,CAAC,GAAD,EAAM;AACR,WAAO,IAAI,MAAJ,CAAW,IAAX,CAAP,CADQ;GAAV;;AAIA,MAAI,MAAM,OAAN,CAAc,GAAd,CAAJ,EAAwB;AACtB,UAAM,IAAI,MAAJ,CAAW,IAAI,GAAJ,CAAQ,2BAA2B,SAA3B,CAAR,EAA+C,IAA/C,CAAoD,GAApD,CAAX,EAAqE,GAArE,CAAN,CADsB;GAAxB;;AAIA,MAAI,OAAO,GAAP,KAAe,QAAf,EAAyB;;AAE3B,UAAM,QAAQ,SAAR,EAAmB,GAAnB,CAAN;;;AAF2B,QAKvB,yBAAyB,SAAzB,EAAoC,GAApC,EAAyC,IAAzC,KAAkD,yBAAyB,SAAzB,EAAoC,GAApC,EAAyC,IAAzC,CAAlD,EAAkG,MAAM,IAAI,KAAJ,CAAU,CAAV,CAAN,CAAtG;AACA,QAAI,yBAAyB,SAAzB,EAAoC,GAApC,EAAyC,KAAzC,CAAJ,EAAqD,MAAM,IAAI,KAAJ,CAAU,CAAV,CAAN,CAArD;;AAEA,QAAI,QAAQ,YAAY,SAAZ,EAAuB,MAAvB,CAA8B,GAA9B,EAAmC,EAAE,QAAQ,IAAR,EAArC,CAAR,CARuB;AAS3B,WAAO,IAAI,MAAJ,CAAW,MAAM,MAAN,CAAa,KAAb,CAAmB,CAAnB,EAAsB,CAAC,CAAD,CAAjC,EAAsC,GAAtC,CAAP,CAT2B;GAA7B;;AAYA,MAAI,qBAAqB,SAArB,EAAgC,GAAhC,CAAJ,EAA0C;AACxC,WAAO,GAAP,CADwC;GAA1C;;AAIA,QAAM,IAAI,SAAJ,CAAc,2BAAd,CAAN,CAzBqB;CAAvB;;;;;;AAgCA,SAAS,QAAT,CAAkB,GAAlB,EAAuB,KAAvB,EAA8B;AAC5B,MAAI,CAAC,GAAD,EAAM,OAAO,EAAP,CAAV;AACA,MAAI,sBAAsB,SAAtB,EAAiC,GAAjC,CAAJ,EAA2C,OAAO,SAAS,CAAC,GAAD,CAAT,EAAgB,KAAhB,CAAP,CAA3C;AACA,MAAI,qBAAqB,SAArB,EAAgC,GAAhC,CAAJ,EAA0C,OAAO,SAAS,KAAK,GAAL,CAAT,EAAoB,KAApB,CAAP,CAA1C;;AAEA,MAAI,MAAM,OAAN,CAAc,GAAd,CAAJ,EAAwB;AACtB,QAAI,KAAJ,EAAW,MAAM,IAAI,GAAJ,CAAQ,KAAR,CAAN,CAAX;AACA,WAAO,GAAP,CAFsB;GAAxB;;AAKA,SAAO,CAAC,GAAD,CAAP,CAV4B;CAA9B;;;;;;AAiBA,SAAS,UAAT,CAAoB,GAApB,EAAyB;AACvB,MAAI,QAAQ,MAAR,IAAkB,OAAO,CAAP,EAAU;AAC9B,WAAO,IAAP,CAD8B;GAAhC;;AAIA,MAAI,QAAQ,OAAR,IAAmB,OAAO,CAAP,IAAY,CAAC,GAAD,EAAM;AACvC,WAAO,KAAP,CADuC;GAAzC;;AAIA,SAAO,GAAP,CATuB;CAAzB;;;;;;AAgBA,SAAS,YAAT,CAAsB,QAAtB,EAAgC,MAAhC,EAAwC,IAAxC,EAA8C;AAC5C,MAAI,WAAW,SAAX,EAAsB,SAAS,EAAT,CAA1B;;AAEA,aAAW,QAAQ,SAAR,EAAmB,QAAnB,CAAX,CAH4C;;AAK5C,MAAI,IAAJ,EAAU;AACR,SAAK,IAAI,KAAK,CAAL,EAAQ,KAAK,KAAK,MAAL,EAAa,IAAnC,EAAyC;AACvC,UAAI,UAAU,KAAK,EAAL,CAAV,CADmC;AAEvC,UAAI,cAAc,OAAd,EAAuB,QAAvB,CAAJ,EAAsC,OAAO,KAAP,CAAtC;KAFF;AAIA,WAAO,IAAP,CALQ;GAAV,MAMO,IAAI,OAAO,MAAP,EAAe;AACxB,SAAK,IAAI,MAAM,CAAN,EAAS,MAAM,OAAO,MAAP,EAAe,KAAvC,EAA8C;AAC5C,UAAI,UAAU,OAAO,GAAP,CAAV,CADwC;AAE5C,UAAI,cAAc,OAAd,EAAuB,QAAvB,CAAJ,EAAsC,OAAO,IAAP,CAAtC;KAFF;GADK;;AAOP,SAAO,KAAP,CAlB4C;CAA9C;;;;;;;AA0BA,SAAS,aAAT,CAAuB,OAAvB,EAAgC,QAAhC,EAA0C;AACxC,MAAI,OAAO,OAAP,KAAmB,UAAnB,EAA+B;AACjC,WAAO,QAAQ,QAAR,CAAP,CADiC;GAAnC,MAEO;AACL,WAAO,QAAQ,IAAR,CAAa,QAAb,CAAP,CADK;GAFP;CADF","file":"util-compiled.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"babel-runtime/helpers/interop-require-default\")[\"default\"];\n\nexports.__esModule = true;\nexports.canCompile = canCompile;\nexports.list = list;\nexports.regexify = regexify;\nexports.arrayify = arrayify;\nexports.booleanify = booleanify;\nexports.shouldIgnore = shouldIgnore;\n\nvar _lodashStringEscapeRegExp = require(\"lodash/string/escapeRegExp\");\n\nvar _lodashStringEscapeRegExp2 = _interopRequireDefault(_lodashStringEscapeRegExp);\n\nvar _lodashStringStartsWith = require(\"lodash/string/startsWith\");\n\nvar _lodashStringStartsWith2 = _interopRequireDefault(_lodashStringStartsWith);\n\nvar _lodashLangIsBoolean = require(\"lodash/lang/isBoolean\");\n\nvar _lodashLangIsBoolean2 = _interopRequireDefault(_lodashLangIsBoolean);\n\nvar _minimatch = require(\"minimatch\");\n\nvar _minimatch2 = _interopRequireDefault(_minimatch);\n\nvar _lodashCollectionContains = require(\"lodash/collection/contains\");\n\nvar _lodashCollectionContains2 = _interopRequireDefault(_lodashCollectionContains);\n\nvar _lodashLangIsString = require(\"lodash/lang/isString\");\n\nvar _lodashLangIsString2 = _interopRequireDefault(_lodashLangIsString);\n\nvar _lodashLangIsRegExp = require(\"lodash/lang/isRegExp\");\n\nvar _lodashLangIsRegExp2 = _interopRequireDefault(_lodashLangIsRegExp);\n\nvar _path = require(\"path\");\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _slash = require(\"slash\");\n\nvar _slash2 = _interopRequireDefault(_slash);\n\nvar _util = require(\"util\");\n\nexports.inherits = _util.inherits;\nexports.inspect = _util.inspect;\n\n/**\n * Test if a filename ends with a compilable extension.\n */\n\nfunction canCompile(filename, altExts) {\n  var exts = altExts || canCompile.EXTENSIONS;\n  var ext = _path2[\"default\"].extname(filename);\n  return _lodashCollectionContains2[\"default\"](exts, ext);\n}\n\n/**\n * Default set of compilable extensions.\n */\n\ncanCompile.EXTENSIONS = [\".js\", \".jsx\", \".es6\", \".es\"];\n\n/**\n * Create an array from any value, splitting strings by \",\".\n */\n\nfunction list(val) {\n  if (!val) {\n    return [];\n  } else if (Array.isArray(val)) {\n    return val;\n  } else if (typeof val === \"string\") {\n    return val.split(\",\");\n  } else {\n    return [val];\n  }\n}\n\n/**\n * Create a RegExp from a string, array, or regexp.\n */\n\nfunction regexify(val) {\n  if (!val) {\n    return new RegExp(/.^/);\n  }\n\n  if (Array.isArray(val)) {\n    val = new RegExp(val.map(_lodashStringEscapeRegExp2[\"default\"]).join(\"|\"), \"i\");\n  }\n\n  if (typeof val === \"string\") {\n    // normalise path separators\n    val = _slash2[\"default\"](val);\n\n    // remove starting wildcards or relative separator if present\n    if (_lodashStringStartsWith2[\"default\"](val, \"./\") || _lodashStringStartsWith2[\"default\"](val, \"*/\")) val = val.slice(2);\n    if (_lodashStringStartsWith2[\"default\"](val, \"**/\")) val = val.slice(3);\n\n    var regex = _minimatch2[\"default\"].makeRe(val, { nocase: true });\n    return new RegExp(regex.source.slice(1, -1), \"i\");\n  }\n\n  if (_lodashLangIsRegExp2[\"default\"](val)) {\n    return val;\n  }\n\n  throw new TypeError(\"illegal type for regexify\");\n}\n\n/**\n * Create an array from a boolean, string, or array, mapped by and optional function.\n */\n\nfunction arrayify(val, mapFn) {\n  if (!val) return [];\n  if (_lodashLangIsBoolean2[\"default\"](val)) return arrayify([val], mapFn);\n  if (_lodashLangIsString2[\"default\"](val)) return arrayify(list(val), mapFn);\n\n  if (Array.isArray(val)) {\n    if (mapFn) val = val.map(mapFn);\n    return val;\n  }\n\n  return [val];\n}\n\n/**\n * Makes boolean-like strings into booleans.\n */\n\nfunction booleanify(val) {\n  if (val === \"true\" || val == 1) {\n    return true;\n  }\n\n  if (val === \"false\" || val == 0 || !val) {\n    return false;\n  }\n\n  return val;\n}\n\n/**\n * Tests if a filename should be ignored based on \"ignore\" and \"only\" options.\n */\n\nfunction shouldIgnore(filename, ignore, only) {\n  if (ignore === undefined) ignore = [];\n\n  filename = _slash2[\"default\"](filename);\n\n  if (only) {\n    for (var _i = 0; _i < only.length; _i++) {\n      var pattern = only[_i];\n      if (_shouldIgnore(pattern, filename)) return false;\n    }\n    return true;\n  } else if (ignore.length) {\n    for (var _i2 = 0; _i2 < ignore.length; _i2++) {\n      var pattern = ignore[_i2];\n      if (_shouldIgnore(pattern, filename)) return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns result of calling function with filename if pattern is a function.\n * Otherwise returns result of matching pattern Regex with filename.\n */\n\nfunction _shouldIgnore(pattern, filename) {\n  if (typeof pattern === \"function\") {\n    return pattern(filename);\n  } else {\n    return pattern.test(filename);\n  }\n}"]}