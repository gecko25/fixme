{"version":3,"sources":["renamer.js"],"names":[],"mappings":"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","file":"renamer-compiled.js","sourcesContent":["\"use strict\";\n\nvar _classCallCheck = require(\"babel-runtime/helpers/class-call-check\")[\"default\"];\n\nvar _interopRequireDefault = require(\"babel-runtime/helpers/interop-require-default\")[\"default\"];\n\nvar _interopRequireWildcard = require(\"babel-runtime/helpers/interop-require-wildcard\")[\"default\"];\n\nexports.__esModule = true;\n\nvar _binding = require(\"../binding\");\n\nvar _binding2 = _interopRequireDefault(_binding);\n\nvar _babelTypes = require(\"babel-types\");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nvar renameVisitor = {\n  ReferencedIdentifier: function ReferencedIdentifier(_ref, state) {\n    var node = _ref.node;\n\n    if (node.name === state.oldName) {\n      node.name = state.newName;\n    }\n  },\n\n  Scope: function Scope(path, state) {\n    if (!path.scope.bindingIdentifierEquals(state.oldName, state.binding.identifier)) {\n      path.skip();\n    }\n  },\n\n  \"AssignmentExpression|Declaration\": function AssignmentExpressionDeclaration(path, state) {\n    var ids = path.getOuterBindingIdentifiers();\n\n    for (var _name in ids) {\n      if (_name === state.oldName) ids[_name].name = state.newName;\n    }\n  }\n};\n\nvar Renamer = (function () {\n  function Renamer(binding, oldName, newName) {\n    _classCallCheck(this, Renamer);\n\n    this.newName = newName;\n    this.oldName = oldName;\n    this.binding = binding;\n  }\n\n  Renamer.prototype.maybeConvertFromExportDeclaration = function maybeConvertFromExportDeclaration(parentDeclar) {\n    var exportDeclar = parentDeclar.parentPath.isExportDeclaration() && parentDeclar.parentPath;\n    if (!exportDeclar) return;\n\n    // build specifiers that point back to this export declaration\n    var isDefault = exportDeclar.isExportDefaultDeclaration();\n\n    if (isDefault && (parentDeclar.isFunctionDeclaration() || parentDeclar.isClassDeclaration()) && !parentDeclar.node.id) {\n      // Ensure that default class and function exports have a name so they have a identifier to\n      // reference from the export specifier list.\n      parentDeclar.node.id = parentDeclar.scope.generateUidIdentifier(\"default\");\n    }\n\n    var bindingIdentifiers = parentDeclar.getOuterBindingIdentifiers();\n    var specifiers = [];\n\n    for (var _name2 in bindingIdentifiers) {\n      var localName = _name2 === this.oldName ? this.newName : _name2;\n      var exportedName = isDefault ? \"default\" : _name2;\n      specifiers.push(t.exportSpecifier(t.identifier(localName), t.identifier(exportedName)));\n    }\n\n    var aliasDeclar = t.exportNamedDeclaration(null, specifiers);\n\n    // hoist to the top if it's a function\n    if (parentDeclar.isFunctionDeclaration()) {\n      aliasDeclar._blockHoist = 3;\n    }\n\n    exportDeclar.insertAfter(aliasDeclar);\n    exportDeclar.replaceWith(parentDeclar.node);\n  };\n\n  Renamer.prototype.maybeConvertFromClassFunctionDeclaration = function maybeConvertFromClassFunctionDeclaration(path) {\n    return; // TODO\n\n    // retain the `name` of a class/function declaration\n\n    if (!path.isFunctionDeclaration() && !path.isClassDeclaration()) return;\n    if (this.binding.kind !== \"hoisted\") return;\n\n    path.node.id = t.identifier(this.oldName);\n    path.node._blockHoist = 3;\n\n    path.replaceWith(t.variableDeclaration(\"let\", [t.variableDeclarator(t.identifier(this.newName), t.toExpression(path.node))]));\n  };\n\n  Renamer.prototype.maybeConvertFromClassFunctionExpression = function maybeConvertFromClassFunctionExpression(path) {\n    return; // TODO\n\n    // retain the `name` of a class/function expression\n\n    if (!path.isFunctionExpression() && !path.isClassExpression()) return;\n    if (this.binding.kind !== \"local\") return;\n\n    path.node.id = t.identifier(this.oldName);\n\n    this.binding.scope.parent.push({\n      id: t.identifier(this.newName)\n    });\n\n    path.replaceWith(t.assignmentExpression(\"=\", t.identifier(this.newName), path.node));\n  };\n\n  Renamer.prototype.rename = function rename(block) {\n    var binding = this.binding;\n    var oldName = this.oldName;\n    var newName = this.newName;\n    var scope = binding.scope;\n    var path = binding.path;\n\n    var parentDeclar = path.find(function (path) {\n      return path.isDeclaration() || path.isFunctionExpression();\n    });\n    if (parentDeclar) {\n      this.maybeConvertFromExportDeclaration(parentDeclar);\n    }\n\n    scope.traverse(block || scope.block, renameVisitor, this);\n\n    if (!block) {\n      scope.removeOwnBinding(oldName);\n      scope.bindings[newName] = binding;\n      this.binding.identifier.name = newName;\n    }\n\n    if (binding.type === \"hoisted\") {\n      // https://github.com/babel/babel/issues/2435\n      // todo: hoist and convert function to a let\n    }\n\n    if (parentDeclar) {\n      this.maybeConvertFromClassFunctionDeclaration(parentDeclar);\n      this.maybeConvertFromClassFunctionExpression(parentDeclar);\n    }\n  };\n\n  return Renamer;\n})();\n\nexports[\"default\"] = Renamer;\nmodule.exports = exports[\"default\"];"]}