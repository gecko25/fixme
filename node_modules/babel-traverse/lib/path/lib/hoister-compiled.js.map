{"version":3,"sources":["hoister.js"],"names":[],"mappings":"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","file":"hoister-compiled.js","sourcesContent":["\"use strict\";\n\nvar _classCallCheck = require(\"babel-runtime/helpers/class-call-check\")[\"default\"];\n\nvar _interopRequireWildcard = require(\"babel-runtime/helpers/interop-require-wildcard\")[\"default\"];\n\nexports.__esModule = true;\n\nvar _babelTypes = require(\"babel-types\");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nvar referenceVisitor = {\n  ReferencedIdentifier: function ReferencedIdentifier(path, state) {\n    if (path.isJSXIdentifier() && _babelTypes.react.isCompatTag(path.node.name)) {\n      return;\n    }\n\n    // direct references that we need to track to hoist this to the highest scope we can\n    var binding = path.scope.getBinding(path.node.name);\n    if (!binding) return;\n\n    // this binding isn't accessible from the parent scope so we can safely ignore it\n    // eg. it's in a closure etc\n    if (binding !== state.scope.getBinding(path.node.name)) return;\n\n    if (binding.constant) {\n      state.bindings[path.node.name] = binding;\n    } else {\n      var _arr = binding.constantViolations;\n\n      for (var _i = 0; _i < _arr.length; _i++) {\n        var violationPath = _arr[_i];\n        state.breakOnScopePaths = state.breakOnScopePaths.concat(violationPath.getAncestry());\n      }\n    }\n  }\n};\n\nvar PathHoister = (function () {\n  function PathHoister(path, scope) {\n    _classCallCheck(this, PathHoister);\n\n    this.breakOnScopePaths = [];\n    this.bindings = {};\n    this.scopes = [];\n    this.scope = scope;\n    this.path = path;\n  }\n\n  PathHoister.prototype.isCompatibleScope = function isCompatibleScope(scope) {\n    for (var key in this.bindings) {\n      var binding = this.bindings[key];\n      if (!scope.bindingIdentifierEquals(key, binding.identifier)) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  PathHoister.prototype.getCompatibleScopes = function getCompatibleScopes() {\n    var scope = this.path.scope;\n    do {\n      if (this.isCompatibleScope(scope)) {\n        this.scopes.push(scope);\n      } else {\n        break;\n      }\n\n      if (this.breakOnScopePaths.indexOf(scope.path) >= 0) {\n        break;\n      }\n    } while (scope = scope.parent);\n  };\n\n  PathHoister.prototype.getAttachmentPath = function getAttachmentPath() {\n    var scopes = this.scopes;\n\n    var scope = scopes.pop();\n    if (!scope) return;\n\n    if (scope.path.isFunction()) {\n      if (this.hasOwnParamBindings(scope)) {\n        // should ignore this scope since it's ourselves\n        if (this.scope === scope) return;\n\n        // needs to be attached to the body\n        return scope.path.get(\"body\").get(\"body\")[0];\n      } else {\n        // doesn't need to be be attached to this scope\n        return this.getNextScopeStatementParent();\n      }\n    } else if (scope.path.isProgram()) {\n      return this.getNextScopeStatementParent();\n    }\n  };\n\n  PathHoister.prototype.getNextScopeStatementParent = function getNextScopeStatementParent() {\n    var scope = this.scopes.pop();\n    if (scope) return scope.path.getStatementParent();\n  };\n\n  PathHoister.prototype.hasOwnParamBindings = function hasOwnParamBindings(scope) {\n    for (var _name in this.bindings) {\n      if (!scope.hasOwnBinding(_name)) continue;\n\n      var binding = this.bindings[_name];\n      if (binding.kind === \"param\") return true;\n    }\n    return false;\n  };\n\n  PathHoister.prototype.run = function run() {\n    var node = this.path.node;\n    if (node._hoisted) return;\n    node._hoisted = true;\n\n    this.path.traverse(referenceVisitor, this);\n\n    this.getCompatibleScopes();\n\n    var attachTo = this.getAttachmentPath();\n    if (!attachTo) return;\n\n    // don't bother hoisting to the same function as this will cause multiple branches to be evaluated more than once leading to a bad optimisation\n    if (attachTo.getFunctionParent() === this.path.getFunctionParent()) return;\n\n    var uid = attachTo.scope.generateUidIdentifier(\"ref\");\n\n    attachTo.insertBefore([t.variableDeclaration(\"var\", [t.variableDeclarator(uid, this.path.node)])]);\n\n    var parent = this.path.parentPath;\n\n    if (parent.isJSXElement() && this.path.container === parent.node.children) {\n      // turning the `span` in `<div><span /></div>` to an expression so we need to wrap it with\n      // an expression container\n      uid = t.JSXExpressionContainer(uid);\n    }\n\n    this.path.replaceWith(uid);\n  };\n\n  return PathHoister;\n})();\n\nexports[\"default\"] = PathHoister;\nmodule.exports = exports[\"default\"];"]}