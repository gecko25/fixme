{"version":3,"sources":["comments.js"],"names":[],"mappings":";;;;;;AAMA;;AAEA,QAAQ,UAAR,GAAqB,IAArB;AACA,QAAQ,yBAAR,GAAoC,yBAApC;AACA,QAAQ,UAAR,GAAqB,UAArB;AACA,QAAQ,WAAR,GAAsB,WAAtB;;AAEA,SAAS,yBAAT,GAAqC;AACnC,MAAI,OAAO,KAAK,IAAL,CADwB;AAEnC,MAAI,CAAC,IAAD,EAAO,OAAX;;AAEA,MAAI,WAAW,KAAK,gBAAL,CAJoB;AAKnC,MAAI,UAAU,KAAK,eAAL,CALqB;AAMnC,MAAI,CAAC,QAAD,IAAa,CAAC,OAAD,EAAU,OAA3B;;AAEA,MAAI,OAAO,KAAK,UAAL,CAAgB,KAAK,GAAL,GAAW,CAAX,CAAvB,CAR+B;AASnC,MAAI,OAAO,KAAK,UAAL,CAAgB,KAAK,GAAL,GAAW,CAAX,CAAvB,CAT+B;;AAWnC,MAAI,CAAC,KAAK,IAAL,EAAW,OAAO,IAAP,CAAhB;AACA,MAAI,CAAC,KAAK,IAAL,EAAW,OAAO,IAAP,CAAhB;;AAEA,OAAK,WAAL,CAAiB,UAAjB,EAA6B,OAA7B,EAdmC;AAenC,OAAK,WAAL,CAAiB,SAAjB,EAA4B,QAA5B,EAfmC;CAArC;;AAkBA,SAAS,UAAT,CAAoB,IAApB,EAA0B,OAA1B,EAAmC,IAAnC,EAAyC;AACvC,OAAK,WAAL,CAAiB,IAAjB,EAAuB,CAAC;AACtB,UAAM,OAAO,aAAP,GAAuB,cAAvB;AACN,WAAO,OAAP;GAFqB,CAAvB,EADuC;CAAzC;;;;;;AAWA,SAAS,WAAT,CAAqB,IAArB,EAA2B,QAA3B,EAAqC;AACnC,MAAI,CAAC,QAAD,EAAW,OAAf;;AAEA,MAAI,OAAO,KAAK,IAAL,CAHwB;AAInC,MAAI,CAAC,IAAD,EAAO,OAAX;;AAEA,MAAI,MAAM,OAAO,UAAP,CANyB;;AAQnC,MAAI,KAAK,GAAL,CAAJ,EAAe;AACb,SAAK,GAAL,IAAY,KAAK,GAAL,EAAU,MAAV,CAAiB,QAAjB,CAAZ,CADa;GAAf,MAEO;AACL,SAAK,GAAL,IAAY,QAAZ,CADK;GAFP;CARF","file":"comments-compiled.js","sourcesContent":["// This file contains methods responsible for dealing with comments.\n\n/**\n * Share comments amongst siblings.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\nexports.shareCommentsWithSiblings = shareCommentsWithSiblings;\nexports.addComment = addComment;\nexports.addComments = addComments;\n\nfunction shareCommentsWithSiblings() {\n  var node = this.node;\n  if (!node) return;\n\n  var trailing = node.trailingComments;\n  var leading = node.leadingComments;\n  if (!trailing && !leading) return;\n\n  var prev = this.getSibling(this.key - 1);\n  var next = this.getSibling(this.key + 1);\n\n  if (!prev.node) prev = next;\n  if (!next.node) next = prev;\n\n  prev.addComments(\"trailing\", leading);\n  next.addComments(\"leading\", trailing);\n}\n\nfunction addComment(type, content, line) {\n  this.addComments(type, [{\n    type: line ? \"CommentLine\" : \"CommentBlock\",\n    value: content\n  }]);\n}\n\n/**\n * Give node `comments` of the specified `type`.\n */\n\nfunction addComments(type, comments) {\n  if (!comments) return;\n\n  var node = this.node;\n  if (!node) return;\n\n  var key = type + \"Comments\";\n\n  if (node[key]) {\n    node[key] = node[key].concat(comments);\n  } else {\n    node[key] = comments;\n  }\n}"]}