{"version":3,"sources":["inferers.js"],"names":[],"mappings":"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","file":"inferers-compiled.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"babel-runtime/helpers/interop-require-wildcard\")[\"default\"];\n\nvar _interopRequire = require(\"babel-runtime/helpers/interop-require\")[\"default\"];\n\nexports.__esModule = true;\nexports.VariableDeclarator = VariableDeclarator;\nexports.TypeCastExpression = TypeCastExpression;\nexports.NewExpression = NewExpression;\nexports.TemplateLiteral = TemplateLiteral;\nexports.UnaryExpression = UnaryExpression;\nexports.BinaryExpression = BinaryExpression;\nexports.LogicalExpression = LogicalExpression;\nexports.ConditionalExpression = ConditionalExpression;\nexports.SequenceExpression = SequenceExpression;\nexports.AssignmentExpression = AssignmentExpression;\nexports.UpdateExpression = UpdateExpression;\nexports.StringLiteral = StringLiteral;\nexports.NumericLiteral = NumericLiteral;\nexports.BooleanLiteral = BooleanLiteral;\nexports.NullLiteral = NullLiteral;\nexports.RegExpLiteral = RegExpLiteral;\nexports.ObjectExpression = ObjectExpression;\nexports.ArrayExpression = ArrayExpression;\nexports.RestElement = RestElement;\nexports.CallExpression = CallExpression;\nexports.TaggedTemplateExpression = TaggedTemplateExpression;\n\nvar _babelTypes = require(\"babel-types\");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nvar _infererReference = require(\"./inferer-reference\");\n\nexports.Identifier = _interopRequire(_infererReference);\n\nfunction VariableDeclarator() {\n  var id = this.get(\"id\");\n\n  if (id.isIdentifier()) {\n    return this.get(\"init\").getTypeAnnotation();\n  } else {\n    return;\n  }\n}\n\nfunction TypeCastExpression(node) {\n  return node.typeAnnotation;\n}\n\nTypeCastExpression.validParent = true;\n\nfunction NewExpression(node) {\n  if (this.get(\"callee\").isIdentifier()) {\n    // only resolve identifier callee\n    return t.genericTypeAnnotation(node.callee);\n  }\n}\n\nfunction TemplateLiteral() {\n  return t.stringTypeAnnotation();\n}\n\nfunction UnaryExpression(node) {\n  var operator = node.operator;\n\n  if (operator === \"void\") {\n    return t.voidTypeAnnotation();\n  } else if (t.NUMBER_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.numberTypeAnnotation();\n  } else if (t.STRING_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.stringTypeAnnotation();\n  } else if (t.BOOLEAN_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.booleanTypeAnnotation();\n  }\n}\n\nfunction BinaryExpression(node) {\n  var operator = node.operator;\n\n  if (t.NUMBER_BINARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.numberTypeAnnotation();\n  } else if (t.BOOLEAN_BINARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.booleanTypeAnnotation();\n  } else if (operator === \"+\") {\n    var right = this.get(\"right\");\n    var left = this.get(\"left\");\n\n    if (left.isBaseType(\"number\") && right.isBaseType(\"number\")) {\n      // both numbers so this will be a number\n      return t.numberTypeAnnotation();\n    } else if (left.isBaseType(\"string\") || right.isBaseType(\"string\")) {\n      // one is a string so the result will be a string\n      return t.stringTypeAnnotation();\n    }\n\n    // unsure if left and right are strings or numbers so stay on the safe side\n    return t.unionTypeAnnotation([t.stringTypeAnnotation(), t.numberTypeAnnotation()]);\n  }\n}\n\nfunction LogicalExpression() {\n  return t.createUnionTypeAnnotation([this.get(\"left\").getTypeAnnotation(), this.get(\"right\").getTypeAnnotation()]);\n}\n\nfunction ConditionalExpression() {\n  return t.createUnionTypeAnnotation([this.get(\"consequent\").getTypeAnnotation(), this.get(\"alternate\").getTypeAnnotation()]);\n}\n\nfunction SequenceExpression() {\n  return this.get(\"expressions\").pop().getTypeAnnotation();\n}\n\nfunction AssignmentExpression() {\n  return this.get(\"right\").getTypeAnnotation();\n}\n\nfunction UpdateExpression(node) {\n  var operator = node.operator;\n  if (operator === \"++\" || operator === \"--\") {\n    return t.numberTypeAnnotation();\n  }\n}\n\nfunction StringLiteral() {\n  return t.stringTypeAnnotation();\n}\n\nfunction NumericLiteral() {\n  return t.numberTypeAnnotation();\n}\n\nfunction BooleanLiteral() {\n  return t.booleanTypeAnnotation();\n}\n\nfunction NullLiteral() {\n  return t.nullLiteralTypeAnnotation();\n}\n\nfunction RegExpLiteral() {\n  return t.genericTypeAnnotation(t.identifier(\"RegExp\"));\n}\n\nfunction ObjectExpression() {\n  return t.genericTypeAnnotation(t.identifier(\"Object\"));\n}\n\nfunction ArrayExpression() {\n  return t.genericTypeAnnotation(t.identifier(\"Array\"));\n}\n\nfunction RestElement() {\n  return ArrayExpression();\n}\n\nRestElement.validParent = true;\n\nfunction Func() {\n  return t.genericTypeAnnotation(t.identifier(\"Function\"));\n}\n\nexports.Function = Func;\nexports.Class = Func;\n\nfunction CallExpression() {\n  return resolveCall(this.get(\"callee\"));\n}\n\nfunction TaggedTemplateExpression() {\n  return resolveCall(this.get(\"tag\"));\n}\n\nfunction resolveCall(callee) {\n  callee = callee.resolve();\n\n  if (callee.isFunction()) {\n    if (callee.is(\"async\")) {\n      if (callee.is(\"generator\")) {\n        return t.genericTypeAnnotation(t.identifier(\"AsyncIterator\"));\n      } else {\n        return t.genericTypeAnnotation(t.identifier(\"Promise\"));\n      }\n    } else {\n      if (callee.node.returnType) {\n        return callee.node.returnType;\n      } else {\n        // todo: get union type of all return arguments\n      }\n    }\n  }\n}"]}