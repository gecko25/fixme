{"version":3,"sources":["removal.js"],"names":[],"mappings":";;AAEA;;AAEA,QAAQ,UAAR,GAAqB,IAArB;AACA,QAAQ,MAAR,GAAiB,MAAjB;AACA,QAAQ,iBAAR,GAA4B,iBAA5B;AACA,QAAQ,OAAR,GAAkB,OAAlB;AACA,QAAQ,YAAR,GAAuB,YAAvB;AACA,QAAQ,gBAAR,GAA2B,gBAA3B;;AAEA,IAAI,mBAAmB,QAAQ,qBAAR,CAAnB;;AAEJ,SAAS,MAAT,GAAkB;AAChB,OAAK,gBAAL,GADgB;;AAGhB,OAAK,MAAL,GAHgB;;AAKhB,MAAI,KAAK,iBAAL,EAAJ,EAA8B;AAC5B,SAAK,YAAL,GAD4B;AAE5B,WAF4B;GAA9B;;AAKA,OAAK,yBAAL,GAVgB;AAWhB,OAAK,OAAL,GAXgB;AAYhB,OAAK,YAAL,GAZgB;CAAlB;;AAeA,SAAS,iBAAT,GAA6B;AAC3B,MAAI,OAAO,iBAAiB,KAAjB,CADgB;;AAG3B,OAAK,IAAI,KAAK,CAAL,EAAQ,KAAK,KAAK,MAAL,EAAa,IAAnC,EAAyC;AACvC,QAAI,KAAK,KAAK,EAAL,CAAL,CADmC;AAEvC,QAAI,GAAG,IAAH,EAAS,KAAK,UAAL,CAAb,EAA+B,OAAO,IAAP,CAA/B;GAFF;CAHF;;AASA,SAAS,OAAT,GAAmB;AACjB,MAAI,MAAM,OAAN,CAAc,KAAK,SAAL,CAAlB,EAAmC;AACjC,SAAK,SAAL,CAAe,MAAf,CAAsB,KAAK,GAAL,EAAU,CAAhC,EADiC;AAEjC,SAAK,iBAAL,CAAuB,KAAK,GAAL,EAAU,CAAC,CAAD,CAAjC,CAFiC;GAAnC,MAGO;AACL,SAAK,YAAL,CAAkB,IAAlB,EADK;GAHP;CADF;;AASA,SAAS,YAAT,GAAwB;AACtB,OAAK,UAAL,GAAkB,IAAlB,CADsB;AAEtB,OAAK,OAAL,GAAe,IAAf,CAFsB;AAGtB,OAAK,IAAL,GAAY,IAAZ,CAHsB;CAAxB;;AAMA,SAAS,gBAAT,GAA4B;AAC1B,MAAI,KAAK,OAAL,EAAc;AAChB,UAAM,KAAK,mBAAL,CAAyB,4CAAzB,CAAN,CADgB;GAAlB;CADF","file":"removal-compiled.js","sourcesContent":["// This file contains methods responsible for removing a node.\n\n\"use strict\";\n\nexports.__esModule = true;\nexports.remove = remove;\nexports._callRemovalHooks = _callRemovalHooks;\nexports._remove = _remove;\nexports._markRemoved = _markRemoved;\nexports._assertUnremoved = _assertUnremoved;\n\nvar _libRemovalHooks = require(\"./lib/removal-hooks\");\n\nfunction remove() {\n  this._assertUnremoved();\n\n  this.resync();\n\n  if (this._callRemovalHooks()) {\n    this._markRemoved();\n    return;\n  }\n\n  this.shareCommentsWithSiblings();\n  this._remove();\n  this._markRemoved();\n}\n\nfunction _callRemovalHooks() {\n  var _arr = _libRemovalHooks.hooks;\n\n  for (var _i = 0; _i < _arr.length; _i++) {\n    var fn = _arr[_i];\n    if (fn(this, this.parentPath)) return true;\n  }\n}\n\nfunction _remove() {\n  if (Array.isArray(this.container)) {\n    this.container.splice(this.key, 1);\n    this.updateSiblingKeys(this.key, -1);\n  } else {\n    this._replaceWith(null);\n  }\n}\n\nfunction _markRemoved() {\n  this.shouldSkip = true;\n  this.removed = true;\n  this.node = null;\n}\n\nfunction _assertUnremoved() {\n  if (this.removed) {\n    throw this.buildCodeFrameError(\"NodePath has been removed so is read-only.\");\n  }\n}"]}