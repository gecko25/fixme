{"version":3,"sources":["flow.js"],"names":[],"mappings":"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","file":"flow-compiled.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"babel-runtime/helpers/interop-require-wildcard\")[\"default\"];\n\nexports.__esModule = true;\nexports.createUnionTypeAnnotation = createUnionTypeAnnotation;\nexports.removeTypeDuplicates = removeTypeDuplicates;\nexports.createTypeAnnotationBasedOnTypeof = createTypeAnnotationBasedOnTypeof;\n\nvar _index = require(\"./index\");\n\nvar t = _interopRequireWildcard(_index);\n\n/**\n * Takes an array of `types` and flattens them, removing duplicates and\n * returns a `UnionTypeAnnotation` node containg them.\n */\n\nfunction createUnionTypeAnnotation(types) {\n  var flattened = removeTypeDuplicates(types);\n\n  if (flattened.length === 1) {\n    return flattened[0];\n  } else {\n    return t.unionTypeAnnotation(flattened);\n  }\n}\n\n/**\n * Dedupe type annotations.\n */\n\nfunction removeTypeDuplicates(nodes) {\n  var generics = {};\n  var bases = {};\n\n  // store union type groups to circular references\n  var typeGroups = [];\n\n  var types = [];\n\n  for (var i = 0; i < nodes.length; i++) {\n    var node = nodes[i];\n    if (!node) continue;\n\n    // detect duplicates\n    if (types.indexOf(node) >= 0) {\n      continue;\n    }\n\n    // this type matches anything\n    if (t.isAnyTypeAnnotation(node)) {\n      return [node];\n    }\n\n    //\n    if (t.isFlowBaseAnnotation(node)) {\n      bases[node.type] = node;\n      continue;\n    }\n\n    //\n    if (t.isUnionTypeAnnotation(node)) {\n      if (typeGroups.indexOf(node.types) < 0) {\n        nodes = nodes.concat(node.types);\n        typeGroups.push(node.types);\n      }\n      continue;\n    }\n\n    // find a matching generic type and merge and deduplicate the type parameters\n    if (t.isGenericTypeAnnotation(node)) {\n      var _name = node.id.name;\n\n      if (generics[_name]) {\n        var existing = generics[_name];\n        if (existing.typeParameters) {\n          if (node.typeParameters) {\n            existing.typeParameters.params = removeTypeDuplicates(existing.typeParameters.params.concat(node.typeParameters.params));\n          }\n        } else {\n          existing = node.typeParameters;\n        }\n      } else {\n        generics[_name] = node;\n      }\n\n      continue;\n    }\n\n    types.push(node);\n  }\n\n  // add back in bases\n  for (var type in bases) {\n    types.push(bases[type]);\n  }\n\n  // add back in generics\n  for (var _name2 in generics) {\n    types.push(generics[_name2]);\n  }\n\n  return types;\n}\n\n/**\n * Create a type anotation based on typeof expression.\n */\n\nfunction createTypeAnnotationBasedOnTypeof(type) {\n  if (type === \"string\") {\n    return t.stringTypeAnnotation();\n  } else if (type === \"number\") {\n    return t.numberTypeAnnotation();\n  } else if (type === \"undefined\") {\n    return t.voidTypeAnnotation();\n  } else if (type === \"boolean\") {\n    return t.booleanTypeAnnotation();\n  } else if (type === \"function\") {\n    return t.genericTypeAnnotation(t.identifier(\"Function\"));\n  } else if (type === \"object\") {\n    return t.genericTypeAnnotation(t.identifier(\"Object\"));\n  } else if (type === \"symbol\") {\n    return t.genericTypeAnnotation(t.identifier(\"Symbol\"));\n  } else {\n    throw new Error(\"Invalid typeof value\");\n  }\n}"]}