{"version":3,"sources":["jsx.js"],"names":[],"mappings":"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","file":"jsx-compiled.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"babel-runtime/helpers/interop-require-default\")[\"default\"];\n\nvar _index = require(\"./index\");\n\nvar _index2 = _interopRequireDefault(_index);\n\n_index2[\"default\"](\"JSXAttribute\", {\n  visitor: [\"name\", \"value\"],\n  aliases: [\"JSX\", \"Immutable\"],\n  fields: {\n    name: {\n      validate: _index.assertNodeType(\"JSXIdentifier\", \"JSXNamespacedName\")\n    },\n    value: {\n      optional: true,\n      validate: _index.assertNodeType(\"JSXElement\", \"StringLiteral\", \"JSXExpressionContainer\")\n    }\n  }\n});\n\n_index2[\"default\"](\"JSXClosingElement\", {\n  visitor: [\"name\"],\n  aliases: [\"JSX\", \"Immutable\"],\n  fields: {\n    name: {\n      validate: _index.assertNodeType(\"JSXIdentifier\", \"JSXMemberExpression\")\n    }\n  }\n});\n\n_index2[\"default\"](\"JSXElement\", {\n  builder: [\"openingElement\", \"closingElement\", \"children\", \"selfClosing\"],\n  visitor: [\"openingElement\", \"children\", \"closingElement\"],\n  aliases: [\"JSX\", \"Immutable\", \"Expression\"],\n  fields: {\n    openingElement: {\n      validate: _index.assertNodeType(\"JSXOpeningElement\")\n    },\n    closingElement: {\n      optional: true,\n      validate: _index.assertNodeType(\"JSXClosingElement\")\n    },\n    children: {\n      validate: _index.chain(_index.assertValueType(\"array\"), _index.assertEach(_index.assertNodeType(\"JSXText\", \"JSXExpressionContainer\", \"JSXElement\")))\n    }\n  }\n});\n\n_index2[\"default\"](\"JSXEmptyExpression\", {\n  aliases: [\"JSX\", \"Expression\"]\n});\n\n_index2[\"default\"](\"JSXExpressionContainer\", {\n  visitor: [\"expression\"],\n  aliases: [\"JSX\", \"Immutable\"],\n  fields: {\n    expression: {\n      validate: _index.assertNodeType(\"Expression\")\n    }\n  }\n});\n\n_index2[\"default\"](\"JSXIdentifier\", {\n  builder: [\"name\"],\n  aliases: [\"JSX\", \"Expression\"],\n  fields: {\n    name: {\n      validate: _index.assertValueType(\"string\")\n    }\n  }\n});\n\n_index2[\"default\"](\"JSXMemberExpression\", {\n  visitor: [\"object\", \"property\"],\n  aliases: [\"JSX\", \"Expression\"],\n  fields: {\n    object: {\n      validate: _index.assertNodeType(\"JSXMemberExpression\", \"JSXIdentifier\")\n    },\n    property: {\n      validate: _index.assertNodeType(\"JSXIdentifier\")\n    }\n  }\n});\n\n_index2[\"default\"](\"JSXNamespacedName\", {\n  visitor: [\"namespace\", \"name\"],\n  aliases: [\"JSX\"],\n  fields: {\n    namespace: {\n      validate: _index.assertNodeType(\"JSXIdentifier\")\n    },\n    name: {\n      validate: _index.assertNodeType(\"JSXIdentifier\")\n    }\n  }\n});\n\n_index2[\"default\"](\"JSXOpeningElement\", {\n  builder: [\"name\", \"attributes\", \"selfClosing\"],\n  visitor: [\"name\", \"attributes\"],\n  aliases: [\"JSX\", \"Immutable\"],\n  fields: {\n    name: {\n      validate: _index.assertNodeType(\"JSXIdentifier\", \"JSXMemberExpression\")\n    },\n    selfClosing: {\n      \"default\": false,\n      validate: _index.assertValueType(\"boolean\")\n    },\n    attributes: {\n      validate: _index.chain(_index.assertValueType(\"array\"), _index.assertEach(_index.assertNodeType(\"JSXAttribute\", \"JSXSpreadAttribute\")))\n    }\n  }\n});\n\n_index2[\"default\"](\"JSXSpreadAttribute\", {\n  visitor: [\"argument\"],\n  aliases: [\"JSX\"],\n  fields: {\n    argument: {\n      validate: _index.assertNodeType(\"Expression\")\n    }\n  }\n});\n\n_index2[\"default\"](\"JSXText\", {\n  aliases: [\"JSX\"],\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: _index.assertValueType(\"string\")\n    }\n  }\n});"]}