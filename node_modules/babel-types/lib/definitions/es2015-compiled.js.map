{"version":3,"sources":["es2015.js"],"names":[],"mappings":"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","file":"es2015-compiled.js","sourcesContent":["/* eslint max-len: 0 */\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"babel-runtime/helpers/interop-require-default\")[\"default\"];\n\nvar _index = require(\"./index\");\n\nvar _index2 = _interopRequireDefault(_index);\n\n_index2[\"default\"](\"AssignmentPattern\", {\n  visitor: [\"left\", \"right\"],\n  aliases: [\"Pattern\", \"LVal\"],\n  fields: {\n    left: {\n      validate: _index.assertNodeType(\"Identifier\")\n    },\n    right: {\n      validate: _index.assertNodeType(\"Expression\")\n    }\n  }\n});\n\n_index2[\"default\"](\"ArrayPattern\", {\n  visitor: [\"elements\", \"typeAnnotation\"],\n  aliases: [\"Pattern\", \"LVal\"],\n  fields: {\n    elements: {\n      validate: _index.chain(_index.assertValueType(\"array\"), _index.assertEach(_index.assertNodeType(\"Expression\")))\n    }\n  }\n});\n\n_index2[\"default\"](\"ArrowFunctionExpression\", {\n  builder: [\"params\", \"body\", \"async\"],\n  visitor: [\"params\", \"body\", \"returnType\"],\n  aliases: [\"Scopable\", \"Function\", \"BlockParent\", \"FunctionParent\", \"Expression\", \"Pureish\"],\n  fields: {\n    params: {\n      validate: _index.chain(_index.assertValueType(\"array\"), _index.assertEach(_index.assertNodeType(\"LVal\")))\n    },\n    body: {\n      validate: _index.assertNodeType(\"BlockStatement\", \"Expression\")\n    },\n    async: {\n      validate: _index.assertValueType(\"boolean\"),\n      \"default\": false\n    }\n  }\n});\n\n_index2[\"default\"](\"ClassBody\", {\n  visitor: [\"body\"],\n  fields: {\n    body: {\n      validate: _index.chain(_index.assertValueType(\"array\"), _index.assertEach(_index.assertNodeType(\"ClassMethod\", \"ClassProperty\")))\n    }\n  }\n});\n\n_index2[\"default\"](\"ClassDeclaration\", {\n  builder: [\"id\", \"superClass\", \"body\", \"decorators\"],\n  visitor: [\"id\", \"body\", \"superClass\", \"mixins\", \"typeParameters\", \"superTypeParameters\", \"implements\", \"decorators\"],\n  aliases: [\"Scopable\", \"Class\", \"Statement\", \"Declaration\", \"Pureish\"],\n  fields: {\n    id: {\n      validate: _index.assertNodeType(\"Identifier\")\n    },\n    body: {\n      validate: _index.assertNodeType(\"ClassBody\")\n    },\n    superClass: {\n      optional: true,\n      validate: _index.assertNodeType(\"Expression\")\n    },\n    decorators: {\n      validate: _index.chain(_index.assertValueType(\"array\"), _index.assertEach(_index.assertNodeType(\"Decorator\")))\n    }\n  }\n});\n\n_index2[\"default\"](\"ClassExpression\", {\n  inherits: \"ClassDeclaration\",\n  aliases: [\"Scopable\", \"Class\", \"Expression\", \"Pureish\"],\n  fields: {\n    id: {\n      optional: true,\n      validate: _index.assertNodeType(\"Identifier\")\n    },\n    body: {\n      validate: _index.assertNodeType(\"ClassBody\")\n    },\n    superClass: {\n      optional: true,\n      validate: _index.assertNodeType(\"Expression\")\n    },\n    decorators: {\n      validate: _index.chain(_index.assertValueType(\"array\"), _index.assertEach(_index.assertNodeType(\"Decorator\")))\n    }\n  }\n});\n\n_index2[\"default\"](\"ExportAllDeclaration\", {\n  visitor: [\"source\"],\n  aliases: [\"Statement\", \"Declaration\", \"ModuleDeclaration\", \"ExportDeclaration\"],\n  fields: {\n    source: {\n      validate: _index.assertNodeType(\"StringLiteral\")\n    }\n  }\n});\n\n_index2[\"default\"](\"ExportDefaultDeclaration\", {\n  visitor: [\"declaration\"],\n  aliases: [\"Statement\", \"Declaration\", \"ModuleDeclaration\", \"ExportDeclaration\"],\n  fields: {\n    declaration: {\n      validate: _index.assertNodeType(\"FunctionDeclaration\", \"ClassDeclaration\", \"Expression\")\n    }\n  }\n});\n\n_index2[\"default\"](\"ExportNamedDeclaration\", {\n  visitor: [\"declaration\", \"specifiers\", \"source\"],\n  aliases: [\"Statement\", \"Declaration\", \"ModuleDeclaration\", \"ExportDeclaration\"],\n  fields: {\n    declaration: {\n      validate: _index.assertNodeType(\"Declaration\"),\n      optional: true\n    },\n    specifiers: {\n      validate: _index.chain(_index.assertValueType(\"array\"), _index.assertEach(_index.assertNodeType(\"ExportSpecifier\")))\n    },\n    source: {\n      validate: _index.assertNodeType(\"StringLiteral\"),\n      optional: true\n    }\n  }\n});\n\n_index2[\"default\"](\"ExportSpecifier\", {\n  visitor: [\"local\", \"exported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    local: {\n      validate: _index.assertNodeType(\"Identifier\")\n    },\n    exported: {\n      validate: _index.assertNodeType(\"Identifier\")\n    }\n  }\n});\n\n_index2[\"default\"](\"ForOfStatement\", {\n  visitor: [\"left\", \"right\", \"body\"],\n  aliases: [\"Scopable\", \"Statement\", \"For\", \"BlockParent\", \"Loop\", \"ForXStatement\"],\n  fields: {\n    left: {\n      validate: _index.assertNodeType(\"VariableDeclaration\", \"LVal\")\n    },\n    right: {\n      validate: _index.assertNodeType(\"Expression\")\n    },\n    body: {\n      validate: _index.assertNodeType(\"Statement\")\n    }\n  }\n});\n\n_index2[\"default\"](\"ImportDeclaration\", {\n  visitor: [\"specifiers\", \"source\"],\n  aliases: [\"Statement\", \"Declaration\", \"ModuleDeclaration\"],\n  fields: {\n    specifiers: {\n      validate: _index.chain(_index.assertValueType(\"array\"), _index.assertEach(_index.assertNodeType(\"ImportSpecifier\", \"ImportDefaultSpecifier\", \"ImportNamespaceSpecifier\")))\n    },\n    source: {\n      validate: _index.assertNodeType(\"StringLiteral\")\n    }\n  }\n});\n\n_index2[\"default\"](\"ImportDefaultSpecifier\", {\n  visitor: [\"local\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    local: {\n      validate: _index.assertNodeType(\"Identifier\")\n    }\n  }\n});\n\n_index2[\"default\"](\"ImportNamespaceSpecifier\", {\n  visitor: [\"local\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    local: {\n      validate: _index.assertNodeType(\"Identifier\")\n    }\n  }\n});\n\n_index2[\"default\"](\"ImportSpecifier\", {\n  visitor: [\"local\", \"imported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    local: {\n      validate: _index.assertNodeType(\"Identifier\")\n    },\n    imported: {\n      validate: _index.assertNodeType(\"Identifier\")\n    }\n  }\n});\n\n_index2[\"default\"](\"MetaProperty\", {\n  visitor: [\"meta\", \"property\"],\n  aliases: [\"Expression\"],\n  fields: {\n    // todo: limit to new.target\n    meta: {\n      validate: _index.assertValueType(\"string\")\n    },\n    property: {\n      validate: _index.assertValueType(\"string\")\n    }\n  }\n});\n\n_index2[\"default\"](\"ClassMethod\", {\n  aliases: [\"Function\", \"Scopable\", \"BlockParent\", \"FunctionParent\", \"Method\"],\n  builder: [\"kind\", \"key\", \"params\", \"body\", \"computed\", \"static\"],\n  visitor: [\"key\", \"params\", \"body\", \"decorators\", \"returnType\", \"typeParameters\"],\n  fields: {\n    kind: {\n      validate: _index.chain(_index.assertValueType(\"string\"), _index.assertOneOf(\"get\", \"set\", \"method\", \"constructor\")),\n      \"default\": \"method\"\n    },\n    computed: {\n      \"default\": false,\n      validate: _index.assertValueType(\"boolean\")\n    },\n    \"static\": {\n      \"default\": false,\n      validate: _index.assertValueType(\"boolean\")\n    },\n    key: {\n      validate: function validate(node, key, val) {\n        var expectedTypes = node.computed ? [\"Expression\"] : [\"Identifier\", \"StringLiteral\", \"NumericLiteral\"];\n        _index.assertNodeType.apply(undefined, expectedTypes)(node, key, val);\n      }\n    },\n    params: {\n      validate: _index.chain(_index.assertValueType(\"array\"), _index.assertEach(_index.assertNodeType(\"LVal\")))\n    },\n    body: {\n      validate: _index.assertNodeType(\"BlockStatement\")\n    },\n    generator: {\n      \"default\": false,\n      validate: _index.assertValueType(\"boolean\")\n    },\n    async: {\n      \"default\": false,\n      validate: _index.assertValueType(\"boolean\")\n    }\n  }\n});\n\n_index2[\"default\"](\"ObjectPattern\", {\n  visitor: [\"properties\", \"typeAnnotation\"],\n  aliases: [\"Pattern\", \"LVal\"],\n  fields: {\n    properties: {\n      validate: _index.chain(_index.assertValueType(\"array\"), _index.assertEach(_index.assertNodeType(\"RestProperty\", \"Property\")))\n    }\n  }\n});\n\n_index2[\"default\"](\"SpreadElement\", {\n  visitor: [\"argument\"],\n  aliases: [\"UnaryLike\"],\n  fields: {\n    argument: {\n      validate: _index.assertNodeType(\"Expression\")\n    }\n  }\n});\n\n_index2[\"default\"](\"Super\", {\n  aliases: [\"Expression\"]\n});\n\n_index2[\"default\"](\"TaggedTemplateExpression\", {\n  visitor: [\"tag\", \"quasi\"],\n  aliases: [\"Expression\"],\n  fields: {\n    tag: {\n      validate: _index.assertNodeType(\"Expression\")\n    },\n    quasi: {\n      validate: _index.assertNodeType(\"TemplateLiteral\")\n    }\n  }\n});\n\n_index2[\"default\"](\"TemplateElement\", {\n  builder: [\"value\", \"tail\"],\n  fields: {\n    value: {\n      // todo: flatten `raw` into main node\n    },\n    tail: {\n      validate: _index.assertValueType(\"boolean\"),\n      \"default\": false\n    }\n  }\n});\n\n_index2[\"default\"](\"TemplateLiteral\", {\n  visitor: [\"quasis\", \"expressions\"],\n  aliases: [\"Expression\", \"Literal\"],\n  fields: {\n    quasis: {\n      validate: _index.chain(_index.assertValueType(\"array\"), _index.assertEach(_index.assertNodeType(\"TemplateElement\")))\n    },\n    expressions: {\n      validate: _index.chain(_index.assertValueType(\"array\"), _index.assertEach(_index.assertNodeType(\"Expression\")))\n    }\n  }\n});\n\n_index2[\"default\"](\"YieldExpression\", {\n  builder: [\"argument\", \"delegate\"],\n  visitor: [\"argument\"],\n  aliases: [\"Expression\", \"Terminatorless\"],\n  fields: {\n    delegate: {\n      validate: _index.assertValueType(\"boolean\"),\n      \"default\": false\n    },\n    argument: {\n      optional: true,\n      validate: _index.assertNodeType(\"Expression\")\n    }\n  }\n});"]}