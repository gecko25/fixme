{"version":3,"sources":["test-source-map-consumer.js"],"names":[],"mappings":";;;;;;;;AAMA,IAAI,OAAO,MAAP,KAAkB,UAAlB,EAA8B;AAC9B,MAAI,SAAS,QAAQ,UAAR,EAAoB,MAApB,EAA4B,OAA5B,CAAT,CAD0B;CAAlC;AAGA,OAAO,UAAU,OAAV,EAAmB,OAAnB,EAA4B,MAA5B,EAAoC;;AAEzC,MAAI,oBAAoB,QAAQ,0CAAR,EAAoD,iBAApD,CAFiB;AAGzC,MAAI,qBAAqB,QAAQ,2CAAR,EAAqD,kBAArD,CAHgB;;AAKzC,UAAQ,0DAAR,IAAsE,UAAU,MAAV,EAAkB,IAAlB,EAAwB;AAC5F,WAAO,YAAP,CAAoB,YAAY;AAC9B,UAAI,MAAM,IAAI,iBAAJ,CAAsB,KAAK,OAAL,CAA5B,CAD0B;KAAZ,CAApB,CAD4F;AAI5F,WAAO,YAAP,CAAoB,YAAY;AAC9B,UAAI,MAAM,IAAI,iBAAJ,CAAsB,KAAK,SAAL,CAAe,KAAK,OAAL,CAArC,CAAN,CAD0B;KAAZ,CAApB,CAJ4F;GAAxB,CAL7B;;AAczC,UAAQ,wDAAR,IAAoE,UAAU,MAAV,EAAkB,IAAlB,EAAwB;AAC1F,QAAI,MAAM,IAAI,iBAAJ,CAAsB,KAAK,OAAL,CAA5B,CADsF;AAE1F,QAAI,UAAU,IAAI,OAAJ,CAF4E;;AAI1F,WAAO,KAAP,CAAa,QAAQ,CAAR,CAAb,EAAyB,kBAAzB,EAJ0F;AAK1F,WAAO,KAAP,CAAa,QAAQ,CAAR,CAAb,EAAyB,kBAAzB,EAL0F;AAM1F,WAAO,KAAP,CAAa,QAAQ,MAAR,EAAgB,CAA7B,EAN0F;GAAxB,CAd3B;;AAuBzC,UAAQ,qEAAR,IAAiF,UAAU,MAAV,EAAkB,IAAlB,EAAwB;AACvG,QAAI,MAAM,IAAI,iBAAJ,CAAsB,KAAK,OAAL,CAA5B,CADmG;AAEvG,QAAI,OAAJ,CAFuG;;AAIvG,cAAU,IAAI,mBAAJ,CAAwB;AAChC,YAAM,CAAN;AACA,cAAQ,CAAR;KAFQ,CAAV,CAJuG;AAQvG,WAAO,KAAP,CAAa,QAAQ,MAAR,EAAgB,kBAA7B,EARuG;;AAUvG,cAAU,IAAI,mBAAJ,CAAwB;AAChC,YAAM,CAAN;AACA,cAAQ,CAAR;KAFQ,CAAV,CAVuG;AAcvG,WAAO,KAAP,CAAa,QAAQ,MAAR,EAAgB,kBAA7B,EAduG;GAAxB,CAvBxC;;AAwCzC,UAAQ,kCAAR,IAA8C,UAAU,MAAV,EAAkB,IAAlB,EAAwB;AACpE,QAAI,MAAM,IAAI,iBAAJ,CAAsB,KAAK,OAAL,CAA5B,CADgE;;AAGpE,SAAK,aAAL,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,kBAAzB,EAA6C,CAA7C,EAAgD,CAAhD,EAAmD,IAAnD,EAAyD,GAAzD,EAA8D,MAA9D,EAHoE;AAIpE,SAAK,aAAL,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,kBAAzB,EAA6C,CAA7C,EAAgD,CAAhD,EAAmD,IAAnD,EAAyD,GAAzD,EAA8D,MAA9D,EAJoE;AAKpE,SAAK,aAAL,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,kBAAzB,EAA6C,CAA7C,EAAgD,EAAhD,EAAoD,IAApD,EAA0D,GAA1D,EAA+D,MAA/D,EALoE;AAMpE,SAAK,aAAL,CAAmB,CAAnB,EAAsB,EAAtB,EAA0B,kBAA1B,EAA8C,CAA9C,EAAiD,EAAjD,EAAqD,KAArD,EAA4D,GAA5D,EAAiE,MAAjE,EANoE;AAOpE,SAAK,aAAL,CAAmB,CAAnB,EAAsB,EAAtB,EAA0B,kBAA1B,EAA8C,CAA9C,EAAiD,CAAjD,EAAoD,IAApD,EAA0D,GAA1D,EAA+D,MAA/D,EAPoE;AAQpE,SAAK,aAAL,CAAmB,CAAnB,EAAsB,EAAtB,EAA0B,kBAA1B,EAA8C,CAA9C,EAAiD,EAAjD,EAAqD,KAArD,EAA4D,GAA5D,EAAiE,MAAjE,EARoE;AASpE,SAAK,aAAL,CAAmB,CAAnB,EAAsB,EAAtB,EAA0B,kBAA1B,EAA8C,CAA9C,EAAiD,EAAjD,EAAqD,KAArD,EAA4D,GAA5D,EAAiE,MAAjE,EAToE;;AAWpE,SAAK,aAAL,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,kBAAzB,EAA6C,CAA7C,EAAgD,CAAhD,EAAmD,IAAnD,EAAyD,GAAzD,EAA8D,MAA9D,EAXoE;AAYpE,SAAK,aAAL,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,kBAAzB,EAA6C,CAA7C,EAAgD,CAAhD,EAAmD,IAAnD,EAAyD,GAAzD,EAA8D,MAA9D,EAZoE;AAapE,SAAK,aAAL,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,kBAAzB,EAA6C,CAA7C,EAAgD,EAAhD,EAAoD,IAApD,EAA0D,GAA1D,EAA+D,MAA/D,EAboE;AAcpE,SAAK,aAAL,CAAmB,CAAnB,EAAsB,EAAtB,EAA0B,kBAA1B,EAA8C,CAA9C,EAAiD,EAAjD,EAAqD,GAArD,EAA0D,GAA1D,EAA+D,MAA/D,EAdoE;AAepE,SAAK,aAAL,CAAmB,CAAnB,EAAsB,EAAtB,EAA0B,kBAA1B,EAA8C,CAA9C,EAAiD,CAAjD,EAAoD,IAApD,EAA0D,GAA1D,EAA+D,MAA/D,EAfoE;AAgBpE,SAAK,aAAL,CAAmB,CAAnB,EAAsB,EAAtB,EAA0B,kBAA1B,EAA8C,CAA9C,EAAiD,EAAjD,EAAqD,GAArD,EAA0D,GAA1D,EAA+D,MAA/D,EAhBoE;GAAxB,CAxCL;;AA2DzC,UAAQ,2BAAR,IAAuC,UAAU,MAAV,EAAkB,IAAlB,EAAwB;AAC7D,QAAI,MAAM,IAAI,iBAAJ,CAAsB,KAAK,OAAL,CAA5B;;;AADyD,QAI7D,CAAK,aAAL,CAAmB,CAAnB,EAAsB,EAAtB,EAA0B,kBAA1B,EAA8C,CAA9C,EAAiD,EAAjD,EAAqD,KAArD,EAA4D,GAA5D,EAAiE,MAAjE,EAAyE,IAAzE,EAJ6D;AAK7D,SAAK,aAAL,CAAmB,CAAnB,EAAsB,EAAtB,EAA0B,kBAA1B,EAA8C,CAA9C,EAAiD,EAAjD,EAAqD,KAArD,EAA4D,GAA5D,EAAiE,MAAjE,EAAyE,IAAzE,EAL6D;AAM7D,SAAK,aAAL,CAAmB,CAAnB,EAAsB,EAAtB,EAA0B,kBAA1B,EAA8C,CAA9C,EAAiD,EAAjD,EAAqD,IAArD,EAA2D,GAA3D,EAAgE,MAAhE,EAAwE,IAAxE;;;AAN6D,QAS7D,CAAK,aAAL,CAAmB,CAAnB,EAAsB,EAAtB,EAA0B,kBAA1B,EAA8C,CAA9C,EAAiD,EAAjD,EAAqD,KAArD,EAA4D,GAA5D,EAAiE,MAAjE,EAAyE,IAAzE,EAA+E,IAA/E,EAT6D;AAU7D,SAAK,aAAL,CAAmB,CAAnB,EAAsB,EAAtB,EAA0B,kBAA1B,EAA8C,CAA9C,EAAiD,EAAjD,EAAqD,KAArD,EAA4D,GAA5D,EAAiE,MAAjE,EAAyE,IAAzE,EAA+E,IAA/E,EAV6D;AAW7D,SAAK,aAAL,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,kBAAzB,EAA6C,CAA7C,EAAgD,EAAhD,EAAoD,IAApD,EAA0D,GAA1D,EAA+D,MAA/D,EAAuE,IAAvE,EAA6E,IAA7E,EAX6D;GAAxB,CA3DE;;AAyEzC,UAAQ,sDAAR,IAAkE,UAAU,MAAV,EAAkB,IAAlB,EAAwB;AACxF,WAAO,YAAP,CAAoB,YAAY;AAC9B,UAAI,MAAM,IAAI,iBAAJ,CAAsB,SAAS,KAAK,SAAL,CAAe,KAAK,OAAL,CAAxB,CAA5B,CAD0B;KAAZ,CAApB,CADwF;GAAxB,CAzEzB;;AA+EzC,UAAQ,kBAAR,IAA8B,UAAU,MAAV,EAAkB,IAAlB,EAAwB;AACpD,QAAI,MAAM,IAAI,iBAAJ,CAAsB,KAAK,OAAL,CAA5B,CADgD;AAEpD,QAAI,eAAe,CAAC,QAAD,CAFiC;AAGpD,QAAI,iBAAiB,CAAC,QAAD,CAH+B;AAIpD,QAAI,WAAJ,CAAgB,UAAU,OAAV,EAAmB;AACjC,aAAO,EAAP,CAAU,QAAQ,aAAR,IAAyB,YAAzB,CAAV,CADiC;;AAGjC,UAAI,QAAQ,MAAR,EAAgB;AAClB,eAAO,KAAP,CAAa,QAAQ,MAAR,CAAe,OAAf,CAAuB,KAAK,OAAL,CAAa,UAAb,CAApC,EAA8D,CAA9D,EADkB;OAApB;;AAIA,UAAI,QAAQ,aAAR,KAA0B,YAA1B,EAAwC;AAC1C,eAAO,EAAP,CAAU,QAAQ,eAAR,IAA2B,cAA3B,CAAV,CAD0C;AAE1C,yBAAiB,QAAQ,eAAR,CAFyB;OAA5C,MAIK;AACH,uBAAe,QAAQ,aAAR,CADZ;AAEH,yBAAiB,CAAC,QAAD,CAFd;OAJL;KAPc,CAAhB,CAJoD;GAAxB,CA/EW;;AAqGzC,UAAQ,mDAAR,IAA+D,UAAU,MAAV,EAAkB,IAAlB,EAAwB;AACrF,QAAI,MAAM,IAAI,iBAAJ,CAAsB,KAAK,OAAL,CAA5B,CADiF;AAErF,QAAI,eAAe,CAAC,QAAD,CAFkE;AAGrF,QAAI,iBAAiB,CAAC,QAAD,CAHgE;AAIrF,QAAI,iBAAiB,EAAjB,CAJiF;AAKrF,QAAI,WAAJ,CAAgB,UAAU,OAAV,EAAmB;AACjC,aAAO,EAAP,CAAU,QAAQ,MAAR,IAAkB,cAAlB,CAAV,CADiC;;AAGjC,UAAI,QAAQ,MAAR,KAAmB,cAAnB,EAAmC;AACrC,eAAO,EAAP,CAAU,QAAQ,YAAR,IAAwB,YAAxB,CAAV,CADqC;;AAGrC,YAAI,QAAQ,YAAR,KAAyB,YAAzB,EAAuC;AACzC,iBAAO,EAAP,CAAU,QAAQ,cAAR,IAA0B,cAA1B,CAAV,CADyC;AAEzC,2BAAiB,QAAQ,cAAR,CAFwB;SAA3C,MAIK;AACH,yBAAe,QAAQ,YAAR,CADZ;AAEH,2BAAiB,CAAC,QAAD,CAFd;SAJL;OAHF,MAYK;AACH,yBAAiB,QAAQ,MAAR,CADd;AAEH,uBAAe,CAAC,QAAD,CAFZ;AAGH,yBAAiB,CAAC,QAAD,CAHd;OAZL;KAHc,EAoBb,IApBH,EAoBS,kBAAkB,cAAlB,CApBT,CALqF;GAAxB,CArGtB;;AAiIzC,UAAQ,4DAAR,IAAwE,UAAU,MAAV,EAAkB,IAAlB,EAAwB;AAC9F,QAAI,MAAM,IAAI,iBAAJ,CAAsB,KAAK,OAAL,CAA5B,CAD0F;AAE9F,QAAI,UAAU,EAAV,CAF0F;AAG9F,QAAI,WAAJ,CAAgB,YAAY;AAC1B,aAAO,KAAP,CAAa,IAAb,EAAmB,OAAnB,EAD0B;KAAZ,EAEb,OAFH,EAH8F;GAAxB,CAjI/B;;AAyIzC,UAAQ,+DAAR,IAA2E,UAAU,MAAV,EAAkB,IAAlB,EAAwB;AACjG,QAAI,MAAM,IAAI,iBAAJ,CAAsB,KAAK,yBAAL,CAA5B,CAD6F;AAEjG,QAAI,iBAAiB,IAAI,cAAJ,CAF4E;;AAIjG,WAAO,KAAP,CAAa,eAAe,CAAf,CAAb,EAAgC,uDAAhC,EAJiG;AAKjG,WAAO,KAAP,CAAa,eAAe,CAAf,CAAb,EAAgC,kDAAhC,EALiG;AAMjG,WAAO,KAAP,CAAa,eAAe,MAAf,EAAuB,CAApC,EANiG;GAAxB,CAzIlC;;AAkJzC,UAAQ,2DAAR,IAAuE,UAAU,MAAV,EAAkB,IAAlB,EAAwB;AAC7F,QAAI,MAAM,IAAI,iBAAJ,CAAsB,KAAK,yBAAL,CAA5B,CADyF;AAE7F,QAAI,UAAU,IAAI,OAAJ,CAF+E;;AAI7F,WAAO,KAAP,CAAa,IAAI,gBAAJ,CAAqB,QAAQ,CAAR,CAArB,CAAb,EAA+C,uDAA/C,EAJ6F;AAK7F,WAAO,KAAP,CAAa,IAAI,gBAAJ,CAAqB,QAAQ,CAAR,CAArB,CAAb,EAA+C,kDAA/C,EAL6F;AAM7F,WAAO,KAAP,CAAa,IAAI,gBAAJ,CAAqB,QAArB,CAAb,EAA6C,uDAA7C,EAN6F;AAO7F,WAAO,KAAP,CAAa,IAAI,gBAAJ,CAAqB,QAArB,CAAb,EAA6C,kDAA7C,EAP6F;AAQ7F,WAAO,MAAP,CAAc,YAAY;AACxB,UAAI,gBAAJ,CAAqB,EAArB,EADwB;KAAZ,EAEX,KAFH,EAR6F;AAW7F,WAAO,MAAP,CAAc,YAAY;AACxB,UAAI,gBAAJ,CAAqB,oBAArB,EADwB;KAAZ,EAEX,KAFH,EAX6F;AAc7F,WAAO,MAAP,CAAc,YAAY;AACxB,UAAI,gBAAJ,CAAqB,UAArB,EADwB;KAAZ,EAEX,KAFH,EAd6F;GAAxB,CAlJ9B;;AAqKzC,UAAQ,wCAAR,IAAoD,UAAU,MAAV,EAAkB,IAAlB,EAAwB;AAC1E,QAAI,MAAM,IAAI,kBAAJ,CAAuB;AAC/B,kBAAY,SAAZ;AACA,YAAM,QAAN;KAFQ,CAAN,CADsE;AAK1E,QAAI,UAAJ,CAAe;AACb,gBAAU,EAAE,MAAM,CAAN,EAAS,QAAQ,CAAR,EAArB;AACA,iBAAW,EAAE,MAAM,CAAN,EAAS,QAAQ,CAAR,EAAtB;AACA,cAAQ,aAAR;KAHF,EAL0E;AAU1E,QAAI,UAAJ,CAAe;AACb,gBAAU,EAAE,MAAM,CAAN,EAAS,QAAQ,CAAR,EAArB;AACA,iBAAW,EAAE,MAAM,CAAN,EAAS,QAAQ,CAAR,EAAtB;AACA,cAAQ,aAAR;KAHF,EAV0E;AAe1E,UAAM,IAAI,iBAAJ,CAAsB,IAAI,QAAJ,EAAtB,CAAN;;;AAf0E,QAkBtE,MAAM,IAAI,oBAAJ,CAAyB;AACjC,YAAM,CAAN;AACA,cAAQ,CAAR;AACA,cAAQ,aAAR;KAHQ,CAAN,CAlBsE;;AAwB1E,WAAO,KAAP,CAAa,IAAI,IAAJ,EAAU,CAAvB,EAxB0E;AAyB1E,WAAO,KAAP,CAAa,IAAI,MAAJ,EAAY,CAAzB;;;AAzB0E,QA4BtE,MAAM,IAAI,oBAAJ,CAAyB;AACjC,YAAM,CAAN;AACA,cAAQ,CAAR;AACA,cAAQ,qBAAR;KAHQ,CAAN,CA5BsE;;AAkC1E,WAAO,KAAP,CAAa,IAAI,IAAJ,EAAU,CAAvB,EAlC0E;AAmC1E,WAAO,KAAP,CAAa,IAAI,MAAJ,EAAY,CAAzB,EAnC0E;GAAxB,CArKX;;AA2MzC,UAAQ,uCAAR,IAAmD,UAAU,MAAV,EAAkB,IAAlB,EAAwB;AACzE,QAAI,MAAM,IAAI,kBAAJ,CAAuB;AAC/B,kBAAY,SAAZ;AACA,YAAM,QAAN;KAFQ,CAAN,CADqE;AAKzE,QAAI,UAAJ,CAAe;AACb,gBAAU,EAAE,MAAM,CAAN,EAAS,QAAQ,CAAR,EAArB;AACA,iBAAW,EAAE,MAAM,CAAN,EAAS,QAAQ,CAAR,EAAtB;AACA,cAAQ,aAAR;KAHF,EALyE;AAUzE,UAAM,IAAI,iBAAJ,CAAsB,IAAI,QAAJ,EAAtB,CAAN,CAVyE;;AAYzE,QAAI,MAAM,IAAI,mBAAJ,CAAwB;AAChC,YAAM,CAAN;AACA,cAAQ,CAAR;KAFQ,CAAN;;;AAZqE,UAkBzE,CAAO,KAAP,CAAa,IAAI,MAAJ,EAAY,qBAAzB,EAlByE;AAmBzE,WAAO,KAAP,CAAa,IAAI,IAAJ,EAAU,CAAvB,EAnByE;AAoBzE,WAAO,KAAP,CAAa,IAAI,MAAJ,EAAY,CAAzB,EApByE;GAAxB,CA3MV;;AAkOzC,UAAQ,uBAAR,IAAmC,UAAU,MAAV,EAAkB,IAAlB,EAAwB;AACzD,QAAI,MAAM,IAAI,kBAAJ,CAAuB;AAC/B,kBAAY,SAAZ;AACA,YAAM,wBAAN;KAFQ,CAAN,CADqD;AAKzD,QAAI,UAAJ,CAAe;AACb,gBAAU,EAAE,MAAM,CAAN,EAAS,QAAQ,CAAR,EAArB;AACA,iBAAW,EAAE,MAAM,CAAN,EAAS,QAAQ,CAAR,EAAtB;AACA,cAAQ,6BAAR;KAHF,EALyD;AAUzD,UAAM,IAAI,iBAAJ,CAAsB,IAAI,QAAJ,EAAtB,CAAN,CAVyD;;AAYzD,QAAI,UAAU,IAAI,OAAJ,CAZ2C;AAazD,WAAO,KAAP,CAAa,QAAQ,MAAR,EAAgB,CAA7B,EAbyD;AAczD,WAAO,KAAP,CAAa,QAAQ,CAAR,CAAb,EAAyB,oCAAzB,EAdyD;GAAxB,CAlOM;;AAmPzC,UAAQ,uBAAR,IAAmC,UAAU,MAAV,EAAkB,IAAlB,EAAwB;AACzD,QAAI,MAAM,IAAI,kBAAJ,CAAuB;AAC/B,kBAAY,oBAAZ;AACA,YAAM,QAAN;KAFQ,CAAN,CADqD;AAKzD,QAAI,UAAJ,CAAe;AACb,gBAAU,EAAE,MAAM,CAAN,EAAS,QAAQ,CAAR,EAArB;AACA,iBAAW,EAAE,MAAM,CAAN,EAAS,QAAQ,CAAR,EAAtB;AACA,cAAQ,oCAAR;KAHF,EALyD;AAUzD,UAAM,IAAI,iBAAJ,CAAsB,IAAI,QAAJ,EAAtB,CAAN,CAVyD;;AAYzD,QAAI,UAAU,IAAI,OAAJ,CAZ2C;AAazD,WAAO,KAAP,CAAa,QAAQ,MAAR,EAAgB,CAA7B,EACa,4BADb,EAbyD;AAezD,WAAO,KAAP,CAAa,QAAQ,CAAR,CAAb,EAAyB,oCAAzB,EACa,2CADb,EAfyD;GAAxB,CAnPM;;AAsQzC,UAAQ,2CAAR,IAAuD,UAAU,MAAV,EAAkB,IAAlB,EAAwB;AAC7E,QAAI,MAAM,IAAI,kBAAJ,CAAuB;AAC/B,kBAAY,4BAAZ;AACA,YAAM,QAAN;KAFQ,CAAN,CADyE;AAK7E,QAAI,UAAJ,CAAe;AACb,gBAAU,EAAE,MAAM,CAAN,EAAS,QAAQ,CAAR,EAArB;AACA,iBAAW,EAAE,MAAM,CAAN,EAAS,QAAQ,CAAR,EAAtB;AACA,cAAQ,cAAR;KAHF,EAL6E;AAU7E,UAAM,IAAI,iBAAJ,CAAsB,IAAI,QAAJ,EAAtB,CAAN,CAV6E;;AAY7E,QAAI,UAAU,IAAI,OAAJ,CAZ+D;AAa7E,WAAO,KAAP,CAAa,QAAQ,MAAR,EAAgB,CAA7B,EACa,4BADb,EAb6E;AAe7E,WAAO,KAAP,CAAa,QAAQ,CAAR,CAAb,EAAyB,gCAAzB,EACa,wDADb,EAf6E;GAAxB,CAtQd;;AAyRzC,UAAQ,uBAAR,IAAmC,UAAU,MAAV,EAAkB,IAAlB,EAAwB;AACzD,QAAI,MAAM,IAAI,iBAAJ,CAAsB;AAC9B,iBAAW,CAAX;AACA,cAAQ,QAAR;AACA,oBAAc,qBAAd;AACA,iBAAW,CAAC,IAAD,CAAX;AACA,eAAS,EAAT;AACA,kBAAY,MAAZ;AACA,wBAAkB,CAAC,KAAD,CAAlB;KAPQ,CAAN,CADqD;;AAWzD,WAAO,KAAP,CAAa,IAAI,gBAAJ,CAAqB,GAArB,CAAb,EAAwC,KAAxC,EAXyD;AAYzD,WAAO,KAAP,CAAa,IAAI,gBAAJ,CAAqB,IAArB,CAAb,EAAyC,KAAzC,EAZyD;GAAxB,CAzRM;;AAwSzC,UAAQ,iBAAR,IAA6B,UAAU,MAAV,EAAkB,IAAlB,EAAwB;AACnD,QAAI,MAAM,IAAI,iBAAJ,CAAsB;AAC9B,iBAAW,CAAX;AACA,cAAQ,QAAR;AACA,oBAAc,6CAAd;AACA,iBAAW,CAAC,IAAD,CAAX;AACA,eAAS,EAAT;AACA,kBAAY,MAAZ;AACA,wBAAkB,CAAC,KAAD,CAAlB;KAPQ,CAAN,CAD+C;;AAWnD,QAAI,IAAI,IAAI,OAAJ,CAAY,CAAZ,CAAJ,CAX+C;AAYnD,WAAO,KAAP,CAAa,IAAI,gBAAJ,CAAqB,CAArB,CAAb,EAAsC,KAAtC,EAZmD;GAAxB,CAxSY;;AAuTzC,UAAQ,0CAAR,IAAsD,UAAU,MAAV,EAAkB,IAAlB,EAAwB;AAC5E,QAAI,MAAM,IAAI,iBAAJ,CAAsB;AAC9B,iBAAW,CAAX;AACA,cAAQ,QAAR;AACA,iBAAW,CAAC,YAAD,EAAe,YAAf,EAA6B,YAA7B,CAAX;AACA,eAAS,EAAT;AACA,kBAAY,mBAAZ;AACA,oBAAc,oBAAd;KANQ,CAAN,CADwE;;AAU5E,QAAI,MAAM,IAAI,mBAAJ,CAAwB;AAChC,YAAM,CAAN;AACA,cAAQ,CAAR;KAFQ,CAAN,CAVwE;AAc5E,WAAO,KAAP,CAAa,IAAI,MAAJ,EAAY,+BAAzB,EAd4E;AAe5E,WAAO,KAAP,CAAa,IAAI,IAAJ,EAAU,CAAvB,EAf4E;AAgB5E,WAAO,KAAP,CAAa,IAAI,MAAJ,EAAY,CAAzB,EAhB4E;;AAkB5E,QAAI,MAAM,IAAI,mBAAJ,CAAwB;AAChC,YAAM,CAAN;AACA,cAAQ,CAAR;KAFQ,CAAN,CAlBwE;AAsB5E,WAAO,KAAP,CAAa,IAAI,MAAJ,EAAY,+BAAzB,EAtB4E;AAuB5E,WAAO,KAAP,CAAa,IAAI,IAAJ,EAAU,CAAvB,EAvB4E;AAwB5E,WAAO,KAAP,CAAa,IAAI,MAAJ,EAAY,CAAzB,EAxB4E;;AA0B5E,QAAI,MAAM,IAAI,mBAAJ,CAAwB;AAChC,YAAM,CAAN;AACA,cAAQ,CAAR;KAFQ,CAAN,CA1BwE;AA8B5E,WAAO,KAAP,CAAa,IAAI,MAAJ,EAAY,+BAAzB,EA9B4E;AA+B5E,WAAO,KAAP,CAAa,IAAI,IAAJ,EAAU,CAAvB,EA/B4E;AAgC5E,WAAO,KAAP,CAAa,IAAI,MAAJ,EAAY,CAAzB,EAhC4E;GAAxB,CAvTb;;AA0VzC,UAAQ,wCAAR,IAAoD,UAAU,MAAV,EAAkB,IAAlB,EAAwB;AAC1E,QAAI,MAAM,IAAI,iBAAJ,CAAsB;AAC9B,iBAAW,CAAX;AACA,cAAQ,QAAR;AACA,iBAAW,CAAC,WAAD,CAAX;AACA,eAAS,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,CAAT;AACA,kBAAY,sBAAZ;AACA,oBAAc,oBAAd;KANQ,CAAN,CADsE;;AAU1E,QAAI,MAAM,IAAI,mBAAJ,CAAwB;AAChC,YAAM,CAAN;AACA,cAAQ,CAAR;KAFQ,CAAN,CAVsE;AAc1E,WAAO,KAAP,CAAa,IAAI,IAAJ,EAAU,OAAvB,EAd0E;AAe1E,WAAO,KAAP,CAAa,IAAI,IAAJ,EAAU,CAAvB,EAf0E;AAgB1E,WAAO,KAAP,CAAa,IAAI,MAAJ,EAAY,CAAzB,EAhB0E;;AAkB1E,QAAI,MAAM,IAAI,mBAAJ,CAAwB;AAChC,YAAM,CAAN;AACA,cAAQ,CAAR;KAFQ,CAAN,CAlBsE;AAsB1E,WAAO,KAAP,CAAa,IAAI,IAAJ,EAAU,OAAvB,EAtB0E;AAuB1E,WAAO,KAAP,CAAa,IAAI,IAAJ,EAAU,CAAvB,EAvB0E;AAwB1E,WAAO,KAAP,CAAa,IAAI,MAAJ,EAAY,CAAzB,EAxB0E;;AA0B1E,QAAI,MAAM,IAAI,mBAAJ,CAAwB;AAChC,YAAM,CAAN;AACA,cAAQ,CAAR;KAFQ,CAAN,CA1BsE;AA8B1E,WAAO,KAAP,CAAa,IAAI,IAAJ,EAAU,OAAvB,EA9B0E;AA+B1E,WAAO,KAAP,CAAa,IAAI,IAAJ,EAAU,CAAvB,EA/B0E;AAgC1E,WAAO,KAAP,CAAa,IAAI,MAAJ,EAAY,CAAzB,EAhC0E;GAAxB,CA1VX;;AA6XzC,UAAQ,sCAAR,IAAkD,UAAU,MAAV,EAAkB,IAAlB,EAAwB;AACxE,QAAI,MAAM,IAAI,kBAAJ,CAAuB;AAC/B,kBAAY,qBAAZ;AACA,YAAM,QAAN;KAFQ,CAAN,CADoE;AAKxE,QAAI,UAAJ,CAAe;AACb,gBAAU,EAAE,MAAM,CAAN,EAAS,QAAQ,CAAR,EAArB;AACA,iBAAW,EAAE,MAAM,CAAN,EAAS,QAAQ,CAAR,EAAtB;AACA,cAAQ,QAAR;KAHF,EALwE;AAUxE,QAAI,UAAJ,CAAe;AACb,gBAAU,EAAE,MAAM,CAAN,EAAS,QAAQ,CAAR,EAArB;AACA,iBAAW,EAAE,MAAM,CAAN,EAAS,QAAQ,CAAR,EAAtB;AACA,cAAQ,QAAR;AACA,YAAM,YAAN;KAJF,EAVwE;AAgBxE,QAAI,gBAAJ,CAAqB,QAArB,EAA+B,gBAA/B,EAhBwE;;AAkBxE,QAAI,MAAM,kBAAkB,aAAlB,CAAgC,GAAhC,CAAN,CAlBoE;AAmBxE,WAAO,KAAP,CAAa,IAAI,IAAJ,EAAU,QAAvB,EAnBwE;AAoBxE,WAAO,KAAP,CAAa,IAAI,UAAJ,EAAgB,qBAA7B,EApBwE;AAqBxE,WAAO,KAAP,CAAa,IAAI,OAAJ,CAAY,MAAZ,EAAoB,CAAjC,EArBwE;AAsBxE,WAAO,KAAP,CAAa,IAAI,OAAJ,CAAY,CAAZ,CAAb,EAA6B,2BAA7B,EAtBwE;AAuBxE,WAAO,KAAP,CAAa,IAAI,OAAJ,CAAY,CAAZ,CAAb,EAA6B,2BAA7B,EAvBwE;AAwBxE,WAAO,KAAP,CAAa,IAAI,gBAAJ,CAAqB,QAArB,CAAb,EAA6C,gBAA7C,EAxBwE;;AA0BxE,QAAI,MAAM,IAAI,mBAAJ,CAAwB;AAChC,YAAM,CAAN;AACA,cAAQ,CAAR;KAFQ,CAAN,CA1BoE;AA8BxE,WAAO,KAAP,CAAa,IAAI,IAAJ,EAAU,CAAvB,EA9BwE;AA+BxE,WAAO,KAAP,CAAa,IAAI,MAAJ,EAAY,CAAzB,EA/BwE;AAgCxE,WAAO,KAAP,CAAa,IAAI,MAAJ,EAAY,2BAAzB,EAhCwE;AAiCxE,WAAO,KAAP,CAAa,IAAI,IAAJ,EAAU,IAAvB,EAjCwE;;AAmCxE,UAAM,IAAI,oBAAJ,CAAyB;AAC7B,YAAM,CAAN;AACA,cAAQ,CAAR;AACA,cAAQ,2BAAR;KAHI,CAAN,CAnCwE;AAwCxE,WAAO,KAAP,CAAa,IAAI,IAAJ,EAAU,CAAvB,EAxCwE;AAyCxE,WAAO,KAAP,CAAa,IAAI,MAAJ,EAAY,CAAzB,EAzCwE;;AA2CxE,UAAM,IAAI,mBAAJ,CAAwB;AAC5B,YAAM,CAAN;AACA,cAAQ,CAAR;KAFI,CAAN,CA3CwE;AA+CxE,WAAO,KAAP,CAAa,IAAI,IAAJ,EAAU,CAAvB,EA/CwE;AAgDxE,WAAO,KAAP,CAAa,IAAI,MAAJ,EAAY,CAAzB,EAhDwE;AAiDxE,WAAO,KAAP,CAAa,IAAI,MAAJ,EAAY,2BAAzB,EAjDwE;AAkDxE,WAAO,KAAP,CAAa,IAAI,IAAJ,EAAU,YAAvB,EAlDwE;;AAoDxE,UAAM,IAAI,oBAAJ,CAAyB;AAC7B,YAAM,CAAN;AACA,cAAQ,CAAR;AACA,cAAQ,2BAAR;KAHI,CAAN,CApDwE;AAyDxE,WAAO,KAAP,CAAa,IAAI,IAAJ,EAAU,CAAvB,EAzDwE;AA0DxE,WAAO,KAAP,CAAa,IAAI,MAAJ,EAAY,CAAzB,EA1DwE;GAAxB,CA7XT;CAApC,CAAP","file":"test-source-map-consumer-compiled.js","sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  var SourceMapConsumer = require('../../lib/source-map/source-map-consumer').SourceMapConsumer;\n  var SourceMapGenerator = require('../../lib/source-map/source-map-generator').SourceMapGenerator;\n\n  exports['test that we can instantiate with a string or an objects'] = function (assert, util) {\n    assert.doesNotThrow(function () {\n      var map = new SourceMapConsumer(util.testMap);\n    });\n    assert.doesNotThrow(function () {\n      var map = new SourceMapConsumer(JSON.stringify(util.testMap));\n    });\n  };\n\n  exports['test that the `sources` field has the original sources'] = function (assert, util) {\n    var map = new SourceMapConsumer(util.testMap);\n    var sources = map.sources;\n\n    assert.equal(sources[0], '/the/root/one.js');\n    assert.equal(sources[1], '/the/root/two.js');\n    assert.equal(sources.length, 2);\n  };\n\n  exports['test that the source root is reflected in a mapping\\'s source field'] = function (assert, util) {\n    var map = new SourceMapConsumer(util.testMap);\n    var mapping;\n\n    mapping = map.originalPositionFor({\n      line: 2,\n      column: 1\n    });\n    assert.equal(mapping.source, '/the/root/two.js');\n\n    mapping = map.originalPositionFor({\n      line: 1,\n      column: 1\n    });\n    assert.equal(mapping.source, '/the/root/one.js');\n  };\n\n  exports['test mapping tokens back exactly'] = function (assert, util) {\n    var map = new SourceMapConsumer(util.testMap);\n\n    util.assertMapping(1, 1, '/the/root/one.js', 1, 1, null, map, assert);\n    util.assertMapping(1, 5, '/the/root/one.js', 1, 5, null, map, assert);\n    util.assertMapping(1, 9, '/the/root/one.js', 1, 11, null, map, assert);\n    util.assertMapping(1, 18, '/the/root/one.js', 1, 21, 'bar', map, assert);\n    util.assertMapping(1, 21, '/the/root/one.js', 2, 3, null, map, assert);\n    util.assertMapping(1, 28, '/the/root/one.js', 2, 10, 'baz', map, assert);\n    util.assertMapping(1, 32, '/the/root/one.js', 2, 14, 'bar', map, assert);\n\n    util.assertMapping(2, 1, '/the/root/two.js', 1, 1, null, map, assert);\n    util.assertMapping(2, 5, '/the/root/two.js', 1, 5, null, map, assert);\n    util.assertMapping(2, 9, '/the/root/two.js', 1, 11, null, map, assert);\n    util.assertMapping(2, 18, '/the/root/two.js', 1, 21, 'n', map, assert);\n    util.assertMapping(2, 21, '/the/root/two.js', 2, 3, null, map, assert);\n    util.assertMapping(2, 28, '/the/root/two.js', 2, 10, 'n', map, assert);\n  };\n\n  exports['test mapping tokens fuzzy'] = function (assert, util) {\n    var map = new SourceMapConsumer(util.testMap);\n\n    // Finding original positions\n    util.assertMapping(1, 20, '/the/root/one.js', 1, 21, 'bar', map, assert, true);\n    util.assertMapping(1, 30, '/the/root/one.js', 2, 10, 'baz', map, assert, true);\n    util.assertMapping(2, 12, '/the/root/two.js', 1, 11, null, map, assert, true);\n\n    // Finding generated positions\n    util.assertMapping(1, 18, '/the/root/one.js', 1, 22, 'bar', map, assert, null, true);\n    util.assertMapping(1, 28, '/the/root/one.js', 2, 13, 'baz', map, assert, null, true);\n    util.assertMapping(2, 9, '/the/root/two.js', 1, 16, null, map, assert, null, true);\n  };\n\n  exports['test creating source map consumers with )]}\\' prefix'] = function (assert, util) {\n    assert.doesNotThrow(function () {\n      var map = new SourceMapConsumer(\")]}'\" + JSON.stringify(util.testMap));\n    });\n  };\n\n  exports['test eachMapping'] = function (assert, util) {\n    var map = new SourceMapConsumer(util.testMap);\n    var previousLine = -Infinity;\n    var previousColumn = -Infinity;\n    map.eachMapping(function (mapping) {\n      assert.ok(mapping.generatedLine >= previousLine);\n\n      if (mapping.source) {\n        assert.equal(mapping.source.indexOf(util.testMap.sourceRoot), 0);\n      }\n\n      if (mapping.generatedLine === previousLine) {\n        assert.ok(mapping.generatedColumn >= previousColumn);\n        previousColumn = mapping.generatedColumn;\n      }\n      else {\n        previousLine = mapping.generatedLine;\n        previousColumn = -Infinity;\n      }\n    });\n  };\n\n  exports['test iterating over mappings in a different order'] = function (assert, util) {\n    var map = new SourceMapConsumer(util.testMap);\n    var previousLine = -Infinity;\n    var previousColumn = -Infinity;\n    var previousSource = \"\";\n    map.eachMapping(function (mapping) {\n      assert.ok(mapping.source >= previousSource);\n\n      if (mapping.source === previousSource) {\n        assert.ok(mapping.originalLine >= previousLine);\n\n        if (mapping.originalLine === previousLine) {\n          assert.ok(mapping.originalColumn >= previousColumn);\n          previousColumn = mapping.originalColumn;\n        }\n        else {\n          previousLine = mapping.originalLine;\n          previousColumn = -Infinity;\n        }\n      }\n      else {\n        previousSource = mapping.source;\n        previousLine = -Infinity;\n        previousColumn = -Infinity;\n      }\n    }, null, SourceMapConsumer.ORIGINAL_ORDER);\n  };\n\n  exports['test that we can set the context for `this` in eachMapping'] = function (assert, util) {\n    var map = new SourceMapConsumer(util.testMap);\n    var context = {};\n    map.eachMapping(function () {\n      assert.equal(this, context);\n    }, context);\n  };\n\n  exports['test that the `sourcesContent` field has the original sources'] = function (assert, util) {\n    var map = new SourceMapConsumer(util.testMapWithSourcesContent);\n    var sourcesContent = map.sourcesContent;\n\n    assert.equal(sourcesContent[0], ' ONE.foo = function (bar) {\\n   return baz(bar);\\n };');\n    assert.equal(sourcesContent[1], ' TWO.inc = function (n) {\\n   return n + 1;\\n };');\n    assert.equal(sourcesContent.length, 2);\n  };\n\n  exports['test that we can get the original sources for the sources'] = function (assert, util) {\n    var map = new SourceMapConsumer(util.testMapWithSourcesContent);\n    var sources = map.sources;\n\n    assert.equal(map.sourceContentFor(sources[0]), ' ONE.foo = function (bar) {\\n   return baz(bar);\\n };');\n    assert.equal(map.sourceContentFor(sources[1]), ' TWO.inc = function (n) {\\n   return n + 1;\\n };');\n    assert.equal(map.sourceContentFor(\"one.js\"), ' ONE.foo = function (bar) {\\n   return baz(bar);\\n };');\n    assert.equal(map.sourceContentFor(\"two.js\"), ' TWO.inc = function (n) {\\n   return n + 1;\\n };');\n    assert.throws(function () {\n      map.sourceContentFor(\"\");\n    }, Error);\n    assert.throws(function () {\n      map.sourceContentFor(\"/the/root/three.js\");\n    }, Error);\n    assert.throws(function () {\n      map.sourceContentFor(\"three.js\");\n    }, Error);\n  };\n\n  exports['test sourceRoot + generatedPositionFor'] = function (assert, util) {\n    var map = new SourceMapGenerator({\n      sourceRoot: 'foo/bar',\n      file: 'baz.js'\n    });\n    map.addMapping({\n      original: { line: 1, column: 1 },\n      generated: { line: 2, column: 2 },\n      source: 'bang.coffee'\n    });\n    map.addMapping({\n      original: { line: 5, column: 5 },\n      generated: { line: 6, column: 6 },\n      source: 'bang.coffee'\n    });\n    map = new SourceMapConsumer(map.toString());\n\n    // Should handle without sourceRoot.\n    var pos = map.generatedPositionFor({\n      line: 1,\n      column: 1,\n      source: 'bang.coffee'\n    });\n\n    assert.equal(pos.line, 2);\n    assert.equal(pos.column, 2);\n\n    // Should handle with sourceRoot.\n    var pos = map.generatedPositionFor({\n      line: 1,\n      column: 1,\n      source: 'foo/bar/bang.coffee'\n    });\n\n    assert.equal(pos.line, 2);\n    assert.equal(pos.column, 2);\n  };\n\n  exports['test sourceRoot + originalPositionFor'] = function (assert, util) {\n    var map = new SourceMapGenerator({\n      sourceRoot: 'foo/bar',\n      file: 'baz.js'\n    });\n    map.addMapping({\n      original: { line: 1, column: 1 },\n      generated: { line: 2, column: 2 },\n      source: 'bang.coffee'\n    });\n    map = new SourceMapConsumer(map.toString());\n\n    var pos = map.originalPositionFor({\n      line: 2,\n      column: 2,\n    });\n\n    // Should always have the prepended source root\n    assert.equal(pos.source, 'foo/bar/bang.coffee');\n    assert.equal(pos.line, 1);\n    assert.equal(pos.column, 1);\n  };\n\n  exports['test github issue #56'] = function (assert, util) {\n    var map = new SourceMapGenerator({\n      sourceRoot: 'http://',\n      file: 'www.example.com/foo.js'\n    });\n    map.addMapping({\n      original: { line: 1, column: 1 },\n      generated: { line: 2, column: 2 },\n      source: 'www.example.com/original.js'\n    });\n    map = new SourceMapConsumer(map.toString());\n\n    var sources = map.sources;\n    assert.equal(sources.length, 1);\n    assert.equal(sources[0], 'http://www.example.com/original.js');\n  };\n\n  exports['test github issue #43'] = function (assert, util) {\n    var map = new SourceMapGenerator({\n      sourceRoot: 'http://example.com',\n      file: 'foo.js'\n    });\n    map.addMapping({\n      original: { line: 1, column: 1 },\n      generated: { line: 2, column: 2 },\n      source: 'http://cdn.example.com/original.js'\n    });\n    map = new SourceMapConsumer(map.toString());\n\n    var sources = map.sources;\n    assert.equal(sources.length, 1,\n                 'Should only be one source.');\n    assert.equal(sources[0], 'http://cdn.example.com/original.js',\n                 'Should not be joined with the sourceRoot.');\n  };\n\n  exports['test absolute path, but same host sources'] = function (assert, util) {\n    var map = new SourceMapGenerator({\n      sourceRoot: 'http://example.com/foo/bar',\n      file: 'foo.js'\n    });\n    map.addMapping({\n      original: { line: 1, column: 1 },\n      generated: { line: 2, column: 2 },\n      source: '/original.js'\n    });\n    map = new SourceMapConsumer(map.toString());\n\n    var sources = map.sources;\n    assert.equal(sources.length, 1,\n                 'Should only be one source.');\n    assert.equal(sources[0], 'http://example.com/original.js',\n                 'Source should be relative the host of the source root.');\n  };\n\n  exports['test github issue #64'] = function (assert, util) {\n    var map = new SourceMapConsumer({\n      \"version\": 3,\n      \"file\": \"foo.js\",\n      \"sourceRoot\": \"http://example.com/\",\n      \"sources\": [\"/a\"],\n      \"names\": [],\n      \"mappings\": \"AACA\",\n      \"sourcesContent\": [\"foo\"]\n    });\n\n    assert.equal(map.sourceContentFor(\"a\"), \"foo\");\n    assert.equal(map.sourceContentFor(\"/a\"), \"foo\");\n  };\n\n  exports['test bug 885597'] = function (assert, util) {\n    var map = new SourceMapConsumer({\n      \"version\": 3,\n      \"file\": \"foo.js\",\n      \"sourceRoot\": \"file:///Users/AlGore/Invented/The/Internet/\",\n      \"sources\": [\"/a\"],\n      \"names\": [],\n      \"mappings\": \"AACA\",\n      \"sourcesContent\": [\"foo\"]\n    });\n\n    var s = map.sources[0];\n    assert.equal(map.sourceContentFor(s), \"foo\");\n  };\n\n  exports['test github issue #72, duplicate sources'] = function (assert, util) {\n    var map = new SourceMapConsumer({\n      \"version\": 3,\n      \"file\": \"foo.js\",\n      \"sources\": [\"source1.js\", \"source1.js\", \"source3.js\"],\n      \"names\": [],\n      \"mappings\": \";EAAC;;IAEE;;MEEE\",\n      \"sourceRoot\": \"http://example.com\"\n    });\n\n    var pos = map.originalPositionFor({\n      line: 2,\n      column: 2\n    });\n    assert.equal(pos.source, 'http://example.com/source1.js');\n    assert.equal(pos.line, 1);\n    assert.equal(pos.column, 1);\n\n    var pos = map.originalPositionFor({\n      line: 4,\n      column: 4\n    });\n    assert.equal(pos.source, 'http://example.com/source1.js');\n    assert.equal(pos.line, 3);\n    assert.equal(pos.column, 3);\n\n    var pos = map.originalPositionFor({\n      line: 6,\n      column: 6\n    });\n    assert.equal(pos.source, 'http://example.com/source3.js');\n    assert.equal(pos.line, 5);\n    assert.equal(pos.column, 5);\n  };\n\n  exports['test github issue #72, duplicate names'] = function (assert, util) {\n    var map = new SourceMapConsumer({\n      \"version\": 3,\n      \"file\": \"foo.js\",\n      \"sources\": [\"source.js\"],\n      \"names\": [\"name1\", \"name1\", \"name3\"],\n      \"mappings\": \";EAACA;;IAEEA;;MAEEE\",\n      \"sourceRoot\": \"http://example.com\"\n    });\n\n    var pos = map.originalPositionFor({\n      line: 2,\n      column: 2\n    });\n    assert.equal(pos.name, 'name1');\n    assert.equal(pos.line, 1);\n    assert.equal(pos.column, 1);\n\n    var pos = map.originalPositionFor({\n      line: 4,\n      column: 4\n    });\n    assert.equal(pos.name, 'name1');\n    assert.equal(pos.line, 3);\n    assert.equal(pos.column, 3);\n\n    var pos = map.originalPositionFor({\n      line: 6,\n      column: 6\n    });\n    assert.equal(pos.name, 'name3');\n    assert.equal(pos.line, 5);\n    assert.equal(pos.column, 5);\n  };\n\n  exports['test SourceMapConsumer.fromSourceMap'] = function (assert, util) {\n    var smg = new SourceMapGenerator({\n      sourceRoot: 'http://example.com/',\n      file: 'foo.js'\n    });\n    smg.addMapping({\n      original: { line: 1, column: 1 },\n      generated: { line: 2, column: 2 },\n      source: 'bar.js'\n    });\n    smg.addMapping({\n      original: { line: 2, column: 2 },\n      generated: { line: 4, column: 4 },\n      source: 'baz.js',\n      name: 'dirtMcGirt'\n    });\n    smg.setSourceContent('baz.js', 'baz.js content');\n\n    var smc = SourceMapConsumer.fromSourceMap(smg);\n    assert.equal(smc.file, 'foo.js');\n    assert.equal(smc.sourceRoot, 'http://example.com/');\n    assert.equal(smc.sources.length, 2);\n    assert.equal(smc.sources[0], 'http://example.com/bar.js');\n    assert.equal(smc.sources[1], 'http://example.com/baz.js');\n    assert.equal(smc.sourceContentFor('baz.js'), 'baz.js content');\n\n    var pos = smc.originalPositionFor({\n      line: 2,\n      column: 2\n    });\n    assert.equal(pos.line, 1);\n    assert.equal(pos.column, 1);\n    assert.equal(pos.source, 'http://example.com/bar.js');\n    assert.equal(pos.name, null);\n\n    pos = smc.generatedPositionFor({\n      line: 1,\n      column: 1,\n      source: 'http://example.com/bar.js'\n    });\n    assert.equal(pos.line, 2);\n    assert.equal(pos.column, 2);\n\n    pos = smc.originalPositionFor({\n      line: 4,\n      column: 4\n    });\n    assert.equal(pos.line, 2);\n    assert.equal(pos.column, 2);\n    assert.equal(pos.source, 'http://example.com/baz.js');\n    assert.equal(pos.name, 'dirtMcGirt');\n\n    pos = smc.generatedPositionFor({\n      line: 2,\n      column: 2,\n      source: 'http://example.com/baz.js'\n    });\n    assert.equal(pos.line, 4);\n    assert.equal(pos.column, 4);\n  };\n});\n"]}