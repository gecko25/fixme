{"version":3,"sources":["test-source-node.js"],"names":[],"mappings":"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","file":"test-source-node-compiled.js","sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  var SourceMapGenerator = require('../../lib/source-map/source-map-generator').SourceMapGenerator;\n  var SourceMapConsumer = require('../../lib/source-map/source-map-consumer').SourceMapConsumer;\n  var SourceNode = require('../../lib/source-map/source-node').SourceNode;\n\n  exports['test .add()'] = function (assert, util) {\n    var node = new SourceNode(null, null, null);\n\n    // Adding a string works.\n    node.add('function noop() {}');\n\n    // Adding another source node works.\n    node.add(new SourceNode(null, null, null));\n\n    // Adding an array works.\n    node.add(['function foo() {',\n              new SourceNode(null, null, null,\n                             'return 10;'),\n              '}']);\n\n    // Adding other stuff doesn't.\n    assert.throws(function () {\n      node.add({});\n    });\n    assert.throws(function () {\n      node.add(function () {});\n    });\n  };\n\n  exports['test .prepend()'] = function (assert, util) {\n    var node = new SourceNode(null, null, null);\n\n    // Prepending a string works.\n    node.prepend('function noop() {}');\n    assert.equal(node.children[0], 'function noop() {}');\n    assert.equal(node.children.length, 1);\n\n    // Prepending another source node works.\n    node.prepend(new SourceNode(null, null, null));\n    assert.equal(node.children[0], '');\n    assert.equal(node.children[1], 'function noop() {}');\n    assert.equal(node.children.length, 2);\n\n    // Prepending an array works.\n    node.prepend(['function foo() {',\n              new SourceNode(null, null, null,\n                             'return 10;'),\n              '}']);\n    assert.equal(node.children[0], 'function foo() {');\n    assert.equal(node.children[1], 'return 10;');\n    assert.equal(node.children[2], '}');\n    assert.equal(node.children[3], '');\n    assert.equal(node.children[4], 'function noop() {}');\n    assert.equal(node.children.length, 5);\n\n    // Prepending other stuff doesn't.\n    assert.throws(function () {\n      node.prepend({});\n    });\n    assert.throws(function () {\n      node.prepend(function () {});\n    });\n  };\n\n  exports['test .toString()'] = function (assert, util) {\n    assert.equal((new SourceNode(null, null, null,\n                                 ['function foo() {',\n                                  new SourceNode(null, null, null, 'return 10;'),\n                                  '}'])).toString(),\n                 'function foo() {return 10;}');\n  };\n\n  exports['test .join()'] = function (assert, util) {\n    assert.equal((new SourceNode(null, null, null,\n                                 ['a', 'b', 'c', 'd'])).join(', ').toString(),\n                 'a, b, c, d');\n  };\n\n  exports['test .walk()'] = function (assert, util) {\n    var node = new SourceNode(null, null, null,\n                              ['(function () {\\n',\n                               '  ', new SourceNode(1, 0, 'a.js', ['someCall()']), ';\\n',\n                               '  ', new SourceNode(2, 0, 'b.js', ['if (foo) bar()']), ';\\n',\n                               '}());']);\n    var expected = [\n      { str: '(function () {\\n', source: null,   line: null, column: null },\n      { str: '  ',               source: null,   line: null, column: null },\n      { str: 'someCall()',       source: 'a.js', line: 1,    column: 0    },\n      { str: ';\\n',              source: null,   line: null, column: null },\n      { str: '  ',               source: null,   line: null, column: null },\n      { str: 'if (foo) bar()',   source: 'b.js', line: 2,    column: 0    },\n      { str: ';\\n',              source: null,   line: null, column: null },\n      { str: '}());',            source: null,   line: null, column: null },\n    ];\n    var i = 0;\n    node.walk(function (chunk, loc) {\n      assert.equal(expected[i].str, chunk);\n      assert.equal(expected[i].source, loc.source);\n      assert.equal(expected[i].line, loc.line);\n      assert.equal(expected[i].column, loc.column);\n      i++;\n    });\n  };\n\n  exports['test .replaceRight'] = function (assert, util) {\n    var node;\n\n    // Not nested\n    node = new SourceNode(null, null, null, 'hello world');\n    node.replaceRight(/world/, 'universe');\n    assert.equal(node.toString(), 'hello universe');\n\n    // Nested\n    node = new SourceNode(null, null, null,\n                          [new SourceNode(null, null, null, 'hey sexy mama, '),\n                           new SourceNode(null, null, null, 'want to kill all humans?')]);\n    node.replaceRight(/kill all humans/, 'watch Futurama');\n    assert.equal(node.toString(), 'hey sexy mama, want to watch Futurama?');\n  };\n\n  exports['test .toStringWithSourceMap()'] = function (assert, util) {\n    var node = new SourceNode(null, null, null,\n                              ['(function () {\\n',\n                               '  ',\n                                 new SourceNode(1, 0, 'a.js', 'someCall', 'originalCall'),\n                                 new SourceNode(1, 8, 'a.js', '()'),\n                                 ';\\n',\n                               '  ', new SourceNode(2, 0, 'b.js', ['if (foo) bar()']), ';\\n',\n                               '}());']);\n    var map = node.toStringWithSourceMap({\n      file: 'foo.js'\n    }).map;\n\n    assert.ok(map instanceof SourceMapGenerator, 'map instanceof SourceMapGenerator');\n    map = new SourceMapConsumer(map.toString());\n\n    var actual;\n\n    actual = map.originalPositionFor({\n      line: 1,\n      column: 4\n    });\n    assert.equal(actual.source, null);\n    assert.equal(actual.line, null);\n    assert.equal(actual.column, null);\n\n    actual = map.originalPositionFor({\n      line: 2,\n      column: 2\n    });\n    assert.equal(actual.source, 'a.js');\n    assert.equal(actual.line, 1);\n    assert.equal(actual.column, 0);\n    assert.equal(actual.name, 'originalCall');\n\n    actual = map.originalPositionFor({\n      line: 3,\n      column: 2\n    });\n    assert.equal(actual.source, 'b.js');\n    assert.equal(actual.line, 2);\n    assert.equal(actual.column, 0);\n\n    actual = map.originalPositionFor({\n      line: 3,\n      column: 16\n    });\n    assert.equal(actual.source, null);\n    assert.equal(actual.line, null);\n    assert.equal(actual.column, null);\n\n    actual = map.originalPositionFor({\n      line: 4,\n      column: 2\n    });\n    assert.equal(actual.source, null);\n    assert.equal(actual.line, null);\n    assert.equal(actual.column, null);\n  };\n\n  exports['test .fromStringWithSourceMap()'] = function (assert, util) {\n    var node = SourceNode.fromStringWithSourceMap(\n                              util.testGeneratedCode,\n                              new SourceMapConsumer(util.testMap));\n\n    var result = node.toStringWithSourceMap({\n      file: 'min.js'\n    });\n    var map = result.map;\n    var code = result.code;\n\n    assert.equal(code, util.testGeneratedCode);\n    assert.ok(map instanceof SourceMapGenerator, 'map instanceof SourceMapGenerator');\n    map = map.toJSON();\n    assert.equal(map.version, util.testMap.version);\n    assert.equal(map.file, util.testMap.file);\n    assert.equal(map.mappings, util.testMap.mappings);\n  };\n\n  exports['test .fromStringWithSourceMap() empty map'] = function (assert, util) {\n    var node = SourceNode.fromStringWithSourceMap(\n                              util.testGeneratedCode,\n                              new SourceMapConsumer(util.emptyMap));\n    var result = node.toStringWithSourceMap({\n      file: 'min.js'\n    });\n    var map = result.map;\n    var code = result.code;\n\n    assert.equal(code, util.testGeneratedCode);\n    assert.ok(map instanceof SourceMapGenerator, 'map instanceof SourceMapGenerator');\n    map = map.toJSON();\n    assert.equal(map.version, util.emptyMap.version);\n    assert.equal(map.file, util.emptyMap.file);\n    assert.equal(map.mappings.length, util.emptyMap.mappings.length);\n    assert.equal(map.mappings, util.emptyMap.mappings);\n  };\n\n  exports['test .fromStringWithSourceMap() complex version'] = function (assert, util) {\n    var input = new SourceNode(null, null, null, [\n      \"(function() {\\n\",\n        \"  var Test = {};\\n\",\n        \"  \", new SourceNode(1, 0, \"a.js\", \"Test.A = { value: 1234 };\\n\"),\n        \"  \", new SourceNode(2, 0, \"a.js\", \"Test.A.x = 'xyz';\"), \"\\n\",\n        \"}());\\n\",\n        \"/* Generated Source */\"]);\n    input = input.toStringWithSourceMap({\n      file: 'foo.js'\n    });\n\n    var node = SourceNode.fromStringWithSourceMap(\n                              input.code,\n                              new SourceMapConsumer(input.map.toString()));\n\n    var result = node.toStringWithSourceMap({\n      file: 'foo.js'\n    });\n    var map = result.map;\n    var code = result.code;\n\n    assert.equal(code, input.code);\n    assert.ok(map instanceof SourceMapGenerator, 'map instanceof SourceMapGenerator');\n    map = map.toJSON();\n    var inputMap = input.map.toJSON();\n    util.assertEqualMaps(assert, map, inputMap);\n  };\n\n  exports['test .fromStringWithSourceMap() merging duplicate mappings'] = function (assert, util) {\n    var input = new SourceNode(null, null, null, [\n      new SourceNode(1, 0, \"a.js\", \"(function\"),\n      new SourceNode(1, 0, \"a.js\", \"() {\\n\"),\n      \"  \",\n      new SourceNode(1, 0, \"a.js\", \"var Test = \"),\n      new SourceNode(1, 0, \"b.js\", \"{};\\n\"),\n      new SourceNode(2, 0, \"b.js\", \"Test\"),\n      new SourceNode(2, 0, \"b.js\", \".A\", \"A\"),\n      new SourceNode(2, 20, \"b.js\", \" = { value: 1234 };\\n\", \"A\"),\n      \"}());\\n\",\n      \"/* Generated Source */\"\n    ]);\n    input = input.toStringWithSourceMap({\n      file: 'foo.js'\n    });\n\n    var correctMap = new SourceMapGenerator({\n      file: 'foo.js'\n    });\n    correctMap.addMapping({\n      generated: { line: 1, column: 0 },\n      source: 'a.js',\n      original: { line: 1, column: 0 }\n    });\n    correctMap.addMapping({\n      generated: { line: 2, column: 0 }\n    });\n    correctMap.addMapping({\n      generated: { line: 2, column: 2 },\n      source: 'a.js',\n      original: { line: 1, column: 0 }\n    });\n    correctMap.addMapping({\n      generated: { line: 2, column: 13 },\n      source: 'b.js',\n      original: { line: 1, column: 0 }\n    });\n    correctMap.addMapping({\n      generated: { line: 3, column: 0 },\n      source: 'b.js',\n      original: { line: 2, column: 0 }\n    });\n    correctMap.addMapping({\n      generated: { line: 3, column: 4 },\n      source: 'b.js',\n      name: 'A',\n      original: { line: 2, column: 0 }\n    });\n    correctMap.addMapping({\n      generated: { line: 3, column: 6 },\n      source: 'b.js',\n      name: 'A',\n      original: { line: 2, column: 20 }\n    });\n    correctMap.addMapping({\n      generated: { line: 4, column: 0 }\n    });\n\n    var inputMap = input.map.toJSON();\n    correctMap = correctMap.toJSON();\n    util.assertEqualMaps(assert, correctMap, inputMap);\n  };\n\n  exports['test setSourceContent with toStringWithSourceMap'] = function (assert, util) {\n    var aNode = new SourceNode(1, 1, 'a.js', 'a');\n    aNode.setSourceContent('a.js', 'someContent');\n    var node = new SourceNode(null, null, null,\n                              ['(function () {\\n',\n                               '  ', aNode,\n                               '  ', new SourceNode(1, 1, 'b.js', 'b'),\n                               '}());']);\n    node.setSourceContent('b.js', 'otherContent');\n    var map = node.toStringWithSourceMap({\n      file: 'foo.js'\n    }).map;\n\n    assert.ok(map instanceof SourceMapGenerator, 'map instanceof SourceMapGenerator');\n    map = new SourceMapConsumer(map.toString());\n\n    assert.equal(map.sources.length, 2);\n    assert.equal(map.sources[0], 'a.js');\n    assert.equal(map.sources[1], 'b.js');\n    assert.equal(map.sourcesContent.length, 2);\n    assert.equal(map.sourcesContent[0], 'someContent');\n    assert.equal(map.sourcesContent[1], 'otherContent');\n  };\n\n  exports['test walkSourceContents'] = function (assert, util) {\n    var aNode = new SourceNode(1, 1, 'a.js', 'a');\n    aNode.setSourceContent('a.js', 'someContent');\n    var node = new SourceNode(null, null, null,\n                              ['(function () {\\n',\n                               '  ', aNode,\n                               '  ', new SourceNode(1, 1, 'b.js', 'b'),\n                               '}());']);\n    node.setSourceContent('b.js', 'otherContent');\n    var results = [];\n    node.walkSourceContents(function (sourceFile, sourceContent) {\n      results.push([sourceFile, sourceContent]);\n    });\n    assert.equal(results.length, 2);\n    assert.equal(results[0][0], 'a.js');\n    assert.equal(results[0][1], 'someContent');\n    assert.equal(results[1][0], 'b.js');\n    assert.equal(results[1][1], 'otherContent');\n  };\n});\n"]}