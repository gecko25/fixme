{"version":3,"sources":["source-map-consumer.js"],"names":[],"mappings":"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","file":"source-map-consumer-compiled.js","sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  var util = require('./util');\n  var binarySearch = require('./binary-search');\n  var ArraySet = require('./array-set').ArraySet;\n  var base64VLQ = require('./base64-vlq');\n\n  /**\n   * A SourceMapConsumer instance represents a parsed source map which we can\n   * query for information about the original file positions by giving it a file\n   * position in the generated source.\n   *\n   * The only parameter is the raw source map (either as a JSON string, or\n   * already parsed to an object). According to the spec, source maps have the\n   * following attributes:\n   *\n   *   - version: Which version of the source map spec this map is following.\n   *   - sources: An array of URLs to the original source files.\n   *   - names: An array of identifiers which can be referrenced by individual mappings.\n   *   - sourceRoot: Optional. The URL root from which all sources are relative.\n   *   - sourcesContent: Optional. An array of contents of the original source files.\n   *   - mappings: A string of base64 VLQs which contain the actual mappings.\n   *   - file: The generated file this source map is associated with.\n   *\n   * Here is an example source map, taken from the source map spec[0]:\n   *\n   *     {\n   *       version : 3,\n   *       file: \"out.js\",\n   *       sourceRoot : \"\",\n   *       sources: [\"foo.js\", \"bar.js\"],\n   *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n   *       mappings: \"AA,AB;;ABCDE;\"\n   *     }\n   *\n   * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n   */\n  function SourceMapConsumer(aSourceMap) {\n    var sourceMap = aSourceMap;\n    if (typeof aSourceMap === 'string') {\n      sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n    }\n\n    var version = util.getArg(sourceMap, 'version');\n    var sources = util.getArg(sourceMap, 'sources');\n    // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n    // requires the array) to play nice here.\n    var names = util.getArg(sourceMap, 'names', []);\n    var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n    var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n    var mappings = util.getArg(sourceMap, 'mappings');\n    var file = util.getArg(sourceMap, 'file', null);\n\n    // Once again, Sass deviates from the spec and supplies the version as a\n    // string rather than a number, so we use loose equality checking here.\n    if (version != this._version) {\n      throw new Error('Unsupported version: ' + version);\n    }\n\n    // Pass `true` below to allow duplicate names and sources. While source maps\n    // are intended to be compressed and deduplicated, the TypeScript compiler\n    // sometimes generates source maps with duplicates in them. See Github issue\n    // #72 and bugzil.la/889492.\n    this._names = ArraySet.fromArray(names, true);\n    this._sources = ArraySet.fromArray(sources, true);\n\n    this.sourceRoot = sourceRoot;\n    this.sourcesContent = sourcesContent;\n    this._mappings = mappings;\n    this.file = file;\n  }\n\n  /**\n   * Create a SourceMapConsumer from a SourceMapGenerator.\n   *\n   * @param SourceMapGenerator aSourceMap\n   *        The source map that will be consumed.\n   * @returns SourceMapConsumer\n   */\n  SourceMapConsumer.fromSourceMap =\n    function SourceMapConsumer_fromSourceMap(aSourceMap) {\n      var smc = Object.create(SourceMapConsumer.prototype);\n\n      smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n      smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n      smc.sourceRoot = aSourceMap._sourceRoot;\n      smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                              smc.sourceRoot);\n      smc.file = aSourceMap._file;\n\n      smc.__generatedMappings = aSourceMap._mappings.slice()\n        .sort(util.compareByGeneratedPositions);\n      smc.__originalMappings = aSourceMap._mappings.slice()\n        .sort(util.compareByOriginalPositions);\n\n      return smc;\n    };\n\n  /**\n   * The version of the source mapping spec that we are consuming.\n   */\n  SourceMapConsumer.prototype._version = 3;\n\n  /**\n   * The list of original sources.\n   */\n  Object.defineProperty(SourceMapConsumer.prototype, 'sources', {\n    get: function () {\n      return this._sources.toArray().map(function (s) {\n        return this.sourceRoot ? util.join(this.sourceRoot, s) : s;\n      }, this);\n    }\n  });\n\n  // `__generatedMappings` and `__originalMappings` are arrays that hold the\n  // parsed mapping coordinates from the source map's \"mappings\" attribute. They\n  // are lazily instantiated, accessed via the `_generatedMappings` and\n  // `_originalMappings` getters respectively, and we only parse the mappings\n  // and create these arrays once queried for a source location. We jump through\n  // these hoops because there can be many thousands of mappings, and parsing\n  // them is expensive, so we only want to do it if we must.\n  //\n  // Each object in the arrays is of the form:\n  //\n  //     {\n  //       generatedLine: The line number in the generated code,\n  //       generatedColumn: The column number in the generated code,\n  //       source: The path to the original source file that generated this\n  //               chunk of code,\n  //       originalLine: The line number in the original source that\n  //                     corresponds to this chunk of generated code,\n  //       originalColumn: The column number in the original source that\n  //                       corresponds to this chunk of generated code,\n  //       name: The name of the original symbol which generated this chunk of\n  //             code.\n  //     }\n  //\n  // All properties except for `generatedLine` and `generatedColumn` can be\n  // `null`.\n  //\n  // `_generatedMappings` is ordered by the generated positions.\n  //\n  // `_originalMappings` is ordered by the original positions.\n\n  SourceMapConsumer.prototype.__generatedMappings = null;\n  Object.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n    get: function () {\n      if (!this.__generatedMappings) {\n        this.__generatedMappings = [];\n        this.__originalMappings = [];\n        this._parseMappings(this._mappings, this.sourceRoot);\n      }\n\n      return this.__generatedMappings;\n    }\n  });\n\n  SourceMapConsumer.prototype.__originalMappings = null;\n  Object.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n    get: function () {\n      if (!this.__originalMappings) {\n        this.__generatedMappings = [];\n        this.__originalMappings = [];\n        this._parseMappings(this._mappings, this.sourceRoot);\n      }\n\n      return this.__originalMappings;\n    }\n  });\n\n  /**\n   * Parse the mappings in a string in to a data structure which we can easily\n   * query (the ordered arrays in the `this.__generatedMappings` and\n   * `this.__originalMappings` properties).\n   */\n  SourceMapConsumer.prototype._parseMappings =\n    function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n      var generatedLine = 1;\n      var previousGeneratedColumn = 0;\n      var previousOriginalLine = 0;\n      var previousOriginalColumn = 0;\n      var previousSource = 0;\n      var previousName = 0;\n      var mappingSeparator = /^[,;]/;\n      var str = aStr;\n      var mapping;\n      var temp;\n\n      while (str.length > 0) {\n        if (str.charAt(0) === ';') {\n          generatedLine++;\n          str = str.slice(1);\n          previousGeneratedColumn = 0;\n        }\n        else if (str.charAt(0) === ',') {\n          str = str.slice(1);\n        }\n        else {\n          mapping = {};\n          mapping.generatedLine = generatedLine;\n\n          // Generated column.\n          temp = base64VLQ.decode(str);\n          mapping.generatedColumn = previousGeneratedColumn + temp.value;\n          previousGeneratedColumn = mapping.generatedColumn;\n          str = temp.rest;\n\n          if (str.length > 0 && !mappingSeparator.test(str.charAt(0))) {\n            // Original source.\n            temp = base64VLQ.decode(str);\n            mapping.source = this._sources.at(previousSource + temp.value);\n            previousSource += temp.value;\n            str = temp.rest;\n            if (str.length === 0 || mappingSeparator.test(str.charAt(0))) {\n              throw new Error('Found a source, but no line and column');\n            }\n\n            // Original line.\n            temp = base64VLQ.decode(str);\n            mapping.originalLine = previousOriginalLine + temp.value;\n            previousOriginalLine = mapping.originalLine;\n            // Lines are stored 0-based\n            mapping.originalLine += 1;\n            str = temp.rest;\n            if (str.length === 0 || mappingSeparator.test(str.charAt(0))) {\n              throw new Error('Found a source and line, but no column');\n            }\n\n            // Original column.\n            temp = base64VLQ.decode(str);\n            mapping.originalColumn = previousOriginalColumn + temp.value;\n            previousOriginalColumn = mapping.originalColumn;\n            str = temp.rest;\n\n            if (str.length > 0 && !mappingSeparator.test(str.charAt(0))) {\n              // Original name.\n              temp = base64VLQ.decode(str);\n              mapping.name = this._names.at(previousName + temp.value);\n              previousName += temp.value;\n              str = temp.rest;\n            }\n          }\n\n          this.__generatedMappings.push(mapping);\n          if (typeof mapping.originalLine === 'number') {\n            this.__originalMappings.push(mapping);\n          }\n        }\n      }\n\n      this.__generatedMappings.sort(util.compareByGeneratedPositions);\n      this.__originalMappings.sort(util.compareByOriginalPositions);\n    };\n\n  /**\n   * Find the mapping that best matches the hypothetical \"needle\" mapping that\n   * we are searching for in the given \"haystack\" of mappings.\n   */\n  SourceMapConsumer.prototype._findMapping =\n    function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                           aColumnName, aComparator) {\n      // To return the position we are searching for, we must first find the\n      // mapping for the given position and then return the opposite position it\n      // points to. Because the mappings are sorted, we can use binary search to\n      // find the best mapping.\n\n      if (aNeedle[aLineName] <= 0) {\n        throw new TypeError('Line must be greater than or equal to 1, got '\n                            + aNeedle[aLineName]);\n      }\n      if (aNeedle[aColumnName] < 0) {\n        throw new TypeError('Column must be greater than or equal to 0, got '\n                            + aNeedle[aColumnName]);\n      }\n\n      return binarySearch.search(aNeedle, aMappings, aComparator);\n    };\n\n  /**\n   * Returns the original source, line, and column information for the generated\n   * source's line and column positions provided. The only argument is an object\n   * with the following properties:\n   *\n   *   - line: The line number in the generated source.\n   *   - column: The column number in the generated source.\n   *\n   * and an object is returned with the following properties:\n   *\n   *   - source: The original source file, or null.\n   *   - line: The line number in the original source, or null.\n   *   - column: The column number in the original source, or null.\n   *   - name: The original identifier, or null.\n   */\n  SourceMapConsumer.prototype.originalPositionFor =\n    function SourceMapConsumer_originalPositionFor(aArgs) {\n      var needle = {\n        generatedLine: util.getArg(aArgs, 'line'),\n        generatedColumn: util.getArg(aArgs, 'column')\n      };\n\n      var mapping = this._findMapping(needle,\n                                      this._generatedMappings,\n                                      \"generatedLine\",\n                                      \"generatedColumn\",\n                                      util.compareByGeneratedPositions);\n\n      if (mapping) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source && this.sourceRoot) {\n          source = util.join(this.sourceRoot, source);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: util.getArg(mapping, 'name', null)\n        };\n      }\n\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    };\n\n  /**\n   * Returns the original source content. The only argument is the url of the\n   * original source file. Returns null if no original source content is\n   * availible.\n   */\n  SourceMapConsumer.prototype.sourceContentFor =\n    function SourceMapConsumer_sourceContentFor(aSource) {\n      if (!this.sourcesContent) {\n        return null;\n      }\n\n      if (this.sourceRoot) {\n        aSource = util.relative(this.sourceRoot, aSource);\n      }\n\n      if (this._sources.has(aSource)) {\n        return this.sourcesContent[this._sources.indexOf(aSource)];\n      }\n\n      var url;\n      if (this.sourceRoot\n          && (url = util.urlParse(this.sourceRoot))) {\n        // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n        // many users. We can help them out when they expect file:// URIs to\n        // behave like it would if they were running a local HTTP server. See\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n        var fileUriAbsPath = aSource.replace(/^file:\\/\\//, \"\");\n        if (url.scheme == \"file\"\n            && this._sources.has(fileUriAbsPath)) {\n          return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n        }\n\n        if ((!url.path || url.path == \"/\")\n            && this._sources.has(\"/\" + aSource)) {\n          return this.sourcesContent[this._sources.indexOf(\"/\" + aSource)];\n        }\n      }\n\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    };\n\n  /**\n   * Returns the generated line and column information for the original source,\n   * line, and column positions provided. The only argument is an object with\n   * the following properties:\n   *\n   *   - source: The filename of the original source.\n   *   - line: The line number in the original source.\n   *   - column: The column number in the original source.\n   *\n   * and an object is returned with the following properties:\n   *\n   *   - line: The line number in the generated source, or null.\n   *   - column: The column number in the generated source, or null.\n   */\n  SourceMapConsumer.prototype.generatedPositionFor =\n    function SourceMapConsumer_generatedPositionFor(aArgs) {\n      var needle = {\n        source: util.getArg(aArgs, 'source'),\n        originalLine: util.getArg(aArgs, 'line'),\n        originalColumn: util.getArg(aArgs, 'column')\n      };\n\n      if (this.sourceRoot) {\n        needle.source = util.relative(this.sourceRoot, needle.source);\n      }\n\n      var mapping = this._findMapping(needle,\n                                      this._originalMappings,\n                                      \"originalLine\",\n                                      \"originalColumn\",\n                                      util.compareByOriginalPositions);\n\n      if (mapping) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null)\n        };\n      }\n\n      return {\n        line: null,\n        column: null\n      };\n    };\n\n  SourceMapConsumer.GENERATED_ORDER = 1;\n  SourceMapConsumer.ORIGINAL_ORDER = 2;\n\n  /**\n   * Iterate over each mapping between an original source/line/column and a\n   * generated line/column in this source map.\n   *\n   * @param Function aCallback\n   *        The function that is called with each mapping.\n   * @param Object aContext\n   *        Optional. If specified, this object will be the value of `this` every\n   *        time that `aCallback` is called.\n   * @param aOrder\n   *        Either `SourceMapConsumer.GENERATED_ORDER` or\n   *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n   *        iterate over the mappings sorted by the generated file's line/column\n   *        order or the original's source/line/column order, respectively. Defaults to\n   *        `SourceMapConsumer.GENERATED_ORDER`.\n   */\n  SourceMapConsumer.prototype.eachMapping =\n    function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n      var context = aContext || null;\n      var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n      var mappings;\n      switch (order) {\n      case SourceMapConsumer.GENERATED_ORDER:\n        mappings = this._generatedMappings;\n        break;\n      case SourceMapConsumer.ORIGINAL_ORDER:\n        mappings = this._originalMappings;\n        break;\n      default:\n        throw new Error(\"Unknown order of iteration.\");\n      }\n\n      var sourceRoot = this.sourceRoot;\n      mappings.map(function (mapping) {\n        var source = mapping.source;\n        if (source && sourceRoot) {\n          source = util.join(sourceRoot, source);\n        }\n        return {\n          source: source,\n          generatedLine: mapping.generatedLine,\n          generatedColumn: mapping.generatedColumn,\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: mapping.name\n        };\n      }).forEach(aCallback, context);\n    };\n\n  exports.SourceMapConsumer = SourceMapConsumer;\n\n});\n"]}