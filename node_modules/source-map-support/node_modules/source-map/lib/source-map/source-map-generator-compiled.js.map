{"version":3,"sources":["source-map-generator.js"],"names":[],"mappings":"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","file":"source-map-generator-compiled.js","sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  var base64VLQ = require('./base64-vlq');\n  var util = require('./util');\n  var ArraySet = require('./array-set').ArraySet;\n\n  /**\n   * An instance of the SourceMapGenerator represents a source map which is\n   * being built incrementally. To create a new one, you must pass an object\n   * with the following properties:\n   *\n   *   - file: The filename of the generated source.\n   *   - sourceRoot: An optional root for all URLs in this source map.\n   */\n  function SourceMapGenerator(aArgs) {\n    this._file = util.getArg(aArgs, 'file');\n    this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n    this._sources = new ArraySet();\n    this._names = new ArraySet();\n    this._mappings = [];\n    this._sourcesContents = null;\n  }\n\n  SourceMapGenerator.prototype._version = 3;\n\n  /**\n   * Creates a new SourceMapGenerator based on a SourceMapConsumer\n   *\n   * @param aSourceMapConsumer The SourceMap.\n   */\n  SourceMapGenerator.fromSourceMap =\n    function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n      var sourceRoot = aSourceMapConsumer.sourceRoot;\n      var generator = new SourceMapGenerator({\n        file: aSourceMapConsumer.file,\n        sourceRoot: sourceRoot\n      });\n      aSourceMapConsumer.eachMapping(function (mapping) {\n        var newMapping = {\n          generated: {\n            line: mapping.generatedLine,\n            column: mapping.generatedColumn\n          }\n        };\n\n        if (mapping.source) {\n          newMapping.source = mapping.source;\n          if (sourceRoot) {\n            newMapping.source = util.relative(sourceRoot, newMapping.source);\n          }\n\n          newMapping.original = {\n            line: mapping.originalLine,\n            column: mapping.originalColumn\n          };\n\n          if (mapping.name) {\n            newMapping.name = mapping.name;\n          }\n        }\n\n        generator.addMapping(newMapping);\n      });\n      aSourceMapConsumer.sources.forEach(function (sourceFile) {\n        var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n        if (content) {\n          generator.setSourceContent(sourceFile, content);\n        }\n      });\n      return generator;\n    };\n\n  /**\n   * Add a single mapping from original source line and column to the generated\n   * source's line and column for this source map being created. The mapping\n   * object should have the following properties:\n   *\n   *   - generated: An object with the generated line and column positions.\n   *   - original: An object with the original line and column positions.\n   *   - source: The original source file (relative to the sourceRoot).\n   *   - name: An optional original token name for this mapping.\n   */\n  SourceMapGenerator.prototype.addMapping =\n    function SourceMapGenerator_addMapping(aArgs) {\n      var generated = util.getArg(aArgs, 'generated');\n      var original = util.getArg(aArgs, 'original', null);\n      var source = util.getArg(aArgs, 'source', null);\n      var name = util.getArg(aArgs, 'name', null);\n\n      this._validateMapping(generated, original, source, name);\n\n      if (source && !this._sources.has(source)) {\n        this._sources.add(source);\n      }\n\n      if (name && !this._names.has(name)) {\n        this._names.add(name);\n      }\n\n      this._mappings.push({\n        generatedLine: generated.line,\n        generatedColumn: generated.column,\n        originalLine: original != null && original.line,\n        originalColumn: original != null && original.column,\n        source: source,\n        name: name\n      });\n    };\n\n  /**\n   * Set the source content for a source file.\n   */\n  SourceMapGenerator.prototype.setSourceContent =\n    function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n      var source = aSourceFile;\n      if (this._sourceRoot) {\n        source = util.relative(this._sourceRoot, source);\n      }\n\n      if (aSourceContent !== null) {\n        // Add the source content to the _sourcesContents map.\n        // Create a new _sourcesContents map if the property is null.\n        if (!this._sourcesContents) {\n          this._sourcesContents = {};\n        }\n        this._sourcesContents[util.toSetString(source)] = aSourceContent;\n      } else {\n        // Remove the source file from the _sourcesContents map.\n        // If the _sourcesContents map is empty, set the property to null.\n        delete this._sourcesContents[util.toSetString(source)];\n        if (Object.keys(this._sourcesContents).length === 0) {\n          this._sourcesContents = null;\n        }\n      }\n    };\n\n  /**\n   * Applies the mappings of a sub-source-map for a specific source file to the\n   * source map being generated. Each mapping to the supplied source file is\n   * rewritten using the supplied source map. Note: The resolution for the\n   * resulting mappings is the minimium of this map and the supplied map.\n   *\n   * @param aSourceMapConsumer The source map to be applied.\n   * @param aSourceFile Optional. The filename of the source file.\n   *        If omitted, SourceMapConsumer's file property will be used.\n   */\n  SourceMapGenerator.prototype.applySourceMap =\n    function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile) {\n      // If aSourceFile is omitted, we will use the file property of the SourceMap\n      if (!aSourceFile) {\n        aSourceFile = aSourceMapConsumer.file;\n      }\n      var sourceRoot = this._sourceRoot;\n      // Make \"aSourceFile\" relative if an absolute Url is passed.\n      if (sourceRoot) {\n        aSourceFile = util.relative(sourceRoot, aSourceFile);\n      }\n      // Applying the SourceMap can add and remove items from the sources and\n      // the names array.\n      var newSources = new ArraySet();\n      var newNames = new ArraySet();\n\n      // Find mappings for the \"aSourceFile\"\n      this._mappings.forEach(function (mapping) {\n        if (mapping.source === aSourceFile && mapping.originalLine) {\n          // Check if it can be mapped by the source map, then update the mapping.\n          var original = aSourceMapConsumer.originalPositionFor({\n            line: mapping.originalLine,\n            column: mapping.originalColumn\n          });\n          if (original.source !== null) {\n            // Copy mapping\n            if (sourceRoot) {\n              mapping.source = util.relative(sourceRoot, original.source);\n            } else {\n              mapping.source = original.source;\n            }\n            mapping.originalLine = original.line;\n            mapping.originalColumn = original.column;\n            if (original.name !== null && mapping.name !== null) {\n              // Only use the identifier name if it's an identifier\n              // in both SourceMaps\n              mapping.name = original.name;\n            }\n          }\n        }\n\n        var source = mapping.source;\n        if (source && !newSources.has(source)) {\n          newSources.add(source);\n        }\n\n        var name = mapping.name;\n        if (name && !newNames.has(name)) {\n          newNames.add(name);\n        }\n\n      }, this);\n      this._sources = newSources;\n      this._names = newNames;\n\n      // Copy sourcesContents of applied map.\n      aSourceMapConsumer.sources.forEach(function (sourceFile) {\n        var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n        if (content) {\n          if (sourceRoot) {\n            sourceFile = util.relative(sourceRoot, sourceFile);\n          }\n          this.setSourceContent(sourceFile, content);\n        }\n      }, this);\n    };\n\n  /**\n   * A mapping can have one of the three levels of data:\n   *\n   *   1. Just the generated position.\n   *   2. The Generated position, original position, and original source.\n   *   3. Generated and original position, original source, as well as a name\n   *      token.\n   *\n   * To maintain consistency, we validate that any new mapping being added falls\n   * in to one of these categories.\n   */\n  SourceMapGenerator.prototype._validateMapping =\n    function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                                aName) {\n      if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n          && aGenerated.line > 0 && aGenerated.column >= 0\n          && !aOriginal && !aSource && !aName) {\n        // Case 1.\n        return;\n      }\n      else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n               && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n               && aGenerated.line > 0 && aGenerated.column >= 0\n               && aOriginal.line > 0 && aOriginal.column >= 0\n               && aSource) {\n        // Cases 2 and 3.\n        return;\n      }\n      else {\n        throw new Error('Invalid mapping: ' + JSON.stringify({\n          generated: aGenerated,\n          source: aSource,\n          original: aOriginal,\n          name: aName\n        }));\n      }\n    };\n\n  /**\n   * Serialize the accumulated mappings in to the stream of base 64 VLQs\n   * specified by the source map format.\n   */\n  SourceMapGenerator.prototype._serializeMappings =\n    function SourceMapGenerator_serializeMappings() {\n      var previousGeneratedColumn = 0;\n      var previousGeneratedLine = 1;\n      var previousOriginalColumn = 0;\n      var previousOriginalLine = 0;\n      var previousName = 0;\n      var previousSource = 0;\n      var result = '';\n      var mapping;\n\n      // The mappings must be guaranteed to be in sorted order before we start\n      // serializing them or else the generated line numbers (which are defined\n      // via the ';' separators) will be all messed up. Note: it might be more\n      // performant to maintain the sorting as we insert them, rather than as we\n      // serialize them, but the big O is the same either way.\n      this._mappings.sort(util.compareByGeneratedPositions);\n\n      for (var i = 0, len = this._mappings.length; i < len; i++) {\n        mapping = this._mappings[i];\n\n        if (mapping.generatedLine !== previousGeneratedLine) {\n          previousGeneratedColumn = 0;\n          while (mapping.generatedLine !== previousGeneratedLine) {\n            result += ';';\n            previousGeneratedLine++;\n          }\n        }\n        else {\n          if (i > 0) {\n            if (!util.compareByGeneratedPositions(mapping, this._mappings[i - 1])) {\n              continue;\n            }\n            result += ',';\n          }\n        }\n\n        result += base64VLQ.encode(mapping.generatedColumn\n                                   - previousGeneratedColumn);\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (mapping.source) {\n          result += base64VLQ.encode(this._sources.indexOf(mapping.source)\n                                     - previousSource);\n          previousSource = this._sources.indexOf(mapping.source);\n\n          // lines are stored 0-based in SourceMap spec version 3\n          result += base64VLQ.encode(mapping.originalLine - 1\n                                     - previousOriginalLine);\n          previousOriginalLine = mapping.originalLine - 1;\n\n          result += base64VLQ.encode(mapping.originalColumn\n                                     - previousOriginalColumn);\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (mapping.name) {\n            result += base64VLQ.encode(this._names.indexOf(mapping.name)\n                                       - previousName);\n            previousName = this._names.indexOf(mapping.name);\n          }\n        }\n      }\n\n      return result;\n    };\n\n  SourceMapGenerator.prototype._generateSourcesContent =\n    function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n      return aSources.map(function (source) {\n        if (!this._sourcesContents) {\n          return null;\n        }\n        if (aSourceRoot) {\n          source = util.relative(aSourceRoot, source);\n        }\n        var key = util.toSetString(source);\n        return Object.prototype.hasOwnProperty.call(this._sourcesContents,\n                                                    key)\n          ? this._sourcesContents[key]\n          : null;\n      }, this);\n    };\n\n  /**\n   * Externalize the source map.\n   */\n  SourceMapGenerator.prototype.toJSON =\n    function SourceMapGenerator_toJSON() {\n      var map = {\n        version: this._version,\n        file: this._file,\n        sources: this._sources.toArray(),\n        names: this._names.toArray(),\n        mappings: this._serializeMappings()\n      };\n      if (this._sourceRoot) {\n        map.sourceRoot = this._sourceRoot;\n      }\n      if (this._sourcesContents) {\n        map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n      }\n\n      return map;\n    };\n\n  /**\n   * Render the source map being generated to a string.\n   */\n  SourceMapGenerator.prototype.toString =\n    function SourceMapGenerator_toString() {\n      return JSON.stringify(this);\n    };\n\n  exports.SourceMapGenerator = SourceMapGenerator;\n\n});\n"]}