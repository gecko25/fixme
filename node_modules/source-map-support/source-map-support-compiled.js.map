{"version":3,"sources":["source-map-support.js"],"names":[],"mappings":"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","file":"source-map-support-compiled.js","sourcesContent":["var SourceMapConsumer = require('source-map').SourceMapConsumer;\nvar path = require('path');\nvar fs = require('fs');\n\n// Only install once if called multiple times\nvar alreadyInstalled = false;\n\n// If true, the caches are reset before a stack trace formatting operation\nvar emptyCacheBetweenOperations = false;\n\n// Maps a file path to a string containing the file contents\nvar fileContentsCache = {};\n\n// Maps a file path to a source map for that file\nvar sourceMapCache = {};\n\nfunction isInBrowser() {\n  return ((typeof window !== 'undefined') && (typeof XMLHttpRequest === 'function'));\n}\n\nfunction retrieveFile(path) {\n  if (path in fileContentsCache) {\n    return fileContentsCache[path];\n  }\n\n  try {\n    // Use SJAX if we are in the browser\n    if (isInBrowser()) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', path, false);\n      xhr.send(null);\n      var contents = xhr.readyState === 4 ? xhr.responseText : null;\n    }\n\n    // Otherwise, use the filesystem\n    else {\n      var contents = fs.readFileSync(path, 'utf8');\n    }\n  } catch (e) {\n    var contents = null;\n  }\n\n  return fileContentsCache[path] = contents;\n}\n\n// Support URLs relative to a directory, but be careful about a protocol prefix\n// in case we are in the browser (i.e. directories may start with \"http://\")\nfunction supportRelativeURL(file, url) {\n  if (!file) return url;\n  var dir = path.dirname(file);\n  var match = /^\\w+:\\/\\/[^\\/]*/.exec(dir);\n  var protocol = match ? match[0] : '';\n  return protocol + path.resolve(dir.slice(protocol.length), url);\n}\n\nfunction retrieveSourceMapURL(source) {\n  var fileData;\n\n  if (isInBrowser()) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', source, false);\n    xhr.send(null);\n    fileData = xhr.readyState === 4 ? xhr.responseText : null;\n\n    // Support providing a sourceMappingURL via the SourceMap header\n    var sourceMapHeader = xhr.getResponseHeader(\"SourceMap\") ||\n                          xhr.getResponseHeader(\"X-SourceMap\");\n    if (sourceMapHeader) {\n      return sourceMapHeader;\n    }\n  }\n\n  // Get the URL of the source map\n  fileData = retrieveFile(source);\n  var match = /\\/\\/[#@]\\s*sourceMappingURL=(.*)\\s*$/m.exec(fileData);\n  if (!match) return null;\n  return match[1];\n};\n\n// Can be overridden by the retrieveSourceMap option to install. Takes a\n// generated source filename; returns a {map, optional url} object, or null if\n// there is no source map.  The map field may be either a string or the parsed\n// JSON object (ie, it must be a valid argument to the SourceMapConsumer\n// constructor).\nfunction retrieveSourceMap(source) {\n  var sourceMappingURL = retrieveSourceMapURL(source);\n  if (!sourceMappingURL) return null;\n\n  // Read the contents of the source map\n  var sourceMapData;\n  var dataUrlPrefix = \"data:application/json;base64,\";\n  if (sourceMappingURL.slice(0, dataUrlPrefix.length).toLowerCase() == dataUrlPrefix) {\n    // Support source map URL as a data url\n    sourceMapData = new Buffer(sourceMappingURL.slice(dataUrlPrefix.length), \"base64\").toString();\n    sourceMappingURL = null;\n  } else {\n    // Support source map URLs relative to the source URL\n    sourceMappingURL = supportRelativeURL(source, sourceMappingURL);\n    sourceMapData = retrieveFile(sourceMappingURL, 'utf8');\n  }\n\n  if (!sourceMapData) {\n    return null;\n  }\n\n  return {\n    url: sourceMappingURL,\n    map: sourceMapData\n  };\n}\n\nfunction mapSourcePosition(position) {\n  var sourceMap = sourceMapCache[position.source];\n  if (!sourceMap) {\n    // Call the (overrideable) retrieveSourceMap function to get the source map.\n    var urlAndMap = retrieveSourceMap(position.source);\n    if (urlAndMap) {\n      sourceMap = sourceMapCache[position.source] = {\n        url: urlAndMap.url,\n        map: new SourceMapConsumer(urlAndMap.map)\n      };\n\n      // Load all sources stored inline with the source map into the file cache\n      // to pretend like they are already loaded. They may not exist on disk.\n      if (sourceMap.map.sourcesContent) {\n        sourceMap.map.sources.forEach(function(source, i) {\n          var contents = sourceMap.map.sourcesContent[i];\n          if (contents) {\n            var url = supportRelativeURL(sourceMap.url, source);\n            fileContentsCache[url] = contents;\n          }\n        });\n      }\n    } else {\n      sourceMap = sourceMapCache[position.source] = {\n        url: null,\n        map: null\n      };\n    }\n  }\n\n  // Resolve the source URL relative to the URL of the source map\n  if (sourceMap && sourceMap.map) {\n    var originalPosition = sourceMap.map.originalPositionFor(position);\n\n    // Only return the original position if a matching line was found. If no\n    // matching line is found then we return position instead, which will cause\n    // the stack trace to print the path and line for the compiled file. It is\n    // better to give a precise location in the compiled file than a vague\n    // location in the original file.\n    if (originalPosition.source !== null) {\n      originalPosition.source = supportRelativeURL(\n        sourceMap.url, originalPosition.source);\n      return originalPosition;\n    }\n  }\n\n  return position;\n}\n\n// Parses code generated by FormatEvalOrigin(), a function inside V8:\n// https://code.google.com/p/v8/source/browse/trunk/src/messages.js\nfunction mapEvalOrigin(origin) {\n  // Most eval() calls are in this format\n  var match = /^eval at ([^(]+) \\((.+):(\\d+):(\\d+)\\)$/.exec(origin);\n  if (match) {\n    var position = mapSourcePosition({\n      source: match[2],\n      line: match[3],\n      column: match[4] - 1\n    });\n    return 'eval at ' + match[1] + ' (' + position.source + ':' +\n      position.line + ':' + (position.column + 1) + ')';\n  }\n\n  // Parse nested eval() calls using recursion\n  match = /^eval at ([^(]+) \\((.+)\\)$/.exec(origin);\n  if (match) {\n    return 'eval at ' + match[1] + ' (' + mapEvalOrigin(match[2]) + ')';\n  }\n\n  // Make sure we still return useful information if we didn't find anything\n  return origin;\n}\n\n// This is copied almost verbatim from the V8 source code at\n// https://code.google.com/p/v8/source/browse/trunk/src/messages.js. The\n// implementation of wrapCallSite() used to just forward to the actual source\n// code of CallSite.prototype.toString but unfortunately a new release of V8\n// did something to the prototype chain and broke the shim. The only fix I\n// could find was copy/paste.\nfunction CallSiteToString() {\n  var fileName;\n  var fileLocation = \"\";\n  if (this.isNative()) {\n    fileLocation = \"native\";\n  } else {\n    fileName = this.getScriptNameOrSourceURL();\n    if (!fileName && this.isEval()) {\n      fileLocation = this.getEvalOrigin();\n      fileLocation += \", \";  // Expecting source position to follow.\n    }\n\n    if (fileName) {\n      fileLocation += fileName;\n    } else {\n      // Source code does not originate from a file and is not native, but we\n      // can still get the source position inside the source string, e.g. in\n      // an eval string.\n      fileLocation += \"<anonymous>\";\n    }\n    var lineNumber = this.getLineNumber();\n    if (lineNumber != null) {\n      fileLocation += \":\" + lineNumber;\n      var columnNumber = this.getColumnNumber();\n      if (columnNumber) {\n        fileLocation += \":\" + columnNumber;\n      }\n    }\n  }\n\n  var line = \"\";\n  var functionName = this.getFunctionName();\n  var addSuffix = true;\n  var isConstructor = this.isConstructor();\n  var isMethodCall = !(this.isToplevel() || isConstructor);\n  if (isMethodCall) {\n    var typeName = this.getTypeName();\n    var methodName = this.getMethodName();\n    if (functionName) {\n      if (typeName && functionName.indexOf(typeName) != 0) {\n        line += typeName + \".\";\n      }\n      line += functionName;\n      if (methodName && functionName.indexOf(\".\" + methodName) != functionName.length - methodName.length - 1) {\n        line += \" [as \" + methodName + \"]\";\n      }\n    } else {\n      line += typeName + \".\" + (methodName || \"<anonymous>\");\n    }\n  } else if (isConstructor) {\n    line += \"new \" + (functionName || \"<anonymous>\");\n  } else if (functionName) {\n    line += functionName;\n  } else {\n    line += fileLocation;\n    addSuffix = false;\n  }\n  if (addSuffix) {\n    line += \" (\" + fileLocation + \")\";\n  }\n  return line;\n}\n\nfunction cloneCallSite(frame) {\n  var object = {};\n  Object.getOwnPropertyNames(Object.getPrototypeOf(frame)).forEach(function(name) {\n    object[name] = /^(?:is|get)/.test(name) ? function() { return frame[name].call(frame); } : frame[name];\n  });\n  object.toString = CallSiteToString;\n  return object;\n}\n\nfunction wrapCallSite(frame) {\n  // Most call sites will return the source file from getFileName(), but code\n  // passed to eval() ending in \"//# sourceURL=...\" will return the source file\n  // from getScriptNameOrSourceURL() instead\n  var source = frame.getFileName() || frame.getScriptNameOrSourceURL();\n  if (source) {\n    var position = mapSourcePosition({\n      source: source,\n      line: frame.getLineNumber(),\n      column: frame.getColumnNumber() - 1\n    });\n    frame = cloneCallSite(frame);\n    frame.getFileName = function() { return position.source; };\n    frame.getLineNumber = function() { return position.line; };\n    frame.getColumnNumber = function() { return position.column + 1; };\n    frame.getScriptNameOrSourceURL = function() { return position.source; };\n    return frame;\n  }\n\n  // Code called using eval() needs special handling\n  var origin = frame.isEval() && frame.getEvalOrigin();\n  if (origin) {\n    origin = mapEvalOrigin(origin);\n    frame = cloneCallSite(frame);\n    frame.getEvalOrigin = function() { return origin; };\n    return frame;\n  }\n\n  // If we get here then we were unable to change the source position\n  return frame;\n}\n\n// This function is part of the V8 stack trace API, for more info see:\n// http://code.google.com/p/v8/wiki/JavaScriptStackTraceApi\nfunction prepareStackTrace(error, stack) {\n  if (emptyCacheBetweenOperations) {\n    fileContentsCache = {};\n    sourceMapCache = {};\n  }\n  return error + stack.map(function(frame) {\n    return '\\n    at ' + wrapCallSite(frame);\n  }).join('');\n}\n\n// Generate position and snippet of original source with pointer\nfunction getErrorSource(error) {\n  var match = /\\n    at [^(]+ \\((.*):(\\d+):(\\d+)\\)/.exec(error.stack);\n  if (match) {\n    var source = match[1];\n    var line = +match[2];\n    var column = +match[3];\n\n    // Support the inline sourceContents inside the source map\n    var contents = fileContentsCache[source];\n\n    // Support files on disk\n    if (!contents && fs.existsSync(source)) {\n      contents = fs.readFileSync(source, 'utf8');\n    }\n\n    // Format the line from the original source code like node does\n    if (contents) {\n      var code = contents.split(/(?:\\r\\n|\\r|\\n)/)[line - 1];\n      if (code) {\n        return '\\n' + source + ':' + line + '\\n' + code + '\\n' +\n          new Array(column).join(' ') + '^';\n      }\n    }\n  }\n  return null;\n}\n\n// Mimic node's stack trace printing when an exception escapes the process\nfunction handleUncaughtExceptions(error) {\n  if (!error || !error.stack) {\n    console.log('Uncaught exception:', error);\n  } else {\n    var source = getErrorSource(error);\n    if (source !== null) console.log(source);\n    console.log(error.stack);\n  }\n  process.exit(1);\n}\n\nexports.wrapCallSite = wrapCallSite;\nexports.getErrorSource = getErrorSource;\nexports.mapSourcePosition = mapSourcePosition;\nexports.retrieveSourceMap = retrieveSourceMap;\n\nexports.install = function(options) {\n  if (!alreadyInstalled) {\n    alreadyInstalled = true;\n    Error.prepareStackTrace = prepareStackTrace;\n\n    // Configure options\n    options = options || {};\n    var installHandler = 'handleUncaughtExceptions' in options ?\n      options.handleUncaughtExceptions : true;\n    emptyCacheBetweenOperations = 'emptyCacheBetweenOperations' in options ?\n      options.emptyCacheBetweenOperations : false;\n\n    // Allow sources to be found by methods other than reading the files\n    // directly from disk.\n    if (options.retrieveFile)\n      retrieveFile = options.retrieveFile;\n\n    // Allow source maps to be found by methods other than reading the files\n    // directly from disk.\n    if (options.retrieveSourceMap)\n      retrieveSourceMap = options.retrieveSourceMap;\n\n    // Provide the option to not install the uncaught exception handler. This is\n    // to support other uncaught exception handlers (in test frameworks, for\n    // example). If this handler is not installed and there are no other uncaught\n    // exception handlers, uncaught exceptions will be caught by node's built-in\n    // exception handler and the process will still be terminated. However, the\n    // generated JavaScript code will be shown above the stack trace instead of\n    // the original source code.\n    if (installHandler && !isInBrowser()) {\n      process.on('uncaughtException', handleUncaughtExceptions);\n    }\n  }\n};\n"]}