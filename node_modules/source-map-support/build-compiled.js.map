{"version":3,"sources":["build.js"],"names":[],"mappings":";;AAEA,IAAI,KAAK,QAAQ,IAAR,CAAL;AACJ,IAAI,cAAc,QAAQ,aAAR,CAAd;AACJ,IAAI,gBAAgB,QAAQ,eAAR,CAAhB;;AAEJ,SAAS,GAAT,CAAa,OAAb,EAAsB,QAAtB,EAAgC;AAC9B,UAAQ,GAAR,CAAY,OAAZ,EAD8B;AAE9B,gBAAc,IAAd,CAAmB,OAAnB,EAA4B,QAA5B,EAF8B;CAAhC;;;AAMA,GAAG,aAAH,CAAiB,UAAjB,EAA6B,qDAA7B;AACA,IAAI,6CAAJ,EAAmD,UAAS,KAAT,EAAgB,MAAhB,EAAwB;AACzE,MAAI,KAAJ,EAAW,MAAM,KAAN,CAAX;;;AADyE,MAIrE,SAAS,CACX,IADW,EAEX,+CAFW,EAGX,qDAHW,EAIX,KAJW,EAKX,IALW,CAKN,IALM,CAAT,CAJqE;AAUzE,MAAI,OAAO,CACT,oJADS,EAET,OAAO,OAAP,CAAe,WAAf,EAA4B,MAA5B,EAAoC,OAApC,CAA4C,IAAI,MAAJ,CAAW,YAAY,GAAZ,EAAiB,GAA5B,CAA5C,EAA8E,EAA9E,EAAkF,OAAlF,CAA0F,WAA1F,EAAuG,SAAvG,CAFS,EAGT,4BAHS,EAIT,IAJS,CAIJ,IAJI,CAAP;;;AAVqE,IAiBzE,CAAG,aAAH,CAAiB,UAAjB,EAA6B,YAAY,SAAZ,CAAsB;AACjD,uBAAmB,sBAAnB;AACA,iBAAa,eAAb;AACA,mBAAe,MAAf;AACA,aAAS,IAAT;GAJ2B,CAA7B,EAjByE;AAuBzE,MAAI,iEAAJ,EAAuE,UAAS,KAAT,EAAgB,MAAhB,EAAwB;AAC7F,QAAI,KAAJ,EAAW,MAAM,KAAN,CAAX;AACA,QAAI,OAAO,SAAS,IAAT,GAAgB,MAAhB,CAFkF;AAG7F,OAAG,UAAH,CAAc,UAAd,EAH6F;AAI7F,OAAG,aAAH,CAAiB,+BAAjB,EAAkD,IAAlD,EAJ6F;AAK7F,OAAG,aAAH,CAAiB,wCAAjB,EAA2D,IAA3D,EAL6F;GAAxB,CAAvE,CAvByE;CAAxB,CAAnD;;;AAiCA,IAAI,8EAAJ,EAAoF,UAAS,KAAT,EAAgB;AAClG,MAAI,KAAJ,EAAW,MAAM,KAAN,CAAX;CADkF,CAApF;;;AAKA,IAAI,qFAAJ,EAA2F,UAAS,KAAT,EAAgB;AACzG,MAAI,KAAJ,EAAW,MAAM,KAAN,CAAX;AACA,MAAI,oGAAJ,EAA0G,UAAS,KAAT,EAAgB;AACxH,QAAI,KAAJ,EAAW,MAAM,KAAN,CAAX;GADwG,CAA1G,CAFyG;CAAhB,CAA3F;;;AAQA,IAAI,kFAAJ,EAAwF,UAAS,KAAT,EAAgB;AACtG,MAAI,KAAJ,EAAW,MAAM,KAAN,CAAX;CADsF,CAAxF;;;AAKA,IAAI,iFAAJ,EAAuF,UAAS,KAAT,EAAgB;AACrG,MAAI,KAAJ,EAAW,MAAM,KAAN,CAAX;AACA,MAAI,WAAW,GAAG,YAAH,CAAgB,uBAAhB,EAAyC,MAAzC,CAAX,CAFiG;AAGrG,KAAG,aAAH,CAAiB,uBAAjB,EAA0C,SAAS,OAAT,CAAiB,4BAAjB,EAA+C,EAA/C,CAA1C,EAHqG;CAAhB,CAAvF","file":"build-compiled.js","sourcesContent":["#!/usr/bin/env node\n\nvar fs = require('fs');\nvar querystring = require('querystring');\nvar child_process = require('child_process');\n\nfunction run(command, callback) {\n  console.log(command);\n  child_process.exec(command, callback);\n}\n\n// Use browserify to package up source-map-support.js\nfs.writeFileSync('.temp.js', 'sourceMapSupport = require(\"./source-map-support\");');\nrun('node_modules/browserify/bin/cmd.js .temp.js', function(error, stdout) {\n  if (error) throw error;\n\n  // Wrap the code so it works both as a normal <script> module and as an AMD module\n  var header = [\n    '/*',\n    ' * Support for source maps in V8 stack traces',\n    ' * https://github.com/evanw/node-source-map-support',\n    ' */',\n  ].join('\\n');\n  var code = [\n    '(this[\"define\"] || function(name, callback) { this[\"sourceMapSupport\"] = callback(); })(\"browser-source-map-support\", function(sourceMapSupport) {',\n    stdout.replace(/\\bbyte\\b/g, 'bite').replace(new RegExp(__dirname + '/', 'g'), '').replace(/@license/g, 'license'),\n    'return sourceMapSupport});',\n  ].join('\\n');\n\n  // Use the online Google Closure Compiler service for minification\n  fs.writeFileSync('.temp.js', querystring.stringify({\n    compilation_level: 'SIMPLE_OPTIMIZATIONS',\n    output_info: 'compiled_code',\n    output_format: 'text',\n    js_code: code\n  }));\n  run('curl -d @.temp.js \"http://closure-compiler.appspot.com/compile\"', function(error, stdout) {\n    if (error) throw error;\n    var code = header + '\\n' + stdout;\n    fs.unlinkSync('.temp.js');\n    fs.writeFileSync('browser-source-map-support.js', code);\n    fs.writeFileSync('amd-test/browser-source-map-support.js', code);\n  });\n});\n\n// Build the AMD test\nrun('node_modules/coffee-script/bin/coffee --map --compile amd-test/script.coffee', function(error) {\n  if (error) throw error;\n});\n\n// Build the browserify test\nrun('node_modules/coffee-script/bin/coffee --map --compile browserify-test/script.coffee', function(error) {\n  if (error) throw error;\n  run('node_modules/browserify/bin/cmd.js --debug browserify-test/script.js > browserify-test/compiled.js', function(error) {\n    if (error) throw error;\n  })\n});\n\n// Build the browser test\nrun('node_modules/coffee-script/bin/coffee --map --compile browser-test/script.coffee', function(error) {\n  if (error) throw error;\n});\n\n// Build the header test\nrun('node_modules/coffee-script/bin/coffee --map --compile header-test/script.coffee', function(error) {\n  if (error) throw error;\n  var contents = fs.readFileSync('header-test/script.js', 'utf8');\n  fs.writeFileSync('header-test/script.js', contents.replace(/\\/\\/# sourceMappingURL=.*/g, ''))\n});\n"]}