{"version":3,"sources":["umask_sync.js"],"names":[],"mappings":";;AAAA,IAAI,SAAS,QAAQ,KAAR,CAAT;AACJ,IAAI,OAAO,QAAQ,MAAR,CAAP;AACJ,IAAI,KAAK,QAAQ,IAAR,CAAL;AACJ,IAAI,SAAS,GAAG,MAAH,IAAa,KAAK,MAAL;AAC1B,IAAI,OAAO,QAAQ,KAAR,EAAe,IAAf;AACX,IAAI,QAAQ,SAAS,MAAT,EAAiB,CAAjB,CAAR;AACJ,IAAI,QAAQ,SAAS,MAAT,EAAiB,CAAjB,CAAR;;AAEJ,KAAK,kBAAL,EAAyB,UAAU,CAAV,EAAa;AAClC,MAAE,IAAF,CAAO,CAAP,EADkC;AAElC,QAAI,IAAI,KAAK,KAAL,CAAW,KAAK,MAAL,KAAgB,KAAK,GAAL,CAAS,EAAT,EAAY,CAAZ,CAAhB,CAAX,CAA2C,QAA3C,CAAoD,EAApD,CAAJ,CAF8B;AAGlC,QAAI,IAAI,KAAK,KAAL,CAAW,KAAK,MAAL,KAAgB,KAAK,GAAL,CAAS,EAAT,EAAY,CAAZ,CAAhB,CAAX,CAA2C,QAA3C,CAAoD,EAApD,CAAJ,CAH8B;AAIlC,QAAI,IAAI,KAAK,KAAL,CAAW,KAAK,MAAL,KAAgB,KAAK,GAAL,CAAS,EAAT,EAAY,CAAZ,CAAhB,CAAX,CAA2C,QAA3C,CAAoD,EAApD,CAAJ,CAJ8B;;AAMlC,QAAI,OAAO,UAAU,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAQ,IAAR,CAAa,GAAb,CAAV,CANuB;;AAQlC,QAAI;AACA,eAAO,IAAP,CAAY,IAAZ,EADA;KAAJ,CAEE,OAAO,GAAP,EAAY;AACV,UAAE,IAAF,CAAO,GAAP,EADU;AAEV,eAAO,EAAE,GAAF,EAAP,CAFU;KAAZ;;AAKF,WAAO,IAAP,EAAa,UAAU,EAAV,EAAc;AACvB,UAAE,EAAF,CAAK,EAAL,EAAS,cAAT,EADuB;AAEvB,WAAG,IAAH,CAAQ,IAAR,EAAc,UAAU,GAAV,EAAe,IAAf,EAAqB;AAC/B,cAAE,OAAF,CAAU,GAAV,EAD+B;AAE/B,cAAE,KAAF,CAAQ,KAAK,IAAL,GAAY,KAAZ,EAAoB,QAAS,CAAC,QAAQ,KAAR,EAAD,CAArC,CAF+B;AAG/B,cAAE,EAAF,CAAK,KAAK,WAAL,EAAL,EAAyB,wBAAzB,EAH+B;SAArB,CAAd,CAFuB;KAAd,CAAb,CAfkC;CAAb,CAAzB","file":"umask_sync-compiled.js","sourcesContent":["var mkdirp = require('../');\nvar path = require('path');\nvar fs = require('fs');\nvar exists = fs.exists || path.exists;\nvar test = require('tap').test;\nvar _0777 = parseInt('0777', 8);\nvar _0755 = parseInt('0755', 8);\n\ntest('umask sync modes', function (t) {\n    t.plan(4);\n    var x = Math.floor(Math.random() * Math.pow(16,4)).toString(16);\n    var y = Math.floor(Math.random() * Math.pow(16,4)).toString(16);\n    var z = Math.floor(Math.random() * Math.pow(16,4)).toString(16);\n\n    var file = '/tmp/' + [x,y,z].join('/');\n\n    try {\n        mkdirp.sync(file);\n    } catch (err) {\n        t.fail(err);\n        return t.end();\n    }\n\n    exists(file, function (ex) {\n        t.ok(ex, 'file created');\n        fs.stat(file, function (err, stat) {\n            t.ifError(err);\n            t.equal(stat.mode & _0777, (_0777 & (~process.umask())));\n            t.ok(stat.isDirectory(), 'target not a directory');\n        });\n    });\n});\n"]}