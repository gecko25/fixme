{"version":3,"sources":["return_sync.js"],"names":[],"mappings":";;AAAA,IAAI,SAAS,QAAQ,KAAR,CAAT;AACJ,IAAI,OAAO,QAAQ,MAAR,CAAP;AACJ,IAAI,KAAK,QAAQ,IAAR,CAAL;AACJ,IAAI,OAAO,QAAQ,KAAR,EAAe,IAAf;;AAEX,KAAK,cAAL,EAAqB,UAAU,CAAV,EAAa;AAC9B,MAAE,IAAF,CAAO,CAAP,EAD8B;AAE9B,QAAI,IAAI,KAAK,KAAL,CAAW,KAAK,MAAL,KAAgB,KAAK,GAAL,CAAS,EAAT,EAAY,CAAZ,CAAhB,CAAX,CAA2C,QAA3C,CAAoD,EAApD,CAAJ,CAF0B;AAG9B,QAAI,IAAI,KAAK,KAAL,CAAW,KAAK,MAAL,KAAgB,KAAK,GAAL,CAAS,EAAT,EAAY,CAAZ,CAAhB,CAAX,CAA2C,QAA3C,CAAoD,EAApD,CAAJ,CAH0B;AAI9B,QAAI,IAAI,KAAK,KAAL,CAAW,KAAK,MAAL,KAAgB,KAAK,GAAL,CAAS,EAAT,EAAY,CAAZ,CAAhB,CAAX,CAA2C,QAA3C,CAAoD,EAApD,CAAJ,CAJ0B;;AAM9B,QAAI,OAAO,UAAU,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAQ,IAAR,CAAa,GAAb,CAAV;;;;;;AANmB,QAY1B,OAAO,OAAO,IAAP,CAAY,IAAZ,CAAP,CAZ0B;AAa9B,MAAE,KAAF,CAAQ,IAAR,EAAc,UAAU,CAAV,CAAd;;;AAb8B,QAgB9B,GAAO,OAAO,IAAP,CAAY,IAAZ,CAAP,CAhB8B;AAiB9B,MAAE,KAAF,CAAQ,IAAR,EAAc,IAAd,EAjB8B;CAAb,CAArB","file":"return_sync-compiled.js","sourcesContent":["var mkdirp = require('../');\nvar path = require('path');\nvar fs = require('fs');\nvar test = require('tap').test;\n\ntest('return value', function (t) {\n    t.plan(2);\n    var x = Math.floor(Math.random() * Math.pow(16,4)).toString(16);\n    var y = Math.floor(Math.random() * Math.pow(16,4)).toString(16);\n    var z = Math.floor(Math.random() * Math.pow(16,4)).toString(16);\n\n    var file = '/tmp/' + [x,y,z].join('/');\n\n    // should return the first dir created.\n    // By this point, it would be profoundly surprising if /tmp didn't\n    // already exist, since every other test makes things in there.\n    // Note that this will throw on failure, which will fail the test.\n    var made = mkdirp.sync(file);\n    t.equal(made, '/tmp/' + x);\n\n    // making the same file again should have no effect.\n    made = mkdirp.sync(file);\n    t.equal(made, null);\n});\n"]}