{"version":3,"sources":["short.js"],"names":[],"mappings":";;AAAA,IAAI,QAAQ,QAAQ,KAAR,CAAR;AACJ,IAAI,OAAO,QAAQ,MAAR,CAAP;;AAEJ,KAAK,oBAAL,EAA2B,UAAU,CAAV,EAAa;AACpC,MAAE,IAAF,CAAO,CAAP,EADoC;AAEpC,MAAE,SAAF,CAAY,MAAM,CAAE,OAAF,CAAN,CAAZ,EAAgC,EAAE,GAAG,GAAH,EAAQ,GAAG,EAAH,EAA1C,EAFoC;AAGpC,MAAE,SAAF,CACI,MAAM,CAAE,MAAF,EAAU,KAAV,CAAN,CADJ,EAEI,EAAE,GAAG,IAAH,EAAS,GAAG,IAAH,EAAS,GAAG,GAAH,EAAQ,GAAG,EAAH,EAFhC,EAHoC;CAAb,CAA3B;;AASA,KAAK,OAAL,EAAc,UAAU,CAAV,EAAa;AACvB,MAAE,SAAF,CACI,MAAM,CAAE,IAAF,CAAN,CADJ,EAEI,EAAE,GAAI,IAAJ,EAAU,GAAI,EAAJ,EAFhB,EAGI,eAHJ,EADuB;AAMvB,MAAE,SAAF,CACI,MAAM,CAAE,KAAF,EAAS,KAAT,EAAgB,KAAhB,CAAN,CADJ,EAEI,EAAE,GAAI,CAAE,KAAF,EAAS,KAAT,EAAgB,KAAhB,CAAJ,EAFN,EAGI,MAHJ,EANuB;AAWvB,MAAE,SAAF,CACI,MAAM,CAAE,OAAF,CAAN,CADJ,EAEI,EAAE,GAAI,IAAJ,EAAU,GAAI,IAAJ,EAAU,GAAI,IAAJ,EAAU,GAAI,IAAJ,EAAU,GAAI,EAAJ,EAF9C,EAGI,OAHJ,EAXuB;AAgBvB,MAAE,SAAF,CACI,MAAM,CAAE,OAAF,EAAW,MAAX,CAAN,CADJ,EAEI,EAAE,GAAI,IAAJ,EAAU,GAAI,IAAJ,EAAU,GAAI,IAAJ,EAAU,GAAI,MAAJ,EAAY,GAAI,EAAJ,EAFhD,EAGI,kBAHJ,EAhBuB;AAqBvB,MAAE,SAAF,CACI,MAAM,CAAE,IAAF,EAAQ,WAAR,CAAN,CADJ,EAEI,EAAE,GAAI,WAAJ,EAAiB,GAAI,EAAJ,EAFvB,EAGI,eAHJ,EArBuB;AA0BvB,MAAE,SAAF,CACI,MAAM,CAAE,IAAF,EAAQ,WAAR,EAAqB,IAArB,EAA2B,KAA3B,CAAN,CADJ,EAEI,EAAE,GAAI,WAAJ,EAAiB,GAAI,GAAJ,EAAS,GAAI,EAAJ,EAFhC,EAGI,gBAHJ,EA1BuB;AA+BvB,MAAE,GAAF,GA/BuB;CAAb,CAAd;;AAkCA,KAAK,8BAAL,EAAqC,UAAU,CAAV,EAAa;AAC9C,MAAE,IAAF,CACI,MAAM,CAAE,IAAF,EAAQ,WAAR,EAAqB,KAArB,EAA4B,KAA5B,EAAmC,WAAnC,CAAN,CADJ,EAEI;AACI,WAAI,IAAJ,EAAU,GAAI,GAAJ,EAAS,GAAI,WAAJ;AACnB,WAAI,CAAE,WAAF,CAAJ;KAJR,EAD8C;AAQ9C,MAAE,GAAF,GAR8C;CAAb,CAArC;;AAWA,KAAK,gBAAL,EAAuB,UAAU,CAAV,EAAa;AAChC,MAAE,SAAF,CACI,MAAM,CAAE,IAAF,EAAQ,WAAR,EAAqB,KAArB,EAA4B,KAA5B,EAAmC,WAAnC,CAAN,CADJ,EAEI;AACI,WAAI,IAAJ,EAAU,GAAI,GAAJ,EAAS,GAAI,WAAJ;AACnB,WAAI,CAAE,WAAF,CAAJ;KAJR,EADgC;AAQhC,MAAE,GAAF,GARgC;CAAb,CAAvB","file":"short-compiled.js","sourcesContent":["var parse = require('../');\nvar test = require('tape');\n\ntest('numeric short args', function (t) {\n    t.plan(2);\n    t.deepEqual(parse([ '-n123' ]), { n: 123, _: [] });\n    t.deepEqual(\n        parse([ '-123', '456' ]),\n        { 1: true, 2: true, 3: 456, _: [] }\n    );\n});\n\ntest('short', function (t) {\n    t.deepEqual(\n        parse([ '-b' ]),\n        { b : true, _ : [] },\n        'short boolean'\n    );\n    t.deepEqual(\n        parse([ 'foo', 'bar', 'baz' ]),\n        { _ : [ 'foo', 'bar', 'baz' ] },\n        'bare'\n    );\n    t.deepEqual(\n        parse([ '-cats' ]),\n        { c : true, a : true, t : true, s : true, _ : [] },\n        'group'\n    );\n    t.deepEqual(\n        parse([ '-cats', 'meow' ]),\n        { c : true, a : true, t : true, s : 'meow', _ : [] },\n        'short group next'\n    );\n    t.deepEqual(\n        parse([ '-h', 'localhost' ]),\n        { h : 'localhost', _ : [] },\n        'short capture'\n    );\n    t.deepEqual(\n        parse([ '-h', 'localhost', '-p', '555' ]),\n        { h : 'localhost', p : 555, _ : [] },\n        'short captures'\n    );\n    t.end();\n});\n \ntest('mixed short bool and capture', function (t) {\n    t.same(\n        parse([ '-h', 'localhost', '-fp', '555', 'script.js' ]),\n        {\n            f : true, p : 555, h : 'localhost',\n            _ : [ 'script.js' ]\n        }\n    );\n    t.end();\n});\n \ntest('short and long', function (t) {\n    t.deepEqual(\n        parse([ '-h', 'localhost', '-fp', '555', 'script.js' ]),\n        {\n            f : true, p : 555, h : 'localhost',\n            _ : [ 'script.js' ]\n        }\n    );\n    t.end();\n});\n"]}